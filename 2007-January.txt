From admin at berlios.de  Sun Jan  7 00:24:52 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 7 Jan 2007 00:24:52 +0100 (CET)
Subject: [Destar-dev] [Patch #1806] some bugfix, new features
Message-ID: <200701062324.l06NOqiB006247@unicorn.berlios.de>

Patch #1806 has been updated. 

Project: destar
Category: None
Status: Open
Submitted by: hholzer
Assigned to : none
Summary: some bugfix, new features

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/patch/?func=detailpatch&patch_id=1806&group_id=2112


From admin at berlios.de  Sun Jan  7 00:25:17 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 7 Jan 2007 00:25:17 +0100 (CET)
Subject: [Destar-dev] [Patch #1807] some bugfix, new features
Message-ID: <200701062325.l06NPHAi006274@unicorn.berlios.de>

Patch #1807 has been updated. 

Project: destar
Category: None
Status: Open
Submitted by: hholzer
Assigned to : none
Summary: some bugfix, new features

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/patch/?func=detailpatch&patch_id=1807&group_id=2112


From admin at berlios.de  Sun Jan  7 00:43:32 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 7 Jan 2007 00:43:32 +0100 (CET)
Subject: [Destar-dev] [Patch #1807] some bugfix, new features
Message-ID: <200701062343.l06NhW5M007395@unicorn.berlios.de>

Patch #1807 has been updated. 

Project: destar
Category: None
Status: Open
Submitted by: hholzer
Assigned to : none
Summary: some bugfix, new features

Follow-Ups:

Date: 2007-Jan-07 00:43
By: hholzer

Comment:
*) ignore modules if not exists (solves Bug #9708)
*) fix recording
*) add defineable callerid number on sip and iax trunks
    (some provider will verify this.)
*) add sip from domain options
    (for some provider you need this option.)
*) add callerid number change on incoming calls.
    (this gives you the option to add a "0" in front of the number, so if your phone have a missed call list, you dont need to retype the number to call back.)
*) added total timeout on queues, on timeout you can jump to a extension.
*) add DID custom map.
  (like 034562344XX -> pbx/XX, not all provider will cut the leading numbers.)
*) added TOS Field to sip options, making some inputs optional.

-------------------------------------------------------

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/patch/?func=detailpatch&patch_id=1807&group_id=2112


From shidan at gmail.com  Sun Jan  7 11:09:14 2007
From: shidan at gmail.com (Shidan)
Date: Sun, 7 Jan 2007 05:09:14 -0500
Subject: [Destar-dev] No SIP Phones
Message-ID: <429b380e0701070209i15c7dac9ye241ce9fc6ca095e@mail.gmail.com>

Hi I recently downloaded and installed Destar using apt-get on ubuntu,
in the phone section there is no sip phones, just a sip eqygi trunk.
Im sure that setting up a sip phone is something that has been
obviously included what am I missing here in terms of understanding?


From shidan at gmail.com  Sun Jan  7 11:18:56 2007
From: shidan at gmail.com (Shidan)
Date: Sun, 7 Jan 2007 05:18:56 -0500
Subject: [Destar-dev] No SIP Phones
In-Reply-To: <429b380e0701070209i15c7dac9ye241ce9fc6ca095e@mail.gmail.com>
References: <429b380e0701070209i15c7dac9ye241ce9fc6ca095e@mail.gmail.com>
Message-ID: <429b380e0701070218o4d1108bj5f3fbb99b6d58e15@mail.gmail.com>

Ok now that I added an IAX Phone, it magically appeared on the form
after a reload.

On 1/7/07, Shidan <shidan at gmail.com> wrote:
> Hi I recently downloaded and installed Destar using apt-get on ubuntu,
> in the phone section there is no sip phones, just a sip eqygi trunk.
> Im sure that setting up a sip phone is something that has been
> obviously included what am I missing here in terms of understanding?
>


From admin at berlios.de  Sun Jan  7 22:18:31 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 7 Jan 2007 22:18:31 +0100 (CET)
Subject: [Destar-dev] [Patch #1807] some bugfix, new features
Message-ID: <200701072118.l07LIVlk022674@unicorn.berlios.de>

Patch #1807 has been updated. 

Project: destar
Category: None
Status: Open
Submitted by: hholzer
Assigned to : none
Summary: some bugfix, new features

Follow-Ups:

Date: 2007-Jan-07 22:18
By: hholzer

Comment:
*) changed some defaults (the default for max. call time to 5min, was not the best one ;-)
*) added sip default moh setting
*) added support for early media in dial macro
  (todo add option at phone setting.)
*) added parallel ringing support in dial macro
  (todo add option at phone setting.)
*) added cfbs and cfto for trunk lines (to support feature request, for cfbs/cfto only for external callers.)

-------------------------------------------------------

Date: 2007-Jan-07 00:43
By: hholzer

Comment:
*) ignore modules if not exists (solves Bug #9708)
*) fix recording
*) add defineable callerid number on sip and iax trunks
    (some provider will verify this.)
*) add sip from domain options
    (for some provider you need this option.)
*) add callerid number change on incoming calls.
    (this gives you the option to add a "0" in front of the number, so if your phone have a missed call list, you dont need to retype the number to call back.)
*) added total timeout on queues, on timeout you can jump to a extension.
*) add DID custom map.
  (like 034562344XX -> pbx/XX, not all provider will cut the leading numbers.)
*) added TOS Field to sip options, making some inputs optional.

-------------------------------------------------------

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/patch/?func=detailpatch&patch_id=1807&group_id=2112


From admin at berlios.de  Sun Jan  7 22:20:32 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 7 Jan 2007 22:20:32 +0100 (CET)
Subject: [Destar-dev] [Patch #1807] some bugfix, new features
Message-ID: <200701072120.l07LKWsV022765@unicorn.berlios.de>

Patch #1807 has been updated. 

Project: destar
Category: None
Status: Open
Submitted by: hholzer
Assigned to : none
Summary: some bugfix, new features

Follow-Ups:

Date: 2007-Jan-07 22:20
By: hholzer

Comment:
*) changed some defaults (the default for max. call time to 5min, was not the best one ;-)
*) added sip default moh setting
*) added support for early media in dial macro
  (todo add option at phone setting.)
*) added parallel ringing support in dial macro
  (todo add option at phone setting.)
*) added cfbs and cfto for trunk lines (to support feature request, for cfbs/cfto only for external callers.)

-------------------------------------------------------

Date: 2007-Jan-07 00:43
By: hholzer

Comment:
*) ignore modules if not exists (solves Bug #9708)
*) fix recording
*) add defineable callerid number on sip and iax trunks
    (some provider will verify this.)
*) add sip from domain options
    (for some provider you need this option.)
*) add callerid number change on incoming calls.
    (this gives you the option to add a "0" in front of the number, so if your phone have a missed call list, you dont need to retype the number to call back.)
*) added total timeout on queues, on timeout you can jump to a extension.
*) add DID custom map.
  (like 034562344XX -> pbx/XX, not all provider will cut the leading numbers.)
*) added TOS Field to sip options, making some inputs optional.

-------------------------------------------------------

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/patch/?func=detailpatch&patch_id=1807&group_id=2112


From admin at berlios.de  Sun Jan  7 22:20:46 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 7 Jan 2007 22:20:46 +0100 (CET)
Subject: [Destar-dev] [Patch #1807] some bugfix, new features
Message-ID: <200701072120.l07LKkN9022792@unicorn.berlios.de>

Patch #1807 has been updated. 

Project: destar
Category: None
Status: Open
Submitted by: hholzer
Assigned to : none
Summary: some bugfix, new features

Follow-Ups:

Date: 2007-Jan-07 22:20
By: hholzer

Comment:
*) changed some defaults (the default for max. call time to 5min, was not the best one ;-)
*) added sip default moh setting
*) added support for early media in dial macro
  (todo add option at phone setting.)
*) added parallel ringing support in dial macro
  (todo add option at phone setting.)
*) added cfbs and cfto for trunk lines (to support feature request, for cfbs/cfto only for external callers.)

-------------------------------------------------------

Date: 2007-Jan-07 00:43
By: hholzer

Comment:
*) ignore modules if not exists (solves Bug #9708)
*) fix recording
*) add defineable callerid number on sip and iax trunks
    (some provider will verify this.)
*) add sip from domain options
    (for some provider you need this option.)
*) add callerid number change on incoming calls.
    (this gives you the option to add a "0" in front of the number, so if your phone have a missed call list, you dont need to retype the number to call back.)
*) added total timeout on queues, on timeout you can jump to a extension.
*) add DID custom map.
  (like 034562344XX -> pbx/XX, not all provider will cut the leading numbers.)
*) added TOS Field to sip options, making some inputs optional.

-------------------------------------------------------

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/patch/?func=detailpatch&patch_id=1807&group_id=2112


From admin at berlios.de  Sun Jan  7 23:07:17 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 7 Jan 2007 23:07:17 +0100 (CET)
Subject: [Destar-dev] [Patch #1807] some bugfix, new features
Message-ID: <200701072207.l07M7H7N025330@unicorn.berlios.de>

Patch #1807 has been updated. 

Project: destar
Category: None
Status: Open
Submitted by: hholzer
Assigned to : none
Summary: some bugfix, new features

Follow-Ups:

Date: 2007-Jan-07 22:20
By: hholzer

Comment:
*) changed some defaults (the default for max. call time to 5min, was not the best one ;-)
*) added sip default moh setting
*) added support for early media in dial macro
  (todo add option at phone setting.)
*) added parallel ringing support in dial macro
  (todo add option at phone setting.)
*) added cfbs and cfto for trunk lines (to support feature request, for cfbs/cfto only for external callers.)

-------------------------------------------------------

Date: 2007-Jan-07 00:43
By: hholzer

Comment:
*) ignore modules if not exists (solves Bug #9708)
*) fix recording
*) add defineable callerid number on sip and iax trunks
    (some provider will verify this.)
*) add sip from domain options
    (for some provider you need this option.)
*) add callerid number change on incoming calls.
    (this gives you the option to add a "0" in front of the number, so if your phone have a missed call list, you dont need to retype the number to call back.)
*) added total timeout on queues, on timeout you can jump to a extension.
*) add DID custom map.
  (like 034562344XX -> pbx/XX, not all provider will cut the leading numbers.)
*) added TOS Field to sip options, making some inputs optional.

-------------------------------------------------------

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/patch/?func=detailpatch&patch_id=1807&group_id=2112


From admin at berlios.de  Tue Jan  9 00:24:47 2007
From: admin at berlios.de (admin at berlios.de)
Date: Tue, 9 Jan 2007 00:24:47 +0100 (CET)
Subject: [Destar-dev] [Patch #1807] some bugfix, new features
Message-ID: <200701082324.l08NOlRo001373@unicorn.berlios.de>

Patch #1807 has been updated. 

Project: destar
Category: None
Status: Open
Submitted by: hholzer
Assigned to : none
Summary: some bugfix, new features

Follow-Ups:

Date: 2007-Jan-09 00:24
By: hholzer

Comment:
Ok, today i didnt have that much time ;-)

first attempt to support devstate module from bristaff.
*) extended call forward option, for toggle switch
added code for devstate hint (let the function led shine bright on your phone, when CF is on ;-)
*) added petantic option at sip global configuration
(newer snom firmware forces you to use this switch, if you want to use # in your dialplan :-()
*) internal: added label support for appendexten

-------------------------------------------------------

Date: 2007-Jan-07 22:20
By: hholzer

Comment:
*) changed some defaults (the default for max. call time to 5min, was not the best one ;-)
*) added sip default moh setting
*) added support for early media in dial macro
  (todo add option at phone setting.)
*) added parallel ringing support in dial macro
  (todo add option at phone setting.)
*) added cfbs and cfto for trunk lines (to support feature request, for cfbs/cfto only for external callers.)

-------------------------------------------------------

Date: 2007-Jan-07 00:43
By: hholzer

Comment:
*) ignore modules if not exists (solves Bug #9708)
*) fix recording
*) add defineable callerid number on sip and iax trunks
    (some provider will verify this.)
*) add sip from domain options
    (for some provider you need this option.)
*) add callerid number change on incoming calls.
    (this gives you the option to add a "0" in front of the number, so if your phone have a missed call list, you dont need to retype the number to call back.)
*) added total timeout on queues, on timeout you can jump to a extension.
*) add DID custom map.
  (like 034562344XX -> pbx/XX, not all provider will cut the leading numbers.)
*) added TOS Field to sip options, making some inputs optional.

-------------------------------------------------------

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/patch/?func=detailpatch&patch_id=1807&group_id=2112


From admin at berlios.de  Tue Jan  9 00:25:23 2007
From: admin at berlios.de (admin at berlios.de)
Date: Tue, 9 Jan 2007 00:25:23 +0100 (CET)
Subject: [Destar-dev] [Patch #1807] some bugfix, new features
Message-ID: <200701082325.l08NPNdA001411@unicorn.berlios.de>

Patch #1807 has been updated. 

Project: destar
Category: None
Status: Open
Submitted by: hholzer
Assigned to : none
Summary: some bugfix, new features

Follow-Ups:

Date: 2007-Jan-09 00:24
By: hholzer

Comment:
Ok, today i didnt have that much time ;-)

first attempt to support devstate module from bristaff.
*) extended call forward option, for toggle switch
added code for devstate hint (let the function led shine bright on your phone, when CF is on ;-)
*) added petantic option at sip global configuration
(newer snom firmware forces you to use this switch, if you want to use # in your dialplan :-()
*) internal: added label support for appendexten

-------------------------------------------------------

Date: 2007-Jan-07 22:20
By: hholzer

Comment:
*) changed some defaults (the default for max. call time to 5min, was not the best one ;-)
*) added sip default moh setting
*) added support for early media in dial macro
  (todo add option at phone setting.)
*) added parallel ringing support in dial macro
  (todo add option at phone setting.)
*) added cfbs and cfto for trunk lines (to support feature request, for cfbs/cfto only for external callers.)

-------------------------------------------------------

Date: 2007-Jan-07 00:43
By: hholzer

Comment:
*) ignore modules if not exists (solves Bug #9708)
*) fix recording
*) add defineable callerid number on sip and iax trunks
    (some provider will verify this.)
*) add sip from domain options
    (for some provider you need this option.)
*) add callerid number change on incoming calls.
    (this gives you the option to add a "0" in front of the number, so if your phone have a missed call list, you dont need to retype the number to call back.)
*) added total timeout on queues, on timeout you can jump to a extension.
*) add DID custom map.
  (like 034562344XX -> pbx/XX, not all provider will cut the leading numbers.)
*) added TOS Field to sip options, making some inputs optional.

-------------------------------------------------------

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/patch/?func=detailpatch&patch_id=1807&group_id=2112


From alejandro.rios at avatar.com.co  Fri Jan 12 22:02:16 2007
From: alejandro.rios at avatar.com.co (Alejandro Rios =?ISO-8859-1?Q?Pe=F1a?=)
Date: Fri, 12 Jan 2007 16:02:16 -0500
Subject: [Destar-dev] Destar, Developer access
In-Reply-To: <42545.127.0.0.1.1168389173.squirrel@localhost>
References: <200701042350.l04NosEt027884@unicorn.berlios.de>
	<1168362599.3428.85.camel@localhost>
	<42545.127.0.0.1.1168389173.squirrel@localhost>
Message-ID: <1168635737.3263.146.camel@localhost>

Hello Harald.

I just gave you access as a destar developer. Please observe the
following aditional recommendations:

-We try to do small non-breaking commits. If we want to do a _big_
change on the code, like architecture or scope, we preffer to make a svn
brach for it, as you can see we are doing for quixote2 migration.

-We've been using the "Features request" section of berlios to keep
track of new features we want to add and users want to have, even if we
already have the code ready to commit.

-We also use the "Bug tracking system" of berlios to file the bugs we
find, even if we correct them imediatly.

-We hang up very often on the irc channel, feel free to join.

That's all.

Wellcome again!.

Alejandro R?os.

El mi?, 10-01-2007 a las 01:32 +0100, Harald Holzer escribi?:
> > The idea is to separate the contexts completly, so that you can re-use
> > extension numbers across several virtual PBXs.
> >
> > Also, there should be a Global Configurator user, and a Virtual PBX
> > administration user, that could only modify extensions and applications
> > for his own PBX, without affecting others.
> 
> Ups, i didnt check, that the virtual pbx function works already quite good.
> (Currently i use destar mostly for single pbx environment.)
> 
> regard,
> Harald
> 
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Esta parte del mensaje est? firmada	digitalmente
URL: <https://lists.berlios.de/pipermail/destar-dev/attachments/20070112/b70270f8/attachment.pgp>

From santiago at mail.berlios.de  Sat Jan 13 22:02:03 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Sat, 13 Jan 2007 22:02:03 +0100
Subject: [Destar-dev] r549 - branches/quixote2
Message-ID: <200701132102.l0DL236d023795@sheep.berlios.de>

Author: santiago
Date: 2007-01-13 22:02:03 +0100 (Sat, 13 Jan 2007)
New Revision: 549

Modified:
   branches/quixote2/CHANGELOG.txt
   branches/quixote2/Templates.ptl
   branches/quixote2/page_main.ptl
Log:
* Deleted some debug prints.



Modified: branches/quixote2/CHANGELOG.txt
===================================================================
--- branches/quixote2/CHANGELOG.txt	2006-12-29 05:29:14 UTC (rev 548)
+++ branches/quixote2/CHANGELOG.txt	2007-01-13 21:02:03 UTC (rev 549)
@@ -1,3 +1,6 @@
+2007-01-13:
+* Deleted some debug prints.
+
 2006-12-28:
 * page_main and Templates: fixed menus displaying.
 * page_config_trunks.ptl: fixed typo.

Modified: branches/quixote2/Templates.ptl
===================================================================
--- branches/quixote2/Templates.ptl	2006-12-29 05:29:14 UTC (rev 548)
+++ branches/quixote2/Templates.ptl	2007-01-13 21:02:03 UTC (rev 549)
@@ -106,7 +106,6 @@
 			attr = self.attrs.get(x,y)
 			hide = False
 			elem = 'td'
-			#print "attr:", attr
 			if attr:
 				for k in attr:
 					if k == '__hide':
@@ -249,10 +248,8 @@
 
 	def calcMenu(root='', n=0):
 		m = []
-		print stack
 		try:
 			obj = stack[n]
-			print "obj = %s" % obj
 		except IndexError:
 			return
 		try:

Modified: branches/quixote2/page_main.ptl
===================================================================
--- branches/quixote2/page_main.ptl	2006-12-29 05:29:14 UTC (rev 548)
+++ branches/quixote2/page_main.ptl	2007-01-13 21:02:03 UTC (rev 549)
@@ -61,8 +61,6 @@
 
 	def __init__(self):
 
-		print "init"
-
 		# Import all cfg_*.py files once when the module loads.
 		for s in os.listdir(backend.CONFIGLETS_DIR):
 			#continue
@@ -73,11 +71,9 @@
 			m = None
 			if s.endswith('.ptl'):
 				s= s[:-4]
-				#print "Importing", s
 				m = __import__(s)
 			elif s.endswith('.py'):
 				s = s[:-3]
-				#print "Importing", s
 				m =  __import__(s)
 			if m:
 				for a in ('_q_parent', '_q_title', '_q_access'):
@@ -107,43 +103,30 @@
 			if s == 'page_main':
 				continue
 			
-			print "modulo %s" % s
-			
 			this_mod = sys.modules[s].Page
 			if this_mod.__dict__.has_key('_q_test') and not this_mod()._q_test():
 				continue
 
 			try:
 				parent_mod = sys.modules[this_mod._q_parent].Page
-				print "parent %s" % parent_mod
 			except KeyError:
 				print "Note: %s does not exist, menu is now garbled" % this_mod._q_parent
 				parent_mod = sys.modules['page_main'].Page
 			s = s[5:]	# strip 'page_'
 
-			#print s
-			#print "this:", this_mod
-			#print "parent:", parent_mod
-
 			# Append module to parent's menu and export-list
 			link = this_mod._q_link
-			print "link %s %s" % (this_mod, this_mod._q_link)
 			#parent_mod._q_menu.append( (link, this_mod._q_title, this_mod._q_desc, this_mod._q_level, this_mod))
 			if this_mod._q_title:
-				print "a?adiendo %s a %s" % (this_mod, parent_mod)
 				parent_mod._q_menu.append( this_mod )
 			parent_mod._q_exports.append( link )
 			# Make this module known in the parent's module namespace
 			#parent_mod.__dict__[link] = this_mod
 			#import pdb; pdb.set_trace()
 			setattr(parent_mod, link, this_mod())
-			print parent_mod.__dict__
 			# 'Convert' the _q_parent from type String to type Module
 			#this_mod._q_parent = parent_mod
-			#print parent_mod._q_exports
-			#print dir(parent_mod)
 
-
 #######################################################################
 #
 # End of boilerplate, now comes the contents of 'page_main':
@@ -160,7 +143,6 @@
 		'</p>'
 		footer()
 		#import configlets
-		#print len(configlets.configlet_tree)
 
         def _q_access(self):
                 if get_session().level < self._q_level:



From santiago at mail.berlios.de  Mon Jan 15 17:34:01 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 15 Jan 2007 17:34:01 +0100
Subject: [Destar-dev] r550 - trunk
Message-ID: <200701151634.l0FGY1em029061@sheep.berlios.de>

Author: santiago
Date: 2007-01-15 17:34:01 +0100 (Mon, 15 Jan 2007)
New Revision: 550

Modified:
   trunk/CHANGELOG.txt
   trunk/backend.py
   trunk/cfg_dialout_normal.py
   trunk/cfg_opt_monitor.py
Log:
* Fixed recording. Patch by Harald Holzer



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-13 21:02:03 UTC (rev 549)
+++ trunk/CHANGELOG.txt	2007-01-15 16:34:01 UTC (rev 550)
@@ -1,3 +1,6 @@
+2007-01-15:
+* Fixed recording. Patch by Harald Holzer
+
 2006-12-29:
 * "updated" version
 * First attempt to detect if cdr_sqlite3_custom.so exists

Modified: trunk/backend.py
===================================================================
--- trunk/backend.py	2007-01-13 21:02:03 UTC (rev 549)
+++ trunk/backend.py	2007-01-15 16:34:01 UTC (rev 550)
@@ -198,7 +198,7 @@
 	c.append("exten=s,n(doptEnd),NoOp()")
 	c.append(";")
 	c.append("; Dial")
-	c.append("exten=s,n(MainDial),Dial(${ARG1},${dsec},Tt${dopt})")
+	c.append("exten=s,n(MainDial),Dial(${ARG1},${dsec},TtWw${dopt})")
 	c.append(";")
 	c.append("; Dial result was 'timeout'")
 	c.append("exten=s,n,Set(fw_ext=${DB(CFTO/${ARG5}/${ARG4})})")

Modified: trunk/cfg_dialout_normal.py
===================================================================
--- trunk/cfg_dialout_normal.py	2007-01-13 21:02:03 UTC (rev 549)
+++ trunk/cfg_dialout_normal.py	2007-01-15 16:34:01 UTC (rev 550)
@@ -84,9 +84,9 @@
 		c.append("; params: exten,secret,timeout")
 		needModule("app_authenticate")
 		if self.dis_transfer:
-		       opts="t"
+		       opts="tW"
 		else:
-		       opts="Tt"
+		       opts="TtW"
 		if self.qlookup:
 			c.appendExten("s","Set(dest=${DB(QUICKDIALLIST/GLOBAL/${ARG1})})",e="Goto(3)")
 			c.appendExten("s",'Set(ARG1=${dest})')

Modified: trunk/cfg_opt_monitor.py
===================================================================
--- trunk/cfg_opt_monitor.py	2007-01-13 21:02:03 UTC (rev 549)
+++ trunk/cfg_opt_monitor.py	2007-01-15 16:34:01 UTC (rev 550)
@@ -36,6 +36,11 @@
 		return (self.shortName, self.ext)
 		
 	def createAsteriskConfig(self):
+		needModule("res_monitor")
+		needModule("app_record")
+		c = AstConf("extensions.conf")
+        	c.setSection("globals")
+		c.append("DYNAMIC_FEATURES=>automon")
 		c = AstConf("features.conf")
         	c.setSection("featuremap")
 		c.append("automon=>%s" % self.ext)



From santiago at mail.berlios.de  Mon Jan 15 17:43:45 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 15 Jan 2007 17:43:45 +0100
Subject: [Destar-dev] r551 - trunk
Message-ID: <200701151643.l0FGhjbL029988@sheep.berlios.de>

Author: santiago
Date: 2007-01-15 17:43:44 +0100 (Mon, 15 Jan 2007)
New Revision: 551

Modified:
   trunk/CHANGELOG.txt
   trunk/backend.py
Log:

* dont add modules to modules.conf, if they does not exists (Bug #9708). Patch by Harald Holzer



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-15 16:34:01 UTC (rev 550)
+++ trunk/CHANGELOG.txt	2007-01-15 16:43:44 UTC (rev 551)
@@ -1,5 +1,6 @@
 2007-01-15:
 * Fixed recording. Patch by Harald Holzer
+* dont add modules to modules.conf, if they does not exists (Bug #9708). Patch by Harald Holzer
 
 2006-12-29:
 * "updated" version

Modified: trunk/backend.py
===================================================================
--- trunk/backend.py	2007-01-15 16:34:01 UTC (rev 550)
+++ trunk/backend.py	2007-01-15 16:43:44 UTC (rev 551)
@@ -362,13 +362,17 @@
 	c.setSection("modules")
 	c.append("autoload=no")
 	for m in c.modules.preload:
-		c.append("preload=%s.so" % m)
-		if not m in available_modules: missing_modules.append(m)
+		if not m in available_modules:
+			missing_modules.append(m)
+		else:
+			c.append("preload=%s.so" % m)
 
 	for sect in ("pbx", "codec", "format", "res", "cdr", "chan", "func", "app"):
 		for m in c.modules[sect]:
-			c.append("load=%s.so" % m)
-			if not m in available_modules: missing_modules.append(m)
+			if not m in available_modules:
+				missing_modules.append(m)
+			else:
+				c.append("load=%s.so" % m)
 
 	# test if all config files are OK to be written or overwritten
 	tmp_conf = []



From santiago at mail.berlios.de  Mon Jan 15 17:52:30 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 15 Jan 2007 17:52:30 +0100
Subject: [Destar-dev] r552 - trunk
Message-ID: <200701151652.l0FGqUNJ031339@sheep.berlios.de>

Author: santiago
Date: 2007-01-15 17:52:30 +0100 (Mon, 15 Jan 2007)
New Revision: 552

Modified:
   trunk/CHANGELOG.txt
   trunk/cfg_opt_sip_network.py
Log:
* added sip tos option. Patch by Harald Holzer



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-15 16:43:44 UTC (rev 551)
+++ trunk/CHANGELOG.txt	2007-01-15 16:52:30 UTC (rev 552)
@@ -1,6 +1,7 @@
 2007-01-15:
 * Fixed recording. Patch by Harald Holzer
 * dont add modules to modules.conf, if they does not exists (Bug #9708). Patch by Harald Holzer
+* added sip tos option. Patch by Harald Holzer
 
 2006-12-29:
 * "updated" version

Modified: trunk/cfg_opt_sip_network.py
===================================================================
--- trunk/cfg_opt_sip_network.py	2007-01-15 16:43:44 UTC (rev 551)
+++ trunk/cfg_opt_sip_network.py	2007-01-15 16:52:30 UTC (rev 552)
@@ -36,7 +36,8 @@
 
 			VarType("bindaddr",	
 					title=_("Bind address"), 
-					len=25),
+					len=25,
+					optional=True),
 
 			VarType("globalnat",
 					title=_("Global NAT"),
@@ -57,16 +58,23 @@
 
 			VarType("extip",	
 					title=_("External ip"), 
-					len=25),
+					len=25,
+					optional=True),
 
 			VarType("intnet",	
 					title=_("Internal network"), 
-					len=25),
+					len=25,
+					optional=True),
 
 			VarType("intnetmask",	
 					title=_("Netmask"), 
-					len=25),
-					
+					len=25,
+					optional=True),
+
+			VarType("tos",
+					title=_("TOS:"),
+					len=10,
+					optional=True),
 		]
 
 	def checkConfig(self):
@@ -94,6 +102,10 @@
 		if self.doBind:
 			c.append("bindaddr=%s" % self.bindaddr)
 		if self.setExt:
-			c.append("externip=%s" % self.extip)
-			c.append("localnet=%s/%s" % (self.intnet,self.intnetmask))
+			if self.extip:
+				c.append("externip=%s" % self.extip)
+			if self.intnet:
+				c.append("localnet=%s/%s" % (self.intnet,self.intnetmask))
+		if self.tos:
+			c.append("tos=%s" % self.tos)
 		c.append("nat=%s" % self.globalnat)



From santiago at mail.berlios.de  Mon Jan 15 17:54:58 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 15 Jan 2007 17:54:58 +0100
Subject: [Destar-dev] r553 - trunk
Message-ID: <200701151654.l0FGsw6l031821@sheep.berlios.de>

Author: santiago
Date: 2007-01-15 17:54:57 +0100 (Mon, 15 Jan 2007)
New Revision: 553

Modified:
   trunk/CHANGELOG.txt
   trunk/cfg_phone_queue.py
Log:
* added queue timeout. Patch by Harald Holzer



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-15 16:52:30 UTC (rev 552)
+++ trunk/CHANGELOG.txt	2007-01-15 16:54:57 UTC (rev 553)
@@ -2,6 +2,7 @@
 * Fixed recording. Patch by Harald Holzer
 * dont add modules to modules.conf, if they does not exists (Bug #9708). Patch by Harald Holzer
 * added sip tos option. Patch by Harald Holzer
+* added queue timeout. Patch by Harald Holzer
 
 2006-12-29:
 * "updated" version

Modified: trunk/cfg_phone_queue.py
===================================================================
--- trunk/cfg_phone_queue.py	2007-01-15 16:52:30 UTC (rev 552)
+++ trunk/cfg_phone_queue.py	2007-01-15 16:54:57 UTC (rev 553)
@@ -45,10 +45,21 @@
 					len=6),
 
 			VarType("timeout",
-					title=_("Timeout"),
+					title=_("Phone timeout"),
 					optional=True,
 					len=6),
 
+	                VarType("queuetimeout",
+        	            		title=_("Queue Timeout"),
+                                	optional=True,
+                                	len=6),
+
+                	VarType("queuetimeoutext",
+                        		title=_("On queue timeout forward to extension"),
+                        		type="choice",
+                        		optional=True,
+                        		options=getChoice("CfgPhone")),
+
 			VarType("moh",
 					title=_("Music-on-hold class"),
 					type="choice",
@@ -229,29 +240,35 @@
 			else:
 				mon_line = "MixMonitor(${TIMESTAMP}-${CALLERIDNAME}(${CALLERIDNUM})-${EXTEN}.%s|%s)" % (self.monitorfileformat,options)
 
+		qnames = []
 		if self.ext:
+		    qnames.append(self.ext)
+		if self.name:
+		    qnames.append(self.name)
+
+		for qname in qnames:
+			opt = "Tth"
 			if mon_line:
-				extensions.appendExten(self.ext, mon_line)
+				extensions.appendExten(qname, mon_line)
 
 			if self.ring:
-				extensions.appendExten(self.ext, "Queue(%s|Tthr)" % self.name)
+				opt = opt + "r"
+				
+			if self.moh:
+				extensions.appendExten(qname, "Answer")
+				extensions.appendExten(qname, "SetMusicOnHold(%s)" % self.moh)
+
+			if self.queuetimeout and self.queuetimeoutext:
+				opt = opt + "n"
+				extensions.appendExten(qname, "Queue(%s|%s|||%s)" % (self.name, opt, self.queuetimeout))
+				import configlets
+				obj = configlets.configlet_tree.getConfigletByName(self.queuetimeoutext)
+				try:
+					extensions.appendExten(qname, "Goto(%s,%s,1)" %  (obj.pbx, self.queuetimeoutext))
+				except AttributeError:
+					pass
 			else:
-				if self.moh:
-					extensions.appendExten(self.ext, "Answer")
-					extensions.appendExten(self.ext, "SetMusicOnHold(%s)" % self.moh)
-				extensions.appendExten(self.ext, "Queue(%s|Tth)" % self.name)
-
-
-		if mon_line:
-			extensions.appendExten(self.name, mon_line)
-		
-		if self.ring:
-			extensions.appendExten(self.name, "Queue(%s|Tthr)" % self.name)
-		else:
-			if self.moh:
-				extensions.appendExten(self.name, "Answer")
-				extensions.appendExten(self.name, "SetMusicOnHold(%s)" % self.moh)
-			extensions.appendExten(self.name, "Queue(%s|Tth)" % self.name)
+				extensions.appendExten(qname, "Queue(%s|%s)" % (self.name, opt))
 		self.createPanelConfig()
 
 



From santiago at mail.berlios.de  Mon Jan 15 18:03:36 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 15 Jan 2007 18:03:36 +0100
Subject: [Destar-dev] r554 - trunk
Message-ID: <200701151703.l0FH3akn032663@sheep.berlios.de>

Author: santiago
Date: 2007-01-15 18:03:35 +0100 (Mon, 15 Jan 2007)
New Revision: 554

Modified:
   trunk/CHANGELOG.txt
   trunk/cfg_dialout_normal.py
   trunk/cfg_opt_did.py
   trunk/cfg_trunk_iax.py
   trunk/cfg_trunk_sip.py
   trunk/configlets.py
Log:
* added callerid(number) option on incoming calls. Patch by Harald Holzer
- added callerid(number) option on outcoming calls
- added sip from domain option
- added DID custom mapping option



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-15 16:54:57 UTC (rev 553)
+++ trunk/CHANGELOG.txt	2007-01-15 17:03:35 UTC (rev 554)
@@ -3,6 +3,10 @@
 * dont add modules to modules.conf, if they does not exists (Bug #9708). Patch by Harald Holzer
 * added sip tos option. Patch by Harald Holzer
 * added queue timeout. Patch by Harald Holzer
+* added callerid(number) option on incoming calls. Patch by Harald Holzer
+- added callerid(number) option on outcoming calls
+- added sip from domain option
+- added DID custom mapping option
 
 2006-12-29:
 * "updated" version

Modified: trunk/cfg_dialout_normal.py
===================================================================
--- trunk/cfg_dialout_normal.py	2007-01-15 16:54:57 UTC (rev 553)
+++ trunk/cfg_dialout_normal.py	2007-01-15 17:03:35 UTC (rev 554)
@@ -113,9 +113,13 @@
 					c.appendExten("s","Set(TIMEOUT(absolute)=${timeout})")
 					c.appendExten("s","Set(CDR(outtrunk)=%s)" % obj.name)
 					if self.__getitem__("trunk_%s_price" % obj.name):
-						c.appendExten("s","Set(CDR(accountcode)=%s)" % self.__getitem__("trunk_%s_price" % obj.name))	
+						c.appendExten("s","Set(CDR(accountcode)=%s)" % self.__getitem__("trunk_%s_price" % obj.name))
 					else:
-						c.appendExten("s","Set(CDR(accountcode)=0)")	
+						c.appendExten("s","Set(CDR(accountcode)=0)")
+					if obj.clidnameout:
+						c.appendExten("s","Set(CALLERID(name)=%s)" % obj.clidnameout)
+					if obj.clidnumout:
+						c.appendExten("s","Set(CALLERID(number)=%s)" % obj.clidnumout)
 					c.appendExten("s","Dial(%s,%d|${options})" % (obj.dial,self.ringtime))
 			except KeyError:
 				pass

Modified: trunk/cfg_opt_did.py
===================================================================
--- trunk/cfg_opt_did.py	2007-01-15 16:54:57 UTC (rev 553)
+++ trunk/cfg_opt_did.py	2007-01-15 17:03:35 UTC (rev 554)
@@ -45,7 +45,7 @@
 					title = _("Go to"),
 					type = "radio",
 					default = 'phone',
-					options = [('phone', _("Phone")), ('ivr', _("IVR"))]),
+					options = [('phone', _("Phone")), ('ivr', _("IVR")), ("custommap", _("Custom map"))]),
 
 			VarType("phone",
 					title = _("Phone to ring"),
@@ -59,10 +59,31 @@
 					type = "choice", 
 					options = getChoice("CfgIVR")),
 
+			VarType("custommappbx",
+                                        title=_("Custom map, PBX"),
+                                        type="choice",
+                                        optional = True,
+                                        options=getChoice("CfgOptPBX")),
+
+    			VarType("custommapdest",
+                                        title = _("Custom map, destination"),
+                                        len = 30,
+                                        optional = True),
+
+			VarType("callerid",
+					title=_("CallerID:"),
+					type="label"),
+
 			VarType("clid",
-					title = _("Change Caller*Id to:"), 
+					title = _("Change Caller*Id Name to:"),
 					len = 25,
-					optional = True)]
+					optional = True),
+
+			VarType("clidnum",
+					title = _("Change Caller*Id Number to:"),
+					len = 25,
+					optional = True),
+					]
 					
 		self.dependencies = [
 			DepType("trunk", 
@@ -104,6 +125,9 @@
 		if self.clid:
 			needModule("func_callerid")
 			c.appendExten(self.did,"Set(CALLERID(name)=%s)" %  self.clid)
+		if self.clidnum:
+			needModule("func_callerid")
+			c.appendExten(self.did,"Set(CALLERID(number)=%s)" %  self.clidnum)
 		if self.contextin == 'phone' and self.phone:
 			import configlets
 			obj = configlets.configlet_tree.getConfigletByName(self.phone)
@@ -113,5 +137,5 @@
 				pass
 		elif self.contextin == 'ivr' and self.ivr:
 			c.appendExten(self.did,"Goto(%s,s,1)" % self.ivr)
-
-
+        	elif self.contextin == 'custommap' and self.custommapdest:
+        		c.appendExten(self.did,"Goto(%s,%s,1)" % (self.custommappbx, self.custommapdest))

Modified: trunk/cfg_trunk_iax.py
===================================================================
--- trunk/cfg_trunk_iax.py	2007-01-15 16:54:57 UTC (rev 553)
+++ trunk/cfg_trunk_iax.py	2007-01-15 17:03:35 UTC (rev 554)
@@ -99,6 +99,11 @@
 				len=40,
 				optional=True),
 
+			VarType("clidnumin",
+				title=_("Change Caller*Id Number to:"),
+				len=40,
+				optional=True),
+
 			VarType("contextin",
 				title=_("Go to"),
 				type="radio",
@@ -123,9 +128,24 @@
 				optional=True,
 				options=getChoice("CfgOptPBX")),
 
+			VarType("Outbound",
+				title=_("Outgoing calls to IAX trunk"),
+				type="label"),
+
+			VarType("clidnameout",
+				title=_("Change Caller*Id Name to:"),
+				len=40,
+				optional=True),
+
+			VarType("clidnumout",
+				title=_("Change Caller*Id Number to:"),
+				len=40,
+				optional=True),
+
 			VarType("dial",
 				hide=True,
-				len=50),]
+				len=50),
+				]
 	
 		self.dependencies = [
 			DepType("phone", 

Modified: trunk/cfg_trunk_sip.py
===================================================================
--- trunk/cfg_trunk_sip.py	2007-01-15 16:54:57 UTC (rev 553)
+++ trunk/cfg_trunk_sip.py	2007-01-15 17:03:35 UTC (rev 554)
@@ -73,6 +73,11 @@
 				title=_("Show this trunk in the panel"),
 				type="bool",
 				hide=True),
+
+	    		VarType("fromdomain",
+                               title=_("Sip domain:"),
+                               len=40,
+                               optional=True),
 	
 			VarType("Inbound",
 				title=_("Calls from SIP trunk"),
@@ -82,6 +87,11 @@
 				title=_("Change Caller*Id to:"),
 				len=25,
 				optional=True),
+
+ 			VarType("clidnumin",
+ 				title=_("Change Caller*Id Number to:"),
+ 				len=40,
+ 				optional=True),
 			
 			VarType("contextin",
 				title=_("Go to"),
@@ -107,9 +117,24 @@
 				optional=True,
 				options=getChoice("CfgOptPBX")),
 
+ 			VarType("Outbound",
+ 				title=_("Outgoing calls to IAX trunk"),
+ 				type="label"),
+ 
+ 			VarType("clidnameout",
+ 				title=_("Change Caller*Id Name to:"),
+ 				len=40,
+ 				optional=True),
+ 
+ 			VarType("clidnumout",
+ 				title=_("Change Caller*Id Number to:"),
+ 				len=40,
+ 				optional=True),
+
 			VarType("dial",
 				hide=True,
-				len=80),]
+				len=80),
+				]
 
 		self.dependencies = [
 			DepType("phone", 
@@ -156,6 +181,8 @@
 			c.append("host=%s" % self.host)
 			c.append("context=in-%s" % self.name)
 			c.append("canreinvite=no")
+			if self.fromdomain:
+				c.append("fromdomain=%s" % self.fromdomain)
 			if self.nat:
 				c.append("nat=yes")
 			if self.insecure:

Modified: trunk/configlets.py
===================================================================
--- trunk/configlets.py	2007-01-15 16:54:57 UTC (rev 553)
+++ trunk/configlets.py	2007-01-15 17:03:35 UTC (rev 554)
@@ -877,6 +877,9 @@
 		if self.clid:
 			needModule("func_callerid")
 			c.appendExten("s","Set(CALLERID(name)=%s)" %  self.clid)
+		if self.clidnumin:
+			needModule("func_callerid")
+			c.appendExten("s","Set(CALLERID(number)=%s)" %  self.clidnumin)
 		global configlet_tree
 		if self.contextin == 'phone' and self.phone:
 			obj = configlet_tree.getConfigletByName(self.phone)
@@ -894,6 +897,9 @@
 		if self.clid:
 			needModule("func_callerid")
 			c.appendExten("_X","Set(CALLERID(name)=%s)" %  self.clid)
+		if self.clidnumin:
+			needModule("func_callerid")
+			c.appendExten("_X","Set(CALLERID(number)=%s)" %  self.clidnumin)
 		if self.contextin == 'phone' and self.phone:
 			obj = configlet_tree.getConfigletByName(self.phone)
 			try:
@@ -910,6 +916,9 @@
 		if self.clid:
 			needModule("func_callerid")
 			c.appendExten("_X.","Set(CALLERID(name)=%s)" %  self.clid)
+		if self.clidnumin:
+			needModule("func_callerid")
+			c.appendExten("_X.","Set(CALLERID(number)=%s)" %  self.clidnumin)
 		if self.contextin == 'phone' and self.phone:
 			obj = configlet_tree.getConfigletByName(self.phone)
 			try:



From santiago at mail.berlios.de  Mon Jan 15 18:11:50 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 15 Jan 2007 18:11:50 +0100
Subject: [Destar-dev] r555 - trunk
Message-ID: <200701151711.l0FHBoBq000630@sheep.berlios.de>

Author: santiago
Date: 2007-01-15 18:11:49 +0100 (Mon, 15 Jan 2007)
New Revision: 555

Modified:
   trunk/CHANGELOG.txt
   trunk/cfg_dialout_normal.py
   trunk/cfg_opt_pbx.py
   trunk/cfg_opt_sip_network.py
Log:
* some better defaults. Patch by Harald Holzer



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-15 17:03:35 UTC (rev 554)
+++ trunk/CHANGELOG.txt	2007-01-15 17:11:49 UTC (rev 555)
@@ -7,6 +7,7 @@
 - added callerid(number) option on outcoming calls
 - added sip from domain option
 - added DID custom mapping option
+* some better defaults. Patch by Harald Holzer
 
 2006-12-29:
 * "updated" version

Modified: trunk/cfg_dialout_normal.py
===================================================================
--- trunk/cfg_dialout_normal.py	2007-01-15 17:03:35 UTC (rev 554)
+++ trunk/cfg_dialout_normal.py	2007-01-15 17:11:49 UTC (rev 555)
@@ -35,8 +35,8 @@
 		VarType("pattern", title=_("Pattern"), len=55),
 		VarType("rmprefix", title=_("Remove Prefix of length"), len=10, default="0"),
 		VarType("addprefix", title=_("Add Prefix"), len=10, optional=True, default=""),
-		VarType("maxtime", title=_("Maximum call time in seconds"), type="int", len=15, default=300),
-		VarType("ringtime", title=_("Ringing time in seconds"), type="int", len=15, default=25),
+		VarType("maxtime", title=_("Maximum call time in seconds"), type="int", len=15, default=6000),
+		VarType("ringtime", title=_("Ringing time in seconds"), type="int", len=15, default=300),
 		VarType("qlookup", title=_("Search on quick dial list?"), type="bool"),
 
 		VarType("dis_transfer", title=_("Disallow calling user transfer?"), type="bool"),

Modified: trunk/cfg_opt_pbx.py
===================================================================
--- trunk/cfg_opt_pbx.py	2007-01-15 17:03:35 UTC (rev 554)
+++ trunk/cfg_opt_pbx.py	2007-01-15 17:11:49 UTC (rev 555)
@@ -30,7 +30,10 @@
 	groupName = 'PBX'
 		
 	variables = [
-		VarType("name",	  title=_("Name"), len=15),
+		VarType("name",
+			title=_("Name"),
+			len=15,
+			default="defaultpbx"),
 			]
 
 	def checkConfig(self):

Modified: trunk/cfg_opt_sip_network.py
===================================================================
--- trunk/cfg_opt_sip_network.py	2007-01-15 17:03:35 UTC (rev 554)
+++ trunk/cfg_opt_sip_network.py	2007-01-15 17:11:49 UTC (rev 555)
@@ -72,9 +72,20 @@
 					optional=True),
 
 			VarType("tos",
-					title=_("TOS:"),
+					title=_("TOS Field"),
 					len=10,
-					optional=True),
+					optional=True,
+					default="184"),
+
+			VarType("sipdefaults",
+					title=_("Defaults"), 
+					type="label"),
+
+			VarType("moh",
+                                        title=_("Music on hold"),
+                                        type="choice",
+                                        optional = True,
+                                        options=getChoice("CfgOptMusic")),
 		]
 
 	def checkConfig(self):
@@ -108,4 +119,6 @@
 				c.append("localnet=%s/%s" % (self.intnet,self.intnetmask))
 		if self.tos:
 			c.append("tos=%s" % self.tos)
+		if self.moh:
+			c.append("musiconhold=%s" % self.moh)
 		c.append("nat=%s" % self.globalnat)



From santiago at mail.berlios.de  Mon Jan 15 18:16:53 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 15 Jan 2007 18:16:53 +0100
Subject: [Destar-dev] r556 - trunk
Message-ID: <200701151716.l0FHGreR001193@sheep.berlios.de>

Author: santiago
Date: 2007-01-15 18:16:53 +0100 (Mon, 15 Jan 2007)
New Revision: 556

Modified:
   trunk/CHANGELOG.txt
   trunk/backend.py
Log:
* add early media support in dialmacro. Patch by Harald Holzer
- add parallel ringing support in dialmacro
- add call forward only on trunk support in dialmacro



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-15 17:11:49 UTC (rev 555)
+++ trunk/CHANGELOG.txt	2007-01-15 17:16:53 UTC (rev 556)
@@ -8,6 +8,9 @@
 - added sip from domain option
 - added DID custom mapping option
 * some better defaults. Patch by Harald Holzer
+* add early media support in dialmacro. Patch by Harald Holzer
+- add parallel ringing support in dialmacro
+- add call forward only on trunk support in dialmacro
 
 2006-12-29:
 * "updated" version

Modified: trunk/backend.py
===================================================================
--- trunk/backend.py	2007-01-15 17:11:49 UTC (rev 555)
+++ trunk/backend.py	2007-01-15 17:16:53 UTC (rev 556)
@@ -191,18 +191,32 @@
 	c.append("exten=s,n,Set(dsec=45)")
 	c.append("exten=s,n(dsecEnd),NoOp()")
 	c.append(";")
-	c.append("; get dial options")
+	c.append("; get global dial options")
 	c.append("exten=s,n,Set(dopt=${DIAL_OPTIONS})")
 	c.append('exten=s,n,GotoIf($["${dopt}" = ""]?:doptEnd)')
 	c.append("exten=s,n,Set(dopt=r)")
 	c.append("exten=s,n(doptEnd),NoOp()")
 	c.append(";")
+	c.append("; get early media")
+	c.append("exten=s,n,Set(emedia=${DB(EMEDIA/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${emedia}" = ""]?emediaEnd)')
+	c.append("exten=s,n,Set(dopt=${dopt}m(${emedia}))")
+	c.append("exten=s,n,Answer()")
+	c.append("exten=s,n(emediaEnd),NoOp()")
+	c.append(";")
+	c.append("; parallel ringing")
+	c.append("exten=s,n,Set(prng=${DB(PRNG/${ARG5}/${ARG4})})")
+	c.append(";")
 	c.append("; Dial")
-	c.append("exten=s,n(MainDial),Dial(${ARG1},${dsec},TtWw${dopt})")
+	c.append("exten=s,n(MainDial),Dial(${ARG1}${prng},${dsec},TtWw${dopt})")
 	c.append(";")
 	c.append("; Dial result was 'timeout'")
 	c.append("exten=s,n,Set(fw_ext=${DB(CFTO/${ARG5}/${ARG4})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
+	c.append('exten=s,n,GotoIf($["{CDR(intrunk)}" = ""]?cftoend)')
+	c.append("exten=s,n,Set(fw_ext=${DB(CFTO-TRUNK/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
+	c.append("exten=s,n(cftoend),NoOp()")
 	c.append(";")
 	c.append("; no CFTO (Call Forward Timeout), test VM U.")
 	c.append("exten=s,n,Goto(testvmu)")
@@ -210,6 +224,10 @@
 	c.append("; Dial result was 'busy'")
 	c.append("exten=s,MainDial+101,Set(fw_ext=${DB(CFBS/${ARG5}/${ARG4})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
+	c.append('exten=s,n,GotoIf($["{CDR(intrunk)}" = ""]?cfbsend)')
+	c.append("exten=s,n,Set(fw_ext=${DB(CFBS-TRUNK/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
+	c.append("exten=s,n(cfbsend),NoOp()")
 	c.append(";")
 	c.append("; no CFBS (Call Forward Busy), test VM Busy")
 	c.append("exten=s,n,Goto(testvmb)")



From santiago at mail.berlios.de  Mon Jan 15 18:21:42 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 15 Jan 2007 18:21:42 +0100
Subject: [Destar-dev] r557 - trunk
Message-ID: <200701151721.l0FHLg85002673@sheep.berlios.de>

Author: santiago
Date: 2007-01-15 18:21:41 +0100 (Mon, 15 Jan 2007)
New Revision: 557

Modified:
   trunk/CHANGELOG.txt
   trunk/cfg_opt_sip_network.py
Log:
* added sip pedantic option. Patch by Harald Holzer



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-15 17:16:53 UTC (rev 556)
+++ trunk/CHANGELOG.txt	2007-01-15 17:21:41 UTC (rev 557)
@@ -11,6 +11,7 @@
 * add early media support in dialmacro. Patch by Harald Holzer
 - add parallel ringing support in dialmacro
 - add call forward only on trunk support in dialmacro
+* added sip pedantic option. Patch by Harald Holzer
 
 2006-12-29:
 * "updated" version

Modified: trunk/cfg_opt_sip_network.py
===================================================================
--- trunk/cfg_opt_sip_network.py	2007-01-15 17:16:53 UTC (rev 556)
+++ trunk/cfg_opt_sip_network.py	2007-01-15 17:21:41 UTC (rev 557)
@@ -25,8 +25,8 @@
 
 class CfgOptSipNetwork(CfgOptSingle):
 
-	shortName = _("SIP Network Options")
-	newObjectTitle = _("SIP Network Options")
+	shortName = _("SIP Options")
+	newObjectTitle = _("SIP Options")
 	
 	def createVariables(self):
 		self.variables = [
@@ -48,6 +48,12 @@
 						  ("route",_("Route")) ), 
 					default="no"),
 
+			# Hell, what a mess in Asterisk and Snom FW >6.2.2, pedantic is needed to get "#" working
+			VarType("pedantic",	
+					title=_("SIP Pedantic checking of Call-ID"),	
+					type="bool",
+					optional=True),
+
 			VarType("extintnet",	
 					title=_("External/Internal IP"), 
 					type="label"),
@@ -121,4 +127,6 @@
 			c.append("tos=%s" % self.tos)
 		if self.moh:
 			c.append("musiconhold=%s" % self.moh)
+     		if self.pedantic:
+             		c.append("pedantic=yes")
 		c.append("nat=%s" % self.globalnat)



From hholzer at mail.berlios.de  Mon Jan 15 22:06:48 2007
From: hholzer at mail.berlios.de (hholzer at mail.berlios.de)
Date: Mon, 15 Jan 2007 22:06:48 +0100
Subject: [Destar-dev] r558 - trunk
Message-ID: <200701152106.l0FL6mA2002301@sheep.berlios.de>

Author: hholzer
Date: 2007-01-15 22:06:34 +0100 (Mon, 15 Jan 2007)
New Revision: 558

Modified:
   trunk/cfg_app_callfw.py
   trunk/cfg_phone_iax.py
   trunk/cfg_phone_mgcp.py
   trunk/cfg_phone_sip.py
   trunk/cfg_phone_zap.py
   trunk/configlets.py
Log:
fist attempt for devstate support at call forward
cleanup hint support


Modified: trunk/cfg_app_callfw.py
===================================================================
--- trunk/cfg_app_callfw.py	2007-01-15 17:21:41 UTC (rev 557)
+++ trunk/cfg_app_callfw.py	2007-01-15 21:06:34 UTC (rev 558)
@@ -33,7 +33,9 @@
 			VarType("type", title=_("Type"), type="choice", options=( ("CFIM", _("Call Forwarding Unconditional")), \
 			("CFBS", _("Call Forwarding if Busy")), ("CFTO", _("Call Forwarding if Timeout/Unavailable")) )),
 			VarType("set",      title=_("Setting preffix"), len=6, default="*21"),
-			VarType("ext",   title=_("Unsetting extension"), len=6, default="*22")
+			VarType("ext",   title=_("Unsetting extension"), len=6, default="*22"),
+			VarType("toggle",   title=_("Set function toggleable"), type="bool"),
+			VarType("devstateprefix",   title=_("Create Devstate extension. Devstate Prefix:"), len=8, default="")
 		       	]
 
 		self.dependencies = [ DepType("pbx", 
@@ -45,9 +47,17 @@
 		return ("%s / %s" % (self.set,self.ext),"%s %s" % (self.shortName, self.type), self.pbx)
 
 	def createAsteriskConfig(self):
+		if self.devstateprefix:
+		    needModule("app_devstate")
 		c = AstConf("extensions.conf")
 		c.setSection(self.pbx)
+		c.appendExten("_%sX." % self.set, "Answer()")
+		if self.toggle:
+			c.appendExten("_%sX." % self.set, "Set(testcf=${DB(%s/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
+			c.appendExten("_%sX." % self.set, 'GotoIf($["${testcf}" = ""]?:switchoff)')
 		c.appendExten("_%sX." % self.set, "Set(DB(%s/%s/${CALLERIDNUM})=${EXTEN:%d})" % (self.type, self.pbx,len(self.set)))
+		if self.devstateprefix:
+			c.appendExten("_%sX." % self.set, "Devstate(%s${CALLERIDNUM},2)" % self.devstateprefix)
 		if self.type == "CFIM":
 			c.appendExten("_%sX." % self.set, "Playback(call-fwd-unconditional)")
 		elif self.type == "CFTO":
@@ -55,6 +65,10 @@
 		else:
 			c.appendExten("_%sX." % self.set, "Playback(call-fwd-on-busy)")
 		c.appendExten("_%sX." % self.set, "Hangup")
-		c.appendExten("%s" % self.ext, "DBdel(%s/%s/${CALLERIDNUM})" % (self.type,self.pbx))
+		c.appendExten("_%sX." % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="switchoff")
+		c.appendExten("%s" % self.ext, "Answer()")
+		c.appendExten("%s" % self.ext, "DBdel(%s/%s/${CALLERIDNUM})" % (self.type, self.pbx))
+		if self.devstateprefix:
+			c.appendExten("%s" % self.ext, "Devstate(%s${CALLERIDNUM},0)" % self.devstateprefix)
 		c.appendExten("%s" % self.ext, "Playback(call-fwd-cancelled)")
 		c.appendExten("%s" % self.ext, "Hangup")

Modified: trunk/cfg_phone_iax.py
===================================================================
--- trunk/cfg_phone_iax.py	2007-01-15 17:21:41 UTC (rev 557)
+++ trunk/cfg_phone_iax.py	2007-01-15 21:06:34 UTC (rev 558)
@@ -283,7 +283,6 @@
 			iax.append("notransfer=yes")
 
 		self.createExtensionConfig()
-		self.createHintConfig()
 		self.createVoicemailConfig(iax)
 		self.createOutgoingContext()
 		self.createPanelConfig()

Modified: trunk/cfg_phone_mgcp.py
===================================================================
--- trunk/cfg_phone_mgcp.py	2007-01-15 17:21:41 UTC (rev 557)
+++ trunk/cfg_phone_mgcp.py	2007-01-15 21:06:34 UTC (rev 558)
@@ -284,7 +284,6 @@
 			mgcp.append('pickupgroup=%s' % self.callgroup)
 
 		self.createExtensionConfig()
-		self.createHintConfig()
 		self.createVoicemailConfig(mgcp)
 		self.createOutgoingContext()
 		self.createQueuesConfig()

Modified: trunk/cfg_phone_sip.py
===================================================================
--- trunk/cfg_phone_sip.py	2007-01-15 17:21:41 UTC (rev 557)
+++ trunk/cfg_phone_sip.py	2007-01-15 21:06:34 UTC (rev 558)
@@ -302,7 +302,6 @@
 		sip.append("subscribecontext=%s" % pbx)
 
 		self.createExtensionConfig()
-		self.createHintConfig()
 		self.createVoicemailConfig(sip)
 		self.createOutgoingContext()
 		self.createPanelConfig()

Modified: trunk/cfg_phone_zap.py
===================================================================
--- trunk/cfg_phone_zap.py	2007-01-15 17:21:41 UTC (rev 557)
+++ trunk/cfg_phone_zap.py	2007-01-15 21:06:34 UTC (rev 558)
@@ -284,7 +284,6 @@
 		c.append("")
 
 		self.createExtensionConfig()
-		self.createHintConfig()
 		self.createVoicemailConfig(c)
 		self.createOutgoingContext()
 		self.createPanelConfig()

Modified: trunk/configlets.py
===================================================================
--- trunk/configlets.py	2007-01-15 17:21:41 UTC (rev 557)
+++ trunk/configlets.py	2007-01-15 21:06:34 UTC (rev 558)
@@ -104,7 +104,7 @@
 			self.order.append(self.section)
 		self.dirty = True
 
-	def appendExten(self,ext,l,e=None):
+	def appendExten(self,ext,l,e=None, label=None):
 		"""Append an extension line l to the current section. Append
 		an optional error extenion e as well. Increments the priorty
 		if the extension stays the same, resets the prio to 1 if the
@@ -113,7 +113,12 @@
 		if ext != self.lastext:
 			self.extpriority = 1
 		self.lastext = ext
-		self.append("exten=%s,%d,%s" % (ext, self.extpriority, l))
+
+		if label:
+		    self.append("exten=%s,%d(%s),%s" % (ext, self.extpriority, label, l))
+		else:
+		    self.append("exten=%s,%d,%s" % (ext, self.extpriority, l))
+
 		if e:
 			self.append("exten=%s,%d,%s" % (ext, self.extpriority+101, e))
 			
@@ -989,20 +994,17 @@
                 except AttributeError:
                         pbx = "phones"
                 extensions.setSection(pbx)
+		extensions.append("exten=%s,hint,%s/%s" % (self.ext, self.technology, self.name))
 		extensions.appendExten(self.ext,"Set(CDR(pbx)=%s,CDR(userfield)=%s)" % (pbx,self.name))
 		self.createDialEntry(extensions, self.ext, pbx, self.ext)
 		extensions.appendExten(self.name,"Set(CDR(pbx)=%s,CDR(userfield)=%s)" % (pbx,self.name))
 		self.createDialEntry(extensions, self.name, pbx, self.ext)
+		for obj in configlet_tree:
+			if obj.__class__.__name__ == 'CfgAppCallFW':
+				if obj.devstateprefix:
+					extensions.append("exten=%s%s,hint,DS/%s%s" % (obj.devstateprefix, self.ext, obj.devstateprefix, self.ext))
+					extensions.appendExten("%s%s" % (obj.devstateprefix, self.ext), "Goto(%s,%s,1)" % (pbx, obj.set))
 
-	def createHintConfig(self):
-		extensions = AstConf("extensions.conf")
-        	try:
-            		pbx = self.pbx
-        	except AttributeError:
-            		pbx = "phones"
-        	extensions.setSection(pbx)
-		extensions.append("exten=%s,hint,%s/%s" % (self.ext, self.technology, self.name))
-
 	def createVoicemailConfig(self, conf):
 		if self.ext and self.usevm:
 			needModule("res_adsi")



From hholzer at mail.berlios.de  Tue Jan 16 00:46:24 2007
From: hholzer at mail.berlios.de (hholzer at mail.berlios.de)
Date: Tue, 16 Jan 2007 00:46:24 +0100
Subject: [Destar-dev] r559 - trunk
Message-ID: <200701152346.l0FNkO9g011807@sheep.berlios.de>

Author: hholzer
Date: 2007-01-16 00:46:08 +0100 (Tue, 16 Jan 2007)
New Revision: 559

Added:
   trunk/cfg_app_voicemailsettings.py
Modified:
   trunk/backend.py
   trunk/cfg_app_callfw.py
   trunk/cfg_opt_voicemail.py
   trunk/configlets.py
   trunk/page_user_settings.ptl
Log:
make voicemail setting dynamic (Feature Request #3052)
devstate virtual pbx support


Modified: trunk/backend.py
===================================================================
--- trunk/backend.py	2007-01-15 21:06:34 UTC (rev 558)
+++ trunk/backend.py	2007-01-15 23:46:08 UTC (rev 559)
@@ -169,6 +169,7 @@
 	c.append("columns => clid,src,dst,dcontext,channel,dstchannel,lastapp,lastdata,start,answer,end,duration,billsec,disposition,amaflags,accountcode,uniqueid,userfield,pbx,intrunk,outtrunk,dialout")
 	c.append("values => '${CDR(clid)}','${CDR(src)}','${CDR(dst)}','${CDR(dcontext)}','${CDR(channel)}','${CDR(dstchannel)}','${CDR(lastapp)}','${CDR(lastdata)}','${CDR(start)}','${CDR(answer)}','${CDR(end)}','${CDR(duration)}','${CDR(billsec)}','${CDR(disposition)}','${CDR(amaflags)}','${CDR(accountcode)}','${CDR(uniqueid)}','${CDR(userfield)}','${CDR(pbx)}','${CDR(intrunk)}','${CDR(outtrunk)}','${CDR(dialout)}'")
 
+	needModule("res_indications")
 	c = AstConf("macros.inc")
 	c.append(";")
 	c.append("; Macro to dial a standard local extension")
@@ -181,21 +182,25 @@
 	c.append("exten=s,1,Set(fw_ext=${DB(CFIM/${ARG5}/${ARG4})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append(";")
+	c.append("; test for VMIM (VM Immediate)")
+	c.append("exten=s,n,Set(vmim=${DB(VMIM/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${vmim}" != ""]?vmu)')
+	c.append(";")
 	c.append("; test for DND (Do Not Disturb)")
-	c.append("exten=s,n,Set(temp=${DB(DND/${ARG5}/${ARG4})})")
-	c.append('exten=s,n,GotoIf($["${temp}" = "True"]?testvmu)')
+	c.append("exten=s,n,Set(dnd=${DB(DND/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${dnd}" != ""]?busy)')
 	c.append(";")
 	c.append("; get dial seconds")
 	c.append("exten=s,n,Set(dsec=${DB(DSEC/${ARG5}/${ARG4})})")
-	c.append('exten=s,n,GotoIf($["${dsec}" = ""]?:dsecEnd)')
+	c.append('exten=s,n,GotoIf($["${dsec}" != ""]?dsecEnd)')
 	c.append("exten=s,n,Set(dsec=45)")
 	c.append("exten=s,n(dsecEnd),NoOp()")
 	c.append(";")
 	c.append("; get global dial options")
 	c.append("exten=s,n,Set(dopt=${DIAL_OPTIONS})")
-	c.append('exten=s,n,GotoIf($["${dopt}" = ""]?:doptEnd)')
-	c.append("exten=s,n,Set(dopt=r)")
-	c.append("exten=s,n(doptEnd),NoOp()")
+	#c.append('exten=s,n,GotoIf($["${dopt}" != ""]?doptEnd)')
+	#c.append("exten=s,n,Set(dopt=r)")
+	#c.append("exten=s,n(doptEnd),NoOp()")
 	c.append(";")
 	c.append("; get early media")
 	c.append("exten=s,n,Set(emedia=${DB(EMEDIA/${ARG5}/${ARG4})})")
@@ -211,7 +216,7 @@
 	c.append("exten=s,n(MainDial),Dial(${ARG1}${prng},${dsec},TtWw${dopt})")
 	c.append(";")
 	c.append("; Dial result was 'timeout'")
-	c.append("exten=s,n,Set(fw_ext=${DB(CFTO/${ARG5}/${ARG4})})")
+	c.append("exten=s,n(dialtimeout),Set(fw_ext=${DB(CFTO/${ARG5}/${ARG4})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append('exten=s,n,GotoIf($["{CDR(intrunk)}" = ""]?cftoend)')
 	c.append("exten=s,n,Set(fw_ext=${DB(CFTO-TRUNK/${ARG5}/${ARG4})})")
@@ -219,10 +224,12 @@
 	c.append("exten=s,n(cftoend),NoOp()")
 	c.append(";")
 	c.append("; no CFTO (Call Forward Timeout), test VM U.")
-	c.append("exten=s,n,Goto(testvmu)")
+	c.append("exten=s,n,Set(vmu=${DB(VMU/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${vmu}" != ""]?vmu)')
+	c.append("exten=s,n,Goto(hangup)")
 	c.append(";")
 	c.append("; Dial result was 'busy'")
-	c.append("exten=s,MainDial+101,Set(fw_ext=${DB(CFBS/${ARG5}/${ARG4})})")
+	c.append("exten=s,MainDial+101(busy),Set(fw_ext=${DB(CFBS/${ARG5}/${ARG4})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append('exten=s,n,GotoIf($["{CDR(intrunk)}" = ""]?cfbsend)')
 	c.append("exten=s,n,Set(fw_ext=${DB(CFBS-TRUNK/${ARG5}/${ARG4})})")
@@ -230,16 +237,18 @@
 	c.append("exten=s,n(cfbsend),NoOp()")
 	c.append(";")
 	c.append("; no CFBS (Call Forward Busy), test VM Busy")
-	c.append("exten=s,n,Goto(testvmb)")
+	c.append("exten=s,n,Set(vmbs=${DB(VMBS/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${vmbs}" != ""]?vmbs)')
+	c.append("exten=s,n,Answer()")
+	c.append("exten=s,n,Playtones(busy)")
+	c.append("exten=s,n,Busy()")
 	c.append(";")
 	c.append("exten=s,n(fw),Goto(${ARG2},${fw_ext},1)")
 	c.append(";")
-	c.append('exten=s,n(testvmu),GotoIf($["${ARG3}" = "1"]?:hangup)')
-	c.append('exten=s,n,Set(vmopt=u)')
+	c.append('exten=s,n(vmu),Set(vmopt=u)')
 	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG4}@${ARG5})")
 	c.append(";")
-	c.append('exten=s,n(testvmb),GotoIf($["${ARG3}" = "1"]?:hangup)')
-	c.append('exten=s,n,Set(vmopt=b)')
+	c.append('exten=s,n(vmbs),Set(vmopt=b)')
 	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG4}@${ARG5})")
 	c.append(";")
 	c.append("exten=s,n(hangup),Hangup()")

Modified: trunk/cfg_app_callfw.py
===================================================================
--- trunk/cfg_app_callfw.py	2007-01-15 21:06:34 UTC (rev 558)
+++ trunk/cfg_app_callfw.py	2007-01-15 23:46:08 UTC (rev 559)
@@ -57,18 +57,20 @@
 			c.appendExten("_%sX." % self.set, 'GotoIf($["${testcf}" = ""]?:switchoff)')
 		c.appendExten("_%sX." % self.set, "Set(DB(%s/%s/${CALLERIDNUM})=${EXTEN:%d})" % (self.type, self.pbx,len(self.set)))
 		if self.devstateprefix:
-			c.appendExten("_%sX." % self.set, "Devstate(%s${CALLERIDNUM},2)" % self.devstateprefix)
+			c.appendExten("_%sX." % self.set, "Devstate(%s_%s_${CALLERIDNUM},2)" % (self.type.lower(), self.pbx))
 		if self.type == "CFIM":
 			c.appendExten("_%sX." % self.set, "Playback(call-fwd-unconditional)")
 		elif self.type == "CFTO":
 			c.appendExten("_%sX." % self.set, "Playback(call-fwd-no-ans)")
 		else:
 			c.appendExten("_%sX." % self.set, "Playback(call-fwd-on-busy)")
+		c.appendExten("_%sX." % self.set, "Wait(1)")
 		c.appendExten("_%sX." % self.set, "Hangup")
 		c.appendExten("_%sX." % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="switchoff")
 		c.appendExten("%s" % self.ext, "Answer()")
 		c.appendExten("%s" % self.ext, "DBdel(%s/%s/${CALLERIDNUM})" % (self.type, self.pbx))
 		if self.devstateprefix:
-			c.appendExten("%s" % self.ext, "Devstate(%s${CALLERIDNUM},0)" % self.devstateprefix)
+			c.appendExten("%s" % self.ext, "Devstate(%s_%s_${CALLERIDNUM},0)" % (self.type.lower(), self.pbx))
 		c.appendExten("%s" % self.ext, "Playback(call-fwd-cancelled)")
+		c.appendExten("%s" % self.ext, "Wait(1)")
 		c.appendExten("%s" % self.ext, "Hangup")

Added: trunk/cfg_app_voicemailsettings.py
===================================================================
--- trunk/cfg_app_voicemailsettings.py	2007-01-15 21:06:34 UTC (rev 558)
+++ trunk/cfg_app_voicemailsettings.py	2007-01-15 23:46:08 UTC (rev 559)
@@ -0,0 +1,98 @@
+# -*- coding: iso-latin-1 -*-
+#
+# Destar has Copyright (C) 2005 by Holger Schurig
+# This file has Copyright (C) 2005 by Alejandro Rios
+# 
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+
+
+from configlets import *
+
+class CfgAppVoicemailSettings(CfgApp):
+
+	shortName   = _("Voicemail settings")
+	description = _("Extensions to set/unset voicemail.")
+	newObjectTitle = _("New extensions to set/unset voicemail")
+
+	def createVariables(self):
+		self.variables = [ 
+			VarType("pbx",
+				title=_("Virtual PBX"),
+				type="choice",
+				options=getChoice("CfgOptPBX")),
+			VarType("type",
+				title=_("Type"),
+				type="choice",
+					options=( ("VMIM", _("Voicemail Unconditional")), \
+					("VMBS", _("Voicemail if Busy")),
+					("VMU", _("Voicemail if Timeout/Unavailable")) )),
+			VarType("set",
+				title=_("Setting preffix"),
+				len=6,
+				default="*94"),
+			VarType("ext",
+				title=_("Unsetting extension"),
+				len=6,
+				default="*95"),
+			VarType("toggle",
+				title=_("Set function toggleable"),
+				type="bool"),
+			VarType("devstateprefix",
+				title=_("Create Devstate extension. Devstate Prefix:"),
+				len=8,
+				default="")
+		       	]
+
+		self.dependencies = [ DepType("pbx", 
+					type="hard",
+					message = _("This is a Dependency")),
+					]
+	
+	def row(self):
+		return ("%s / %s" % (self.set,self.ext),"%s %s" % (self.shortName, self.type), self.pbx)
+
+	def createAsteriskConfig(self):
+		if self.devstateprefix:
+		    needModule("app_devstate")
+		c = AstConf("extensions.conf")
+		c.setSection(self.pbx)
+		c.appendExten("%s" % self.set, "Answer()")
+		if self.toggle:
+			c.appendExten("%s" % self.set, "Set(togglestate=${DB(%s/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
+			c.appendExten("%s" % self.set, 'GotoIf($["${togglestate}" != ""]?switchoff)')
+		c.appendExten("%s" % self.set, "Set(DB(%s/%s/${CALLERIDNUM})=1)" % (self.type, self.pbx))
+		if self.devstateprefix:
+			c.appendExten("%s" % self.set, "Devstate(%s_%s_${CALLERIDNUM},2)" % (self.type.lower(), self.pbx))
+		if self.type == "VMIM":
+			c.appendExten("%s" % self.set, "Playback(voice-mail-system)")
+			c.appendExten("%s" % self.set, "Playback(activated)")
+		elif self.type == "VMU":
+			c.appendExten("%s" % self.set, "Playback(voice-mail-system)")
+			c.appendExten("%s" % self.set, "Playback(activated)")
+		else:
+			c.appendExten("%s" % self.set, "Playback(voice-mail-system)")
+			c.appendExten("%s" % self.set, "Playback(activated)")
+		c.appendExten("%s" % self.set, "Wait(1)")
+		c.appendExten("%s" % self.set, "Hangup")
+		c.appendExten("%s" % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="switchoff")
+		c.appendExten("%s" % self.ext, "Answer()")
+		c.appendExten("%s" % self.ext, "DBdel(%s/%s/${CALLERIDNUM})" % (self.type, self.pbx))
+		if self.devstateprefix:
+			c.appendExten("%s" % self.ext, "Devstate(%s_%s_${CALLERIDNUM},0)" % (self.type.lower(), self.pbx))
+		c.appendExten("%s" % self.ext, "Playback(voice-mail-system)")
+		c.appendExten("%s" % self.ext, "Playback(cancelled)")
+		c.appendExten("%s" % self.ext, "Wait(1)")
+		c.appendExten("%s" % self.ext, "Hangup")

Modified: trunk/cfg_opt_voicemail.py
===================================================================
--- trunk/cfg_opt_voicemail.py	2007-01-15 21:06:34 UTC (rev 558)
+++ trunk/cfg_opt_voicemail.py	2007-01-15 23:46:08 UTC (rev 559)
@@ -27,7 +27,9 @@
 	newObjectTitle = _("Voicemail settings")
 	
 	def createVariables(self):
-		self.variables = [VarType("recording", title=_("Recording settings"), type="label"),
+		self.variables = [
+				 VarType("enable", title=_("Enable Voicemail on phones"), type="bool", default=True),
+				 VarType("recording", title=_("Recording settings"), type="label"),
 				 VarType("format", title=_("File format for voicemail messages"), type="choice",
 								   options=[('wav49','WAV (common sound format)'),('gsm','GSM (smaller)')], default="wav49"),
 				 VarType("maxmessage", title=_("Maximal message length (in seconds)"), type="int", default=180, len=3),
@@ -64,6 +66,10 @@
 		c.appendValue(self, "silencethreshold")
 		c.appendValue(self, "maxlogins")
 		c.append("skipms=%d" % (self.skipms * 1000))
+		
+		if self.enable:
+			needModule("res_adsi")
+			needModule("app_voicemail")
 
 		if self.emailintegration and self.serveremail:
 			c.appendValue(self,"serveremail")

Modified: trunk/configlets.py
===================================================================
--- trunk/configlets.py	2007-01-15 21:06:34 UTC (rev 558)
+++ trunk/configlets.py	2007-01-15 23:46:08 UTC (rev 559)
@@ -1002,13 +1002,22 @@
 		for obj in configlet_tree:
 			if obj.__class__.__name__ == 'CfgAppCallFW':
 				if obj.devstateprefix:
-					extensions.append("exten=%s%s,hint,DS/%s%s" % (obj.devstateprefix, self.ext, obj.devstateprefix, self.ext))
+					extensions.append("exten=%s%s,hint,DS/%s_%s_%s" % (obj.devstateprefix, self.ext, obj.type.lower(), pbx, self.ext))
 					extensions.appendExten("%s%s" % (obj.devstateprefix, self.ext), "Goto(%s,%s,1)" % (pbx, obj.set))
+		for obj in configlet_tree:
+			if obj.__class__.__name__ == 'CfgAppVoicemailSettings':
+				if obj.devstateprefix:
+					extensions.append("exten=%s%s,hint,DS/%s_%s_%s" % (obj.devstateprefix, self.ext, obj.type.lower(), pbx, self.ext))
+					extensions.appendExten("%s%s" % (obj.devstateprefix, self.ext), "Goto(%s,%s,1)" % (pbx, obj.set))
 
 	def createVoicemailConfig(self, conf):
-		if self.ext and self.usevm:
-			needModule("res_adsi")
-			needModule("app_voicemail")
+		vmconfig = False;
+		for obj in configlet_tree:
+			if obj.__class__.__name__ == 'CfgOptVoicemail':
+				if obj.enable:
+				    vmconfig = True;
+				break
+		if vmconfig:
 			if self.usemwi:
 				conf.append("mailbox=%s@%s" % (self.ext,self.pbx))
 

Modified: trunk/page_user_settings.ptl
===================================================================
--- trunk/page_user_settings.ptl	2007-01-15 21:06:34 UTC (rev 558)
+++ trunk/page_user_settings.ptl	2007-01-15 23:46:08 UTC (rev 559)
@@ -41,12 +41,14 @@
 		return request.redirect(exitPath)
 	form = Form()
 
-#	vm   = int(manager.getVar('VM',   phone.ext, True))
 	dnd  = manager.getVar('DND/%s' % phone.pbx,  phone.ext, False)
 	dsec = int(manager.getVar('DSEC/%s' % phone.pbx, phone.ext, 45))
 	cfim = manager.getVar('CFIM/%s' % phone.pbx, phone.ext, '')
 	cfbs = manager.getVar('CFBS/%s' % phone.pbx, phone.ext, '')
 	cfto = manager.getVar('CFTO/%s' % phone.pbx, phone.ext, '')
+	vmim = manager.getVar('VMIM/%s' % phone.pbx,  phone.ext, False)
+	vmbs = manager.getVar('VMBS/%s' % phone.pbx,  phone.ext, False)
+	vmu  = manager.getVar('VMU/%s' % phone.pbx,  phone.ext, False)
 
 	phones = backend.getChoice("CfgPhone")
 	if type(phones) == types.FunctionType:
@@ -54,12 +56,14 @@
 	phones.remove( (phone.name,phone.name) )
 	phones.insert(0, ('',''))
 
-	form.add(CheckboxWidget,     "dnd",  dnd,          title=_("Enable 'do not disturb'"))
+	form.add(CheckboxWidget,     "dnd",  dnd,  title=_("Enable 'do not disturb'"))
 	form.add(StringWidget, 	     "cfim", cfim, title=_("Immediate call forwarding to"))
 	form.add(StringWidget,       "cfbs", cfbs, title=_("Forward call when busy to"))
 	form.add(StringWidget,       "cfto", cfto, title=_("Forward call when timeout/unavailable to"))
-	form.add(IntWidget,          "dsec", dsec,         title=_("Seconds of incoming ring time"), maxlength=3, size=3)
-#	form.add(CheckboxWidget,     "vm",   vm,           title=_("Use voice mailbox"))
+	form.add(IntWidget,          "dsec", dsec, title=_("Seconds of incoming ring time"), maxlength=3, size=3)
+	form.add(CheckboxWidget,     "vmim", vmim, title=_("Immediate voice mailbox"))
+	form.add(CheckboxWidget,     "vmbs", vmbs, title=_("Voice mailbox on busy"))
+	form.add(CheckboxWidget,     "vmu",  vmu,  title=_("Voice mailbox on timeout/unavailable"))
 	form.add(StringWidget,       "pin", phone.pin, title=_("Voicemail pin"), maxlength=10)
 	try:
 		if phone.secret:
@@ -72,12 +76,14 @@
 	if not form.is_submitted() or form.has_errors():
 		return form.render()
 
-#	manager.setVar('VM/%s' % phone.pbx,   phone.ext, form['vm'])
 	manager.setVar('DND/%s' % phone.pbx,  phone.ext, form['dnd'])
 	manager.setVar('DSEC/%s' % phone.pbx, phone.ext, form['dsec'])
 	manager.setVar('CFIM/%s' % phone.pbx, phone.ext, form['cfim'] or '')
 	manager.setVar('CFBS/%s' % phone.pbx, phone.ext, form['cfbs'] or '')
 	manager.setVar('CFTO/%s' % phone.pbx, phone.ext, form['cfto'] or '')
+	manager.setVar('VMIM/%s' % phone.pbx, phone.ext, form['vmim'])
+	manager.setVar('VMBS/%s' % phone.pbx, phone.ext, form['vmbs'])
+	manager.setVar('VMU/%s' % phone.pbx,  phone.ext, form['vmu'])
 
 	if form["pin"]:
 		phone.pin = form["pin"]



From admin at berlios.de  Tue Jan 16 00:52:05 2007
From: admin at berlios.de (admin at berlios.de)
Date: Tue, 16 Jan 2007 00:52:05 +0100 (CET)
Subject: [Destar-dev] [Patch #1807] some bugfix, new features
Message-ID: <200701152352.l0FNq5sq013515@unicorn.berlios.de>

Patch #1807 has been updated. 

Project: destar
Category: None
Status: Accepted
Submitted by: hholzer
Assigned to : none
Summary: some bugfix, new features

Follow-Ups:

Date: 2007-Jan-09 00:24
By: hholzer

Comment:
Ok, today i didnt have that much time ;-)

first attempt to support devstate module from bristaff.
*) extended call forward option, for toggle switch
added code for devstate hint (let the function led shine bright on your phone, when CF is on ;-)
*) added petantic option at sip global configuration
(newer snom firmware forces you to use this switch, if you want to use # in your dialplan :-()
*) internal: added label support for appendexten

-------------------------------------------------------

Date: 2007-Jan-07 22:20
By: hholzer

Comment:
*) changed some defaults (the default for max. call time to 5min, was not the best one ;-)
*) added sip default moh setting
*) added support for early media in dial macro
  (todo add option at phone setting.)
*) added parallel ringing support in dial macro
  (todo add option at phone setting.)
*) added cfbs and cfto for trunk lines (to support feature request, for cfbs/cfto only for external callers.)

-------------------------------------------------------

Date: 2007-Jan-07 00:43
By: hholzer

Comment:
*) ignore modules if not exists (solves Bug #9708)
*) fix recording
*) add defineable callerid number on sip and iax trunks
    (some provider will verify this.)
*) add sip from domain options
    (for some provider you need this option.)
*) add callerid number change on incoming calls.
    (this gives you the option to add a "0" in front of the number, so if your phone have a missed call list, you dont need to retype the number to call back.)
*) added total timeout on queues, on timeout you can jump to a extension.
*) add DID custom map.
  (like 034562344XX -> pbx/XX, not all provider will cut the leading numbers.)
*) added TOS Field to sip options, making some inputs optional.

-------------------------------------------------------

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/patch/?func=detailpatch&patch_id=1807&group_id=2112


From santiago at avatar.com.co  Mon Jan 15 17:02:30 2007
From: santiago at avatar.com.co (Santiago =?ISO-8859-1?Q?Jos=E9?= Ruano =?ISO-8859-1?Q?Rinc=F3n?=)
Date: Mon, 15 Jan 2007 11:02:30 -0500
Subject: [Destar-dev] [Fwd: Destar patches]
Message-ID: <1168876950.5535.48.camel@localhost.localdomain>

--------- Mensaje reenviado --------
De: Harald Holzer <harald at hholzer.at>
Para: santiago at mail.berlios.de
Asunto: Destar patches
Fecha: Sun, 14 Jan 2007 00:13:51 +0100 (CET)

Patches should apply in the following order:
1-record.diff
2-modulemiss.diff
3-siptos.diff
4-queuetime.diff
5-calleridcustom.diff
5.1-calleridcustomclean.diff
6-cleandefaults.diff
7-emediarpng.diff
7.1-emediarpngclean.diff
8-sipped.diff
9-devstate.diff

patch 6-9 needs "patch -p1".

5 and 5.1 should commited together.
7 and 7.1 should commited together.

1)
fix recording
2)
dont add modules to modules.conf, if they does not exists (Bug #9708)
3)
added sip tos option
4)
added queue timeout
5)
added callerid(number) option on incoming calls
added callerid(number) option on outcoming calls
added sip from domain option
added DID custom mapping option
6)
some better defaults
7)
add early media support in dialmacro
add parallel ringing support in dialmacro
add call forward only on trunk support in dialmacro
8)
added sip pedantic option
9)
added fist attempt for devstate support on cf
cleandup hint support


regards,
Harald
-- 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Esta parte del mensaje est? firmada	digitalmente
URL: <https://lists.berlios.de/pipermail/destar-dev/attachments/20070115/c6b4c44a/attachment.pgp>

From admin at berlios.de  Tue Jan 16 04:20:21 2007
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 15 Jan 2007 22:20:21 -0500 (COT)
Subject: [Destar-dev] [Bug #8996] Echo application configlet doesn't require
	app_echo
Message-ID: <200701160320.l0G3KLJw017775@unicorn.berlios.de>

Bug #8996, was updated on 2006-Oct-03 14:11
Here is a current snapshot of the bug.

Project: DeStar
Category: None
Status: Closed
Resolution: Fixed
Bug Group: None
Priority: 5
Submitted by: santiago
Assigned to : none
Summary: Echo application configlet doesn't require app_echo

Details: The configlet must require the app_echo.so module

Follow-Ups:

Date: 2007-Jan-15 22:20
By: santiago

Comment:
no longer valid
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=8996&group_id=2112


From admin at berlios.de  Tue Jan 16 04:21:40 2007
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 15 Jan 2007 22:21:40 -0500 (COT)
Subject: [Destar-dev] [Bug #8996] Echo application configlet doesn't require
	app_echo
Message-ID: <200701160321.l0G3LerG017911@unicorn.berlios.de>

Bug #8996, was updated on 2006-Oct-03 14:11
Here is a current snapshot of the bug.

Project: DeStar
Category: None
Status: Closed
Resolution: Fixed
Bug Group: None
Priority: 5
Submitted by: santiago
Assigned to : none
Summary: Echo application configlet doesn't require app_echo

Details: The configlet must require the app_echo.so module

Follow-Ups:

Date: 2007-Jan-15 22:21
By: santiago

Comment:
no longer valid
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=8996&group_id=2112


From admin at berlios.de  Tue Jan 16 04:40:04 2007
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 15 Jan 2007 22:40:04 -0500 (COT)
Subject: [Destar-dev] [Bug #8998] Milliwatt application configlet doesn't
	require app_miliwatt
Message-ID: <200701160340.l0G3e43w005952@unicorn.berlios.de>

Bug #8998, was updated on 2006-Oct-03 14:32
Here is a current snapshot of the bug.

Project: DeStar
Category: None
Status: Closed
Resolution: Fixed
Bug Group: None
Priority: 5
Submitted by: santiago
Assigned to : none
Summary: Milliwatt application configlet doesn't require app_miliwatt

Details: Please check all aplications too.

Follow-Ups:

Date: 2007-Jan-15 22:40
By: santiago

Comment:
no longer valid
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=8998&group_id=2112


From santiago at mail.berlios.de  Tue Jan 16 23:29:50 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Tue, 16 Jan 2007 23:29:50 +0100
Subject: [Destar-dev] r560 - branches/quixote2
Message-ID: <200701162229.l0GMToK5030767@sheep.berlios.de>

Author: santiago
Date: 2007-01-16 23:29:49 +0100 (Tue, 16 Jan 2007)
New Revision: 560

Modified:
   branches/quixote2/CHANGELOG.txt
   branches/quixote2/cfg_opt_pbx.py
   branches/quixote2/page_stats_phone.ptl
Log:
Merging trunk and quixote2 branch



Modified: branches/quixote2/CHANGELOG.txt
===================================================================
--- branches/quixote2/CHANGELOG.txt	2007-01-15 23:46:08 UTC (rev 559)
+++ branches/quixote2/CHANGELOG.txt	2007-01-16 22:29:49 UTC (rev 560)
@@ -1,3 +1,21 @@
+2007-01-16:
+* Merging quixote2 branch and trunk 
+
+2007-01-15:
+* Fixed recording. Patch by Harald Holzer
+* dont add modules to modules.conf, if they does not exists (Bug #9708). Patch by Harald Holzer
+* added sip tos option. Patch by Harald Holzer
+* added queue timeout. Patch by Harald Holzer
+* added callerid(number) option on incoming calls. Patch by Harald Holzer
+- added callerid(number) option on outcoming calls
+- added sip from domain option
+- added DID custom mapping option
+* some better defaults. Patch by Harald Holzer
+* add early media support in dialmacro. Patch by Harald Holzer
+- add parallel ringing support in dialmacro
+- add call forward only on trunk support in dialmacro
+* added sip pedantic option. Patch by Harald Holzer
+
 2007-01-13:
 * Deleted some debug prints.
 
@@ -8,6 +26,26 @@
 * page_user*.ptl and page_admin*.ptl: corrected some 
   function's "position"
 
+2006-12-29:
+* "updated" version
+* First attempt to detect if cdr_sqlite3_custom.so exists
+
+2006-12-13:
+* Added global nat option for sip  in cfg_opt_sip_network.py
+* Cosmetical changes in cfg_opt_sip_network.py
+
+2006-12-07:
+* Added queue (member) and hint config for non SIP phones.
+* Partial fix for bug #9633. Needs more test.
+
+2006-12-04:
+* REALLY Moved language=** from [general] to [channels] in zapata.conf. Thanks to tzafrir! :)
+* Create an entry in op_buttons.cfg for Queues.
+
+2006-12-03:
+* Added queues web form variables for iax, zap ad mgcp phones 
+* Fixed some html warnings.
+
 2006-12-02:
 * All missing page_* "upgraded", but there is still work to do.
 
@@ -22,8 +60,34 @@
 * Renamed PageMain to Page
 * Upgraded page_user, page_user_info and page_logout
 
+2006-11-21
+* Configlet to listen active calls with ChanSpy
+
+2006-11-16
+* Removed unnecessary global configlet_tree's in configlets.createIncomingContext()
+* Moved language=** from [general] to [channels] in zapata.conf. Thanks to tzafrir! :)
+
+2006-11-14:
+* Added email variable to the cfg_phone_* configlets. Closes bug #9462.
+* Set int type for the email pin.
+
+2006-11-11:
+* Updated fr.po. Thanks to Anthony Piron.
+
+2006-11-10:
+* configlets.py: added _X incoming context rule. Closes bug #9419.
+
+2006-11-09:
+* configlets.py: fixed incoming context rule.
+
+2006-11-05
+* page_stats_cdr.ptl: display records in DESC order.
+* page_stats_phone.ptl, page_stats_trunks.ptl, page_stats_dialouts.ptl:
+  Fixed current month
+ 
 2006-10-31:
 * A test with page_main and page_login.
+* Simple and ugly bug fix for #9281.
 
 2006-10-30:
 * panelutils: Insterting again startPanelDaemon and stopPanelDaemon,

Modified: branches/quixote2/cfg_opt_pbx.py
===================================================================
--- branches/quixote2/cfg_opt_pbx.py	2007-01-15 23:46:08 UTC (rev 559)
+++ branches/quixote2/cfg_opt_pbx.py	2007-01-16 22:29:49 UTC (rev 560)
@@ -30,7 +30,10 @@
 	groupName = 'PBX'
 		
 	variables = [
-		VarType("name",	  title=_("Name"), len=15),
+		VarType("name",
+			title=_("Name"),
+			len=15,
+			default="defaultpbx"),
 			]
 
 	def checkConfig(self):

Modified: branches/quixote2/page_stats_phone.ptl
===================================================================
--- branches/quixote2/page_stats_phone.ptl	2007-01-15 23:46:08 UTC (rev 559)
+++ branches/quixote2/page_stats_phone.ptl	2007-01-16 22:29:49 UTC (rev 560)
@@ -39,9 +39,9 @@
 	
 	# fix the month value for those smaller than 10 (january ... september) 1 -> 01, 2 ->02 
 	if localtime[1] < 10:
-		localmonth = '0%s' % localtime[1] 
+		localmonth = '0%s' % str(localtime[1])
 	else:
-		localmonth = localtime[1]
+		localmonth = str(localtime[1])
 	
 	#the same for the day
 	if localtime[2] < 10:



From santiago at mail.berlios.de  Tue Jan 16 23:31:16 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Tue, 16 Jan 2007 23:31:16 +0100
Subject: [Destar-dev] r561 - branches/quixote2
Message-ID: <200701162231.l0GMVGFK031289@sheep.berlios.de>

Author: santiago
Date: 2007-01-16 23:31:15 +0100 (Tue, 16 Jan 2007)
New Revision: 561

Modified:
   branches/quixote2/page_admin_pbxstate.ptl
Log:
merging...



Modified: branches/quixote2/page_admin_pbxstate.ptl
===================================================================
--- branches/quixote2/page_admin_pbxstate.ptl	2007-01-16 22:29:49 UTC (rev 560)
+++ branches/quixote2/page_admin_pbxstate.ptl	2007-01-16 22:31:15 UTC (rev 561)
@@ -98,7 +98,7 @@
 		x = y = 0
 		for obj in phones:
 			#print obj.name
-			if obj.technology == "virtual":
+			if obj.technology == "virtual" or obj.technology == "QUEUE":
 				continue
 
 			#id = '<a href="%d/state">%s</a>' % (obj._id, ' '.join(obj.row()[1:]) )



From santiago at mail.berlios.de  Tue Jan 16 23:32:59 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Tue, 16 Jan 2007 23:32:59 +0100
Subject: [Destar-dev] r562 - branches/quixote2
Message-ID: <200701162232.l0GMWxPU031908@sheep.berlios.de>

Author: santiago
Date: 2007-01-16 23:32:59 +0100 (Tue, 16 Jan 2007)
New Revision: 562

Modified:
   branches/quixote2/page_stats_cdr.ptl
   branches/quixote2/page_stats_dialouts.ptl
   branches/quixote2/page_stats_trunks.ptl
Log:
merging...



Modified: branches/quixote2/page_stats_cdr.ptl
===================================================================
--- branches/quixote2/page_stats_cdr.ptl	2007-01-16 22:31:15 UTC (rev 561)
+++ branches/quixote2/page_stats_cdr.ptl	2007-01-16 22:32:59 UTC (rev 562)
@@ -142,7 +142,7 @@
 	form.add_single_select('today', value=localday, options=zip( generateDaysNumbers() , range(1,32), generateDaysNumbers()  ), render_br=True)
 		
 	form.add(HiddenWidget, 'pagenumber', value='_newest')
-	form.add(HiddenWidget, 'order', value='ASC')
+	form.add(HiddenWidget, 'order', value='DESC')
 	form.add(HiddenWidget, 'orderby', value='Time_of_start')
 
 	form.add(SubmitWidget, '_submit', _("Search"), render_br=True)

Modified: branches/quixote2/page_stats_dialouts.ptl
===================================================================
--- branches/quixote2/page_stats_dialouts.ptl	2007-01-16 22:31:15 UTC (rev 561)
+++ branches/quixote2/page_stats_dialouts.ptl	2007-01-16 22:32:59 UTC (rev 562)
@@ -39,9 +39,9 @@
 	
 	# fix the month value for those smaller than 10 (january ... september) 1 -> 01, 2 ->02 
 	if localtime[1] < 10:
-		localmonth = '0%s' % localtime[1] 
+		localmonth = '0%s' % str(localtime[1])
 	else:
-		localmonth = localtime[1]
+		localmonth = str(localtime[1])
 	
 	#the same for the day
 	if localtime[2] < 10:

Modified: branches/quixote2/page_stats_trunks.ptl
===================================================================
--- branches/quixote2/page_stats_trunks.ptl	2007-01-16 22:31:15 UTC (rev 561)
+++ branches/quixote2/page_stats_trunks.ptl	2007-01-16 22:32:59 UTC (rev 562)
@@ -39,9 +39,9 @@
 	
 	# fix the month value for those smaller than 10 (january ... september) 1 -> 01, 2 ->02 
 	if localtime[1] < 10:
-		localmonth = '0%s' % localtime[1] 
+		localmonth = '0%s' % str(localtime[1]) 
 	else:
-		localmonth = localtime[1]
+		localmonth = str(localtime[1])
 	
 	#the same for the day
 	if localtime[2] < 10:



From santiago at mail.berlios.de  Tue Jan 16 23:34:48 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Tue, 16 Jan 2007 23:34:48 +0100
Subject: [Destar-dev] r563 - branches/quixote2
Message-ID: <200701162234.l0GMYmtP032526@sheep.berlios.de>

Author: santiago
Date: 2007-01-16 23:34:47 +0100 (Tue, 16 Jan 2007)
New Revision: 563

Modified:
   branches/quixote2/page_config.ptl
   branches/quixote2/page_user_settings.ptl
Log:
merging...



Modified: branches/quixote2/page_config.ptl
===================================================================
--- branches/quixote2/page_config.ptl	2007-01-16 22:32:59 UTC (rev 562)
+++ branches/quixote2/page_config.ptl	2007-01-16 22:34:47 UTC (rev 563)
@@ -120,7 +120,6 @@
 		if self.tipped:
 			'</ul>'
 
-
 	def showConfigurables [plain] (sefl, head):
 		'<p>'
 		head

Modified: branches/quixote2/page_user_settings.ptl
===================================================================
--- branches/quixote2/page_user_settings.ptl	2007-01-16 22:32:59 UTC (rev 562)
+++ branches/quixote2/page_user_settings.ptl	2007-01-16 22:34:47 UTC (rev 563)
@@ -31,12 +31,14 @@
 		return request.redirect(exitPath)
 	form = Form()
 
-#	vm   = int(manager.getVar('VM',   phone.ext, True))
 	dnd  = manager.getVar('DND/%s' % phone.pbx,  phone.ext, False)
 	dsec = int(manager.getVar('DSEC/%s' % phone.pbx, phone.ext, 45))
 	cfim = manager.getVar('CFIM/%s' % phone.pbx, phone.ext, '')
 	cfbs = manager.getVar('CFBS/%s' % phone.pbx, phone.ext, '')
 	cfto = manager.getVar('CFTO/%s' % phone.pbx, phone.ext, '')
+	vmim = manager.getVar('VMIM/%s' % phone.pbx,  phone.ext, False)
+	vmbs = manager.getVar('VMBS/%s' % phone.pbx,  phone.ext, False)
+	vmu  = manager.getVar('VMU/%s' % phone.pbx,  phone.ext, False)
 
 	phones = backend.getChoice("CfgPhone")
 	if type(phones) == types.FunctionType:
@@ -44,16 +46,18 @@
 	phones.remove( (phone.name,phone.name) )
 	phones.insert(0, ('',''))
 
-	form.add(CheckboxWidget,     "dnd",  dnd,          title=_("Enable 'do not disturb'"))
+	form.add(CheckboxWidget,     "dnd",  dnd,  title=_("Enable 'do not disturb'"))
 	form.add(StringWidget, 	     "cfim", cfim, title=_("Immediate call forwarding to"))
 	form.add(StringWidget,       "cfbs", cfbs, title=_("Forward call when busy to"))
 	form.add(StringWidget,       "cfto", cfto, title=_("Forward call when timeout/unavailable to"))
-	form.add(IntWidget,          "dsec", dsec,         title=_("Seconds of incoming ring time"), maxlength=3, size=3)
-#	form.add(CheckboxWidget,     "vm",   vm,           title=_("Use voice mailbox"))
-	form.add(StringWidget,       "pin", phone.pin, title=_("Voicemail pin"), len=10)
+	form.add(IntWidget,          "dsec", dsec, title=_("Seconds of incoming ring time"), maxlength=3, size=3)
+	form.add(CheckboxWidget,     "vmim", vmim, title=_("Immediate voice mailbox"))
+	form.add(CheckboxWidget,     "vmbs", vmbs, title=_("Voice mailbox on busy"))
+	form.add(CheckboxWidget,     "vmu",  vmu,  title=_("Voice mailbox on timeout/unavailable"))
+	form.add(StringWidget,       "pin", phone.pin, title=_("Voicemail pin"), maxlength=10)
 	try:
 		if phone.secret:
-			form.add(StringWidget,  "secret", phone.secret, title=_("Extension Password"), len=10)
+			form.add(StringWidget,  "secret", phone.secret, title=_("Extension Password"), maxlength=10)
 	except AttributeError:
 		pass
 	form.add(SubmitWidget, '_submit', _("Submit"), render_br=False)
@@ -62,12 +66,14 @@
 	if not form.is_submitted() or form.has_errors():
 		return form.render()
 
-#	manager.setVar('VM/%s' % phone.pbx,   phone.ext, form['vm'])
 	manager.setVar('DND/%s' % phone.pbx,  phone.ext, form['dnd'])
 	manager.setVar('DSEC/%s' % phone.pbx, phone.ext, form['dsec'])
 	manager.setVar('CFIM/%s' % phone.pbx, phone.ext, form['cfim'] or '')
 	manager.setVar('CFBS/%s' % phone.pbx, phone.ext, form['cfbs'] or '')
 	manager.setVar('CFTO/%s' % phone.pbx, phone.ext, form['cfto'] or '')
+	manager.setVar('VMIM/%s' % phone.pbx, phone.ext, form['vmim'])
+	manager.setVar('VMBS/%s' % phone.pbx, phone.ext, form['vmbs'])
+	manager.setVar('VMU/%s' % phone.pbx,  phone.ext, form['vmu'])
 
 	if form["pin"]:
 		phone.pin = form["pin"]



From santiago at mail.berlios.de  Tue Jan 16 23:36:30 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Tue, 16 Jan 2007 23:36:30 +0100
Subject: [Destar-dev] r564 - branches/quixote2
Message-ID: <200701162236.l0GMaUJr032611@sheep.berlios.de>

Author: santiago
Date: 2007-01-16 23:36:27 +0100 (Tue, 16 Jan 2007)
New Revision: 564

Added:
   branches/quixote2/cfg_app_chanspy.py
   branches/quixote2/cfg_app_voicemailsettings.py
Modified:
   branches/quixote2/cfg_app_callfw.py
   branches/quixote2/cfg_dialout_normal.py
   branches/quixote2/cfg_opt_did.py
   branches/quixote2/cfg_opt_monitor.py
   branches/quixote2/cfg_opt_sip_network.py
   branches/quixote2/cfg_opt_voicemail.py
   branches/quixote2/cfg_phone_epygi.py
   branches/quixote2/cfg_phone_iax.py
   branches/quixote2/cfg_phone_mgcp.py
   branches/quixote2/cfg_phone_queue.py
   branches/quixote2/cfg_phone_sip.py
   branches/quixote2/cfg_phone_zap.py
   branches/quixote2/cfg_trunk_iax.py
   branches/quixote2/cfg_trunk_sip.py
Log:
merging configlets



Modified: branches/quixote2/cfg_app_callfw.py
===================================================================
--- branches/quixote2/cfg_app_callfw.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_app_callfw.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -33,7 +33,9 @@
 			VarType("type", title=_("Type"), type="choice", options=( ("CFIM", _("Call Forwarding Unconditional")), \
 			("CFBS", _("Call Forwarding if Busy")), ("CFTO", _("Call Forwarding if Timeout/Unavailable")) )),
 			VarType("set",      title=_("Setting preffix"), len=6, default="*21"),
-			VarType("ext",   title=_("Unsetting extension"), len=6, default="*22")
+			VarType("ext",   title=_("Unsetting extension"), len=6, default="*22"),
+			VarType("toggle",   title=_("Set function toggleable"), type="bool"),
+			VarType("devstateprefix",   title=_("Create Devstate extension. Devstate Prefix:"), len=8, default="")
 		       	]
 
 		self.dependencies = [ DepType("pbx", 
@@ -45,16 +47,30 @@
 		return ("%s / %s" % (self.set,self.ext),"%s %s" % (self.shortName, self.type), self.pbx)
 
 	def createAsteriskConfig(self):
+		if self.devstateprefix:
+		    needModule("app_devstate")
 		c = AstConf("extensions.conf")
 		c.setSection(self.pbx)
+		c.appendExten("_%sX." % self.set, "Answer()")
+		if self.toggle:
+			c.appendExten("_%sX." % self.set, "Set(testcf=${DB(%s/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
+			c.appendExten("_%sX." % self.set, 'GotoIf($["${testcf}" = ""]?:switchoff)')
 		c.appendExten("_%sX." % self.set, "Set(DB(%s/%s/${CALLERIDNUM})=${EXTEN:%d})" % (self.type, self.pbx,len(self.set)))
+		if self.devstateprefix:
+			c.appendExten("_%sX." % self.set, "Devstate(%s_%s_${CALLERIDNUM},2)" % (self.type.lower(), self.pbx))
 		if self.type == "CFIM":
 			c.appendExten("_%sX." % self.set, "Playback(call-fwd-unconditional)")
 		elif self.type == "CFTO":
 			c.appendExten("_%sX." % self.set, "Playback(call-fwd-no-ans)")
 		else:
 			c.appendExten("_%sX." % self.set, "Playback(call-fwd-on-busy)")
+		c.appendExten("_%sX." % self.set, "Wait(1)")
 		c.appendExten("_%sX." % self.set, "Hangup")
-		c.appendExten("%s" % self.ext, "DBdel(%s/%s/${CALLERIDNUM})" % (self.type,self.pbx))
+		c.appendExten("_%sX." % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="switchoff")
+		c.appendExten("%s" % self.ext, "Answer()")
+		c.appendExten("%s" % self.ext, "DBdel(%s/%s/${CALLERIDNUM})" % (self.type, self.pbx))
+		if self.devstateprefix:
+			c.appendExten("%s" % self.ext, "Devstate(%s_%s_${CALLERIDNUM},0)" % (self.type.lower(), self.pbx))
 		c.appendExten("%s" % self.ext, "Playback(call-fwd-cancelled)")
+		c.appendExten("%s" % self.ext, "Wait(1)")
 		c.appendExten("%s" % self.ext, "Hangup")

Added: branches/quixote2/cfg_app_chanspy.py
===================================================================
--- branches/quixote2/cfg_app_chanspy.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_app_chanspy.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -0,0 +1,65 @@
+# -*- coding: iso-latin-1 -*-
+#
+# Copyright (C) 2006 by Diego Andr?s Asenjo G.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+
+
+from configlets import *
+
+
+class CfgAppChanspy(CfgApp):
+
+	shortName   = _("Listen calls")
+	newObjectTitle  = _("New spy extension")
+	description = _("Listen all calls on the Asterisk server. Jump through calls pressing *.")
+	
+	def createVariables(self):
+		self.variables   = [ 
+			VarType("pbx",
+				title=_("Virtual PBX"),
+				type="choice",
+				options=getChoice("CfgOptPBX")),
+			
+			VarType("ext",
+				title=_("Extension"),
+				len=6),
+
+			VarType("password",
+				type="int",
+				title=_("Password"),
+				len=6),
+
+			VarType("quiet",
+				title=_("Be quiet?"),
+				type="bool",
+				default=True)]
+
+		self.dependencies = [ 
+			DepType("pbx",
+			type="hard",
+			message = _("This is a Dependency")),]
+
+	def createAsteriskConfig(self):
+		needModule("app_chanspy")
+		c = AstConf("extensions.conf")
+		c.setSection(self.pbx)
+		if self.password:
+			c.appendExten(self.ext, "Authenticate(%s)" % self.password)
+		if self.quiet:
+			c.appendExten(self.ext, "Chanspy(|q)")
+		else: 
+			c.appendExten(self.ext, "Chanspy()")

Copied: branches/quixote2/cfg_app_voicemailsettings.py (from rev 559, trunk/cfg_app_voicemailsettings.py)

Modified: branches/quixote2/cfg_dialout_normal.py
===================================================================
--- branches/quixote2/cfg_dialout_normal.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_dialout_normal.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -35,8 +35,8 @@
 		VarType("pattern", title=_("Pattern"), len=55),
 		VarType("rmprefix", title=_("Remove Prefix of length"), len=10, default="0"),
 		VarType("addprefix", title=_("Add Prefix"), len=10, optional=True, default=""),
-		VarType("maxtime", title=_("Maximum call time in seconds"), type="int", len=15, default=300),
-		VarType("ringtime", title=_("Ringing time in seconds"), type="int", len=15, default=25),
+		VarType("maxtime", title=_("Maximum call time in seconds"), type="int", len=15, default=6000),
+		VarType("ringtime", title=_("Ringing time in seconds"), type="int", len=15, default=300),
 		VarType("qlookup", title=_("Search on quick dial list?"), type="bool"),
 
 		VarType("dis_transfer", title=_("Disallow calling user transfer?"), type="bool"),
@@ -84,9 +84,9 @@
 		c.append("; params: exten,secret,timeout")
 		needModule("app_authenticate")
 		if self.dis_transfer:
-		       opts="t"
+		       opts="tW"
 		else:
-		       opts="Tt"
+		       opts="TtW"
 		if self.qlookup:
 			c.appendExten("s","Set(dest=${DB(QUICKDIALLIST/GLOBAL/${ARG1})})",e="Goto(3)")
 			c.appendExten("s",'Set(ARG1=${dest})')
@@ -113,9 +113,13 @@
 					c.appendExten("s","Set(TIMEOUT(absolute)=${timeout})")
 					c.appendExten("s","Set(CDR(outtrunk)=%s)" % obj.name)
 					if self.__getitem__("trunk_%s_price" % obj.name):
-						c.appendExten("s","Set(CDR(accountcode)=%s)" % self.__getitem__("trunk_%s_price" % obj.name))	
+						c.appendExten("s","Set(CDR(accountcode)=%s)" % self.__getitem__("trunk_%s_price" % obj.name))
 					else:
-						c.appendExten("s","Set(CDR(accountcode)=0)")	
+						c.appendExten("s","Set(CDR(accountcode)=0)")
+					if obj.clidnameout:
+						c.appendExten("s","Set(CALLERID(name)=%s)" % obj.clidnameout)
+					if obj.clidnumout:
+						c.appendExten("s","Set(CALLERID(number)=%s)" % obj.clidnumout)
 					c.appendExten("s","Dial(%s,%d|${options})" % (obj.dial,self.ringtime))
 			except KeyError:
 				pass

Modified: branches/quixote2/cfg_opt_did.py
===================================================================
--- branches/quixote2/cfg_opt_did.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_opt_did.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -45,7 +45,7 @@
 					title = _("Go to"),
 					type = "radio",
 					default = 'phone',
-					options = [('phone', _("Phone")), ('ivr', _("IVR"))]),
+					options = [('phone', _("Phone")), ('ivr', _("IVR")), ("custommap", _("Custom map"))]),
 
 			VarType("phone",
 					title = _("Phone to ring"),
@@ -59,10 +59,31 @@
 					type = "choice", 
 					options = getChoice("CfgIVR")),
 
+			VarType("custommappbx",
+                                        title=_("Custom map, PBX"),
+                                        type="choice",
+                                        optional = True,
+                                        options=getChoice("CfgOptPBX")),
+
+    			VarType("custommapdest",
+                                        title = _("Custom map, destination"),
+                                        len = 30,
+                                        optional = True),
+
+			VarType("callerid",
+					title=_("CallerID:"),
+					type="label"),
+
 			VarType("clid",
-					title = _("Change Caller*Id to:"), 
+					title = _("Change Caller*Id Name to:"),
 					len = 25,
-					optional = True)]
+					optional = True),
+
+			VarType("clidnum",
+					title = _("Change Caller*Id Number to:"),
+					len = 25,
+					optional = True),
+					]
 					
 		self.dependencies = [
 			DepType("trunk", 
@@ -104,6 +125,9 @@
 		if self.clid:
 			needModule("func_callerid")
 			c.appendExten(self.did,"Set(CALLERID(name)=%s)" %  self.clid)
+		if self.clidnum:
+			needModule("func_callerid")
+			c.appendExten(self.did,"Set(CALLERID(number)=%s)" %  self.clidnum)
 		if self.contextin == 'phone' and self.phone:
 			import configlets
 			obj = configlets.configlet_tree.getConfigletByName(self.phone)
@@ -113,5 +137,5 @@
 				pass
 		elif self.contextin == 'ivr' and self.ivr:
 			c.appendExten(self.did,"Goto(%s,s,1)" % self.ivr)
-
-
+        	elif self.contextin == 'custommap' and self.custommapdest:
+        		c.appendExten(self.did,"Goto(%s,%s,1)" % (self.custommappbx, self.custommapdest))

Modified: branches/quixote2/cfg_opt_monitor.py
===================================================================
--- branches/quixote2/cfg_opt_monitor.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_opt_monitor.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -36,6 +36,11 @@
 		return (self.shortName, self.ext)
 		
 	def createAsteriskConfig(self):
+		needModule("res_monitor")
+		needModule("app_record")
+		c = AstConf("extensions.conf")
+        	c.setSection("globals")
+		c.append("DYNAMIC_FEATURES=>automon")
 		c = AstConf("features.conf")
         	c.setSection("featuremap")
 		c.append("automon=>%s" % self.ext)

Modified: branches/quixote2/cfg_opt_sip_network.py
===================================================================
--- branches/quixote2/cfg_opt_sip_network.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_opt_sip_network.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -25,18 +25,73 @@
 
 class CfgOptSipNetwork(CfgOptSingle):
 
-	shortName = _("SIP Network Options")
-	newObjectTitle = _("SIP Network Options")
+	shortName = _("SIP Options")
+	newObjectTitle = _("SIP Options")
 	
 	def createVariables(self):
 		self.variables = [
-			VarType("doBind",	title=_("Bind specific address?"), type="bool"),
-			VarType("bindaddr",	title=_("Bind address"), len=25),
-			VarType("extintnet",	title=_("External/Internal IP"), type="label"),
-			VarType("setExt",	title=_("Force external ip/internel network?"),	type="bool"),
-			VarType("extip",	title=_("External ip"), len=25),
-			VarType("intnet",	title=_("Internal network"), len=25),
-			VarType("intnetmask",	title=_("Netmask"), len=25),
+			VarType("doBind",	
+					title=_("Bind specific address?"), 
+					type="bool"),
+
+			VarType("bindaddr",	
+					title=_("Bind address"), 
+					len=25,
+					optional=True),
+
+			VarType("globalnat",
+					title=_("Global NAT"),
+					type="choice",
+					options=( ("no",_("No")),
+						  ("yes",_("Yes")),
+						  ("always",_("Always")), 
+						  ("route",_("Route")) ), 
+					default="no"),
+
+			# Hell, what a mess in Asterisk and Snom FW >6.2.2, pedantic is needed to get "#" working
+			VarType("pedantic",	
+					title=_("SIP Pedantic checking of Call-ID"),	
+					type="bool",
+					optional=True),
+
+			VarType("extintnet",	
+					title=_("External/Internal IP"), 
+					type="label"),
+
+			VarType("setExt",	
+					title=_("Force external ip/internel network?"),	
+					type="bool"),
+
+			VarType("extip",	
+					title=_("External ip"), 
+					len=25,
+					optional=True),
+
+			VarType("intnet",	
+					title=_("Internal network"), 
+					len=25,
+					optional=True),
+
+			VarType("intnetmask",	
+					title=_("Netmask"), 
+					len=25,
+					optional=True),
+
+			VarType("tos",
+					title=_("TOS Field"),
+					len=10,
+					optional=True,
+					default="184"),
+
+			VarType("sipdefaults",
+					title=_("Defaults"), 
+					type="label"),
+
+			VarType("moh",
+                                        title=_("Music on hold"),
+                                        type="choice",
+                                        optional = True,
+                                        options=getChoice("CfgOptMusic")),
 		]
 
 	def checkConfig(self):
@@ -60,8 +115,18 @@
 
 	def createAsteriskConfig(self):
 		c = AstConf("sip.conf")
+		c.setSection("general")
 		if self.doBind:
 			c.append("bindaddr=%s" % self.bindaddr)
 		if self.setExt:
-			c.append("externip=%s" % self.extip)
-			c.append("localnet=%s/%s" % (self.intnet,self.intnetmask))
+			if self.extip:
+				c.append("externip=%s" % self.extip)
+			if self.intnet:
+				c.append("localnet=%s/%s" % (self.intnet,self.intnetmask))
+		if self.tos:
+			c.append("tos=%s" % self.tos)
+		if self.moh:
+			c.append("musiconhold=%s" % self.moh)
+     		if self.pedantic:
+             		c.append("pedantic=yes")
+		c.append("nat=%s" % self.globalnat)

Modified: branches/quixote2/cfg_opt_voicemail.py
===================================================================
--- branches/quixote2/cfg_opt_voicemail.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_opt_voicemail.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -27,7 +27,9 @@
 	newObjectTitle = _("Voicemail settings")
 	
 	def createVariables(self):
-		self.variables = [VarType("recording", title=_("Recording settings"), type="label"),
+		self.variables = [
+				 VarType("enable", title=_("Enable Voicemail on phones"), type="bool", default=True),
+				 VarType("recording", title=_("Recording settings"), type="label"),
 				 VarType("format", title=_("File format for voicemail messages"), type="choice",
 								   options=[('wav49','WAV (common sound format)'),('gsm','GSM (smaller)')], default="wav49"),
 				 VarType("maxmessage", title=_("Maximal message length (in seconds)"), type="int", default=180, len=3),
@@ -64,6 +66,10 @@
 		c.appendValue(self, "silencethreshold")
 		c.appendValue(self, "maxlogins")
 		c.append("skipms=%d" % (self.skipms * 1000))
+		
+		if self.enable:
+			needModule("res_adsi")
+			needModule("app_voicemail")
 
 		if self.emailintegration and self.serveremail:
 			c.appendValue(self,"serveremail")

Modified: branches/quixote2/cfg_phone_epygi.py
===================================================================
--- branches/quixote2/cfg_phone_epygi.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_phone_epygi.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -120,6 +120,7 @@
 
 			VarType("pin",
 					title=_("Voicemail PIN"),
+					type="int",
 					optional=True,
 					len=6),
 

Modified: branches/quixote2/cfg_phone_iax.py
===================================================================
--- branches/quixote2/cfg_phone_iax.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_phone_iax.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -71,7 +71,20 @@
 			VarType("callgroup",
 					title=_("Call group number"),
 					optional=True),
+
+			VarType("QueueLab",
+					title=_("Call Queues"),
+					type="label",
+					hide=True),
+			
+			VarType("queues",
+					title=_("Agent of queues:"),
+					type="mchoice",
+					optional=True,
+					options=getChoice("CfgPhoneQueue"),
+					hide=True),
 	
+	
 			VarType("panelLab",
 					title=_("Operator Panel"),
 					type="label",
@@ -99,9 +112,16 @@
 
 			VarType("pin",
 					title=_("Voicemail PIN"),
+					type="int",
 					optional=True,
 					len=6),
 
+			VarType("email",
+					title=_("Voicemail email"),
+					optional=True,
+					len=60),
+			
+
 			VarType("notransfer",
 					title=_("Skip asterisk media path?"),
 					type="bool"),
@@ -266,3 +286,4 @@
 		self.createVoicemailConfig(iax)
 		self.createOutgoingContext()
 		self.createPanelConfig()
+		self.createQueuesConfig()

Modified: branches/quixote2/cfg_phone_mgcp.py
===================================================================
--- branches/quixote2/cfg_phone_mgcp.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_phone_mgcp.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -91,6 +91,18 @@
 			VarType("callgroup",
 					title=_("Call group number"),
 					optional=True),
+	
+			VarType("QueueLab",
+					title=_("Call Queues"),
+					type="label",
+					hide=True),
+			
+			VarType("queues",
+					title=_("Agent of queues:"),
+					type="mchoice",
+					optional=True,
+					options=getChoice("CfgPhoneQueue"),
+					hide=True),
 
 			VarType("Voicemail",
 					title=_("Voicemail settings"),
@@ -112,6 +124,11 @@
 					optional=True,
 					len=6),
 
+			VarType("email",
+					title=_("Voicemail email"),
+					optional=True,
+					len=60),
+			
 			VarType("Outbound",
 					title=_("Calls from the phone"),
 					type="label"),
@@ -269,3 +286,4 @@
 		self.createExtensionConfig()
 		self.createVoicemailConfig(mgcp)
 		self.createOutgoingContext()
+		self.createQueuesConfig()

Modified: branches/quixote2/cfg_phone_queue.py
===================================================================
--- branches/quixote2/cfg_phone_queue.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_phone_queue.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -26,7 +26,7 @@
 
 	shortName = _("Normal Call Queue")
 	newObjectTitle = _("New Call Queue")
-	technology = "Virtual"
+	technology = "QUEUE"
 	
 	def createVariables(self):
 		self.variables = [
@@ -45,10 +45,21 @@
 					len=6),
 
 			VarType("timeout",
-					title=_("Timeout"),
+					title=_("Phone timeout"),
 					optional=True,
 					len=6),
 
+	                VarType("queuetimeout",
+        	            		title=_("Queue Timeout"),
+                                	optional=True,
+                                	len=6),
+
+                	VarType("queuetimeoutext",
+                        		title=_("On queue timeout forward to extension"),
+                        		type="choice",
+                        		optional=True,
+                        		options=getChoice("CfgPhone")),
+
 			VarType("moh",
 					title=_("Music-on-hold class"),
 					type="choice",
@@ -229,26 +240,35 @@
 			else:
 				mon_line = "MixMonitor(${TIMESTAMP}-${CALLERIDNAME}(${CALLERIDNUM})-${EXTEN}.%s|%s)" % (self.monitorfileformat,options)
 
+		qnames = []
 		if self.ext:
-                        extensions.appendExten(self.ext, "Answer")
+		    qnames.append(self.ext)
+		if self.name:
+		    qnames.append(self.name)
+
+		for qname in qnames:
+			opt = "Tth"
 			if mon_line:
-				extensions.appendExten(self.ext, mon_line)
+				extensions.appendExten(qname, mon_line)
 
 			if self.ring:
-				extensions.appendExten(self.ext, "Queue(%s|Tthr)" % self.name)
-			elif self.moh:
-				extensions.appendExten(self.ext, "SetMusicOnHold(%s)" % self.moh)
-				extensions.appendExten(self.ext, "Queue(%s|Tth)" % self.name)
+				opt = opt + "r"
+				
+			if self.moh:
+				extensions.appendExten(qname, "Answer")
+				extensions.appendExten(qname, "SetMusicOnHold(%s)" % self.moh)
 
+			if self.queuetimeout and self.queuetimeoutext:
+				opt = opt + "n"
+				extensions.appendExten(qname, "Queue(%s|%s|||%s)" % (self.name, opt, self.queuetimeout))
+				import configlets
+				obj = configlets.configlet_tree.getConfigletByName(self.queuetimeoutext)
+				try:
+					extensions.appendExten(qname, "Goto(%s,%s,1)" %  (obj.pbx, self.queuetimeoutext))
+				except AttributeError:
+					pass
+			else:
+				extensions.appendExten(qname, "Queue(%s|%s)" % (self.name, opt))
+		self.createPanelConfig()
 
-		extensions.appendExten(self.name, "Answer")
-		if mon_line:
-			extensions.appendExten(self.name, mon_line)
-		
-		if self.ring:
-			extensions.appendExten(self.name, "Queue(%s|Tthr)" % self.name)
-		elif self.moh:
-			extensions.appendExten(self.name, "SetMusicOnHold(%s)" % self.moh)
-			extensions.appendExten(self.name, "Queue(%s|Tth)" % self.name)
 
-

Modified: branches/quixote2/cfg_phone_sip.py
===================================================================
--- branches/quixote2/cfg_phone_sip.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_phone_sip.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -121,6 +121,7 @@
 			
 			VarType("pin",
 					title=_("Voicemail PIN"),
+					type="int",
 					optional=True,
 					len=6),
 			
@@ -301,7 +302,6 @@
 		sip.append("subscribecontext=%s" % pbx)
 
 		self.createExtensionConfig()
-		self.createHintConfig()
 		self.createVoicemailConfig(sip)
 		self.createOutgoingContext()
 		self.createPanelConfig()

Modified: branches/quixote2/cfg_phone_zap.py
===================================================================
--- branches/quixote2/cfg_phone_zap.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_phone_zap.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -78,7 +78,19 @@
 			VarType("callgroup",
 				title=_("Call group number"),
 				optional=True),
+	
+			VarType("QueueLab",
+					title=_("Call Queues"),
+					type="label",
+					hide=True),
 			
+			VarType("queues",
+					title=_("Agent of queues:"),
+					type="mchoice",
+					optional=True,
+					options=getChoice("CfgPhoneQueue"),
+					hide=True),
+			
 			VarType("panelLab",
 				title=_("Operator Panel"),
 				type="label",
@@ -107,9 +119,15 @@
 
 			VarType("pin",
 				title=_("Voicemail PIN"),
+				type="int",
 				optional=True,
 				len=6),
 	
+			VarType("email",
+					title=_("Voicemail email"),
+					optional=True,
+					len=60),
+			
 			VarType("Outbound",
 				title=_("Calls from the phone"),
 				type="label"),
@@ -269,6 +287,7 @@
 		self.createVoicemailConfig(c)
 		self.createOutgoingContext()
 		self.createPanelConfig()
+		self.createQueuesConfig()
 
 	def channelString(self):
 		return "%s/%s" % (self.technology, self.channels)

Modified: branches/quixote2/cfg_trunk_iax.py
===================================================================
--- branches/quixote2/cfg_trunk_iax.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_trunk_iax.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -99,6 +99,11 @@
 				len=40,
 				optional=True),
 
+			VarType("clidnumin",
+				title=_("Change Caller*Id Number to:"),
+				len=40,
+				optional=True),
+
 			VarType("contextin",
 				title=_("Go to"),
 				type="radio",
@@ -123,9 +128,24 @@
 				optional=True,
 				options=getChoice("CfgOptPBX")),
 
+			VarType("Outbound",
+				title=_("Outgoing calls to IAX trunk"),
+				type="label"),
+
+			VarType("clidnameout",
+				title=_("Change Caller*Id Name to:"),
+				len=40,
+				optional=True),
+
+			VarType("clidnumout",
+				title=_("Change Caller*Id Number to:"),
+				len=40,
+				optional=True),
+
 			VarType("dial",
 				hide=True,
-				len=50),]
+				len=50),
+				]
 	
 		self.dependencies = [
 			DepType("phone", 

Modified: branches/quixote2/cfg_trunk_sip.py
===================================================================
--- branches/quixote2/cfg_trunk_sip.py	2007-01-16 22:34:47 UTC (rev 563)
+++ branches/quixote2/cfg_trunk_sip.py	2007-01-16 22:36:27 UTC (rev 564)
@@ -73,6 +73,11 @@
 				title=_("Show this trunk in the panel"),
 				type="bool",
 				hide=True),
+
+	    		VarType("fromdomain",
+                               title=_("Sip domain:"),
+                               len=40,
+                               optional=True),
 	
 			VarType("Inbound",
 				title=_("Calls from SIP trunk"),
@@ -82,6 +87,11 @@
 				title=_("Change Caller*Id to:"),
 				len=25,
 				optional=True),
+
+ 			VarType("clidnumin",
+ 				title=_("Change Caller*Id Number to:"),
+ 				len=40,
+ 				optional=True),
 			
 			VarType("contextin",
 				title=_("Go to"),
@@ -107,9 +117,24 @@
 				optional=True,
 				options=getChoice("CfgOptPBX")),
 
+ 			VarType("Outbound",
+ 				title=_("Outgoing calls to IAX trunk"),
+ 				type="label"),
+ 
+ 			VarType("clidnameout",
+ 				title=_("Change Caller*Id Name to:"),
+ 				len=40,
+ 				optional=True),
+ 
+ 			VarType("clidnumout",
+ 				title=_("Change Caller*Id Number to:"),
+ 				len=40,
+ 				optional=True),
+
 			VarType("dial",
 				hide=True,
-				len=80),]
+				len=80),
+				]
 
 		self.dependencies = [
 			DepType("phone", 
@@ -156,6 +181,8 @@
 			c.append("host=%s" % self.host)
 			c.append("context=in-%s" % self.name)
 			c.append("canreinvite=no")
+			if self.fromdomain:
+				c.append("fromdomain=%s" % self.fromdomain)
 			if self.nat:
 				c.append("nat=yes")
 			if self.insecure:



From santiago at mail.berlios.de  Tue Jan 16 23:38:16 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Tue, 16 Jan 2007 23:38:16 +0100
Subject: [Destar-dev] r565 - branches/quixote2
Message-ID: <200701162238.l0GMcGka000081@sheep.berlios.de>

Author: santiago
Date: 2007-01-16 23:38:15 +0100 (Tue, 16 Jan 2007)
New Revision: 565

Modified:
   branches/quixote2/StatsHelper.ptl
   branches/quixote2/Templates.ptl
Log:
merging Templates and StatsHelper



Modified: branches/quixote2/StatsHelper.ptl
===================================================================
--- branches/quixote2/StatsHelper.ptl	2007-01-16 22:36:27 UTC (rev 564)
+++ branches/quixote2/StatsHelper.ptl	2007-01-16 22:38:15 UTC (rev 565)
@@ -120,7 +120,7 @@
 	'</b></td><td><b>'+_(str("Not Answered Calls"))
 	'</b></td><td><b>'+_(str("Busy Calls"))
 	'</b></td><td><b>'+_(str("Failed Calls"))
-	'</td></tr>\n'
+	'</b></td></tr>\n'
 	for i in range(len(calls)):
 		'<tr>'
 		"<td>%s</td>" % names[i]
@@ -175,7 +175,7 @@
 	htmltext('</h3>')
 	
 	htmltext('<p>')
-	htmltext('<img alt="table" src="/graphs/%s">' % filename)
+	htmltext('<img alt="table" src="/graphs/%s" />' % filename)
 	htmltext('</p>')				
 
 def makeGraphic [plain] (names, values, title, labelx, labely, filename):
@@ -211,6 +211,6 @@
 	htmltext('</h3>')
 	
 	htmltext('<p>')
-	htmltext('<img alt="table" src="/graphs/%s">' % filename)
+	htmltext('<img alt="table" src="/graphs/%s" />' % filename)
 	htmltext('</p>')
 	

Modified: branches/quixote2/Templates.ptl
===================================================================
--- branches/quixote2/Templates.ptl	2007-01-16 22:36:27 UTC (rev 564)
+++ branches/quixote2/Templates.ptl	2007-01-16 22:38:15 UTC (rev 565)
@@ -26,7 +26,7 @@
 import os, sys, copy
 
 
-VERSION = _("QUIXOTE 2.X BRANCH")
+VERSION = 'DEVELOPMENT SNAPSHOT'
 
 
 class HtmlTable:
@@ -153,8 +153,8 @@
 def header [html] (title, menu=None, refresh=None, scripts=None):
 
 	# Boilerplate
+  	'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'
    	'<html xmlns="http://www.w3.org/1999/xhtml">\n'
-  	'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'
    	'<head>\n'
    	if refresh:
    		'<meta http-equiv="Refresh" content="%d;" />\n' % refresh



From santiago at mail.berlios.de  Tue Jan 16 23:40:15 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Tue, 16 Jan 2007 23:40:15 +0100
Subject: [Destar-dev] r566 - branches/quixote2/po
Message-ID: <200701162240.l0GMeFwf000187@sheep.berlios.de>

Author: santiago
Date: 2007-01-16 23:40:11 +0100 (Tue, 16 Jan 2007)
New Revision: 566

Modified:
   branches/quixote2/po/fr.po
Log:
merging po/



Modified: branches/quixote2/po/fr.po
===================================================================
--- branches/quixote2/po/fr.po	2007-01-16 22:38:15 UTC (rev 565)
+++ branches/quixote2/po/fr.po	2007-01-16 22:40:11 UTC (rev 566)
@@ -8,8 +8,8 @@
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2006-09-09 16:16-0500\n"
-"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
+"POT-Creation-Date: 2006-11-11 14:32+0100\n"
+"PO-Revision-Date: 2006-11-11 15:38+0100\n"
 "Last-Translator: FULL NAME <EMAIL at ADDRESS>\n"
 "Language-Team: LANGUAGE <LL at li.org>\n"
 "MIME-Version: 1.0\n"
@@ -43,7 +43,8 @@
 #: ../configlets.py:1055 ../configlets.py:1076 ../configlets.py:825
 #: ../configlets.py:900 ../configlets.py:1056 ../configlets.py:1077
 #: ../configlets.py:841 ../configlets.py:916 ../configlets.py:1072
-#: ../configlets.py:1093
+#: ../configlets.py:1093 ../configlets.py:570 ../configlets.py:842
+#: ../configlets.py:940 ../configlets.py:1096 ../configlets.py:1117
 msgid "Type"
 msgstr "Type"
 
@@ -82,7 +83,8 @@
 #: ../configlets.py:1076 ../page_stats_phone.ptl:65 ../page_user_state.ptl:66
 #: ../page_user_state.ptl:81 ../configlets.py:900 ../configlets.py:1056
 #: ../configlets.py:1077 ../cfg_phone_sip.py:59 ../configlets.py:916
-#: ../configlets.py:1072 ../configlets.py:1093
+#: ../configlets.py:1072 ../configlets.py:1093 ../configlets.py:570
+#: ../configlets.py:940 ../configlets.py:1096 ../configlets.py:1117
 msgid "Extension"
 msgstr "Extension"
 
@@ -159,11 +161,16 @@
 #: ../cfg_phone_sip.py:96 ../cfg_phone_zap.py:83 ../cfg_trunk_iax.py:49
 #: ../cfg_trunk_sip.py:44 ../cfg_trunk_zappbx.py:39 ../cfg_trunk_zappri.py:49
 #: ../cfg_trunk_zap.py:38 ../page_admin_panel.ptl:27 ../cfg_phone_sip.py:97
+#: ../cfg_phone_queue.py:157 ../cfg_trunk_iax.py:83 ../cfg_trunk_sip.py:68
+#: ../cfg_trunk_zappbx.py:53 ../cfg_trunk_zappri.py:67 ../cfg_trunk_zap.py:52
+#: ../page_admin_panel.ptl:26
 msgid "Operator Panel"
 msgstr "Panneau de l'op?rateur"
 
 #: ../cfg_app_meetme.py:36 ../cfg_trunk_iax.py:50 ../cfg_trunk_sip.py:45
 #: ../cfg_trunk_zappbx.py:40 ../cfg_trunk_zappri.py:50 ../cfg_trunk_zap.py:39
+#: ../cfg_trunk_iax.py:88 ../cfg_trunk_sip.py:73 ../cfg_trunk_zappbx.py:58
+#: ../cfg_trunk_zappri.py:72 ../cfg_trunk_zap.py:57
 msgid "Show this trunk in the panel"
 msgstr "Affiche ce canal dans le panneau"
 
@@ -196,6 +203,7 @@
 msgstr "Joue la musique d'attente jusqu'au raccrochage"
 
 #: ../cfg_app_music.py:33 ../cfg_ivr_autoatt.py:46 ../cfg_phone_queue.py:53
+#: ../cfg_ivr_autoatt.py:61
 msgid "Music-on-hold class"
 msgstr "Classe de musique d'attente"
 
@@ -262,6 +270,7 @@
 #: ../cfg_app_quickdial_global.py:33 ../cfg_opt_user.py:32
 #: ../cfg_phone_epygi.py:45 ../cfg_phone_iax.py:42 ../cfg_phone_mgcp.py:42
 #: ../cfg_phone_sip.py:43 ../cfg_trunk_iax.py:43 ../cfg_phone_sip.py:44
+#: ../cfg_phone_sip.py:45 ../cfg_trunk_iax.py:60
 msgid "Password"
 msgstr "Mot de passe"
 
@@ -357,6 +366,7 @@
 msgstr "Dire l'heure"
 
 #: ../cfg_app_saytime.py:33 ../page_stats_calls.ptl:105
+#: ../page_stats_calls.ptl:109
 msgid "Time"
 msgstr "Heure"
 
@@ -410,7 +420,11 @@
 #: ../configlets.py:738 ../configlets.py:825 ../configlets.py:900
 #: ../configlets.py:1077 ../configlets.py:1097 ../cfg_phone_sip.py:40
 #: ../configlets.py:754 ../configlets.py:841 ../configlets.py:916
-#: ../configlets.py:1093 ../configlets.py:1113
+#: ../configlets.py:1093 ../configlets.py:1113 ../cfg_opt_oppanel.py:35
+#: ../cfg_phone_sip.py:41 ../cfg_trunk_iax.py:35 ../cfg_trunk_zappbx.py:34
+#: ../cfg_trunk_zappri.py:35 ../cfg_trunk_zap.py:33 ../configlets.py:755
+#: ../configlets.py:842 ../configlets.py:940 ../configlets.py:1117
+#: ../configlets.py:1137
 msgid "Name"
 msgstr "Nom"
 
@@ -457,7 +471,18 @@
 #: ../cfg_phone_mgcp.py:159 ../cfg_phone_queue.py:137
 #: ../cfg_phone_queue.py:140 ../cfg_phone_sip.py:231 ../cfg_phone_sip.py:238
 #: ../cfg_phone_zap.py:150 ../cfg_phone_zap.py:157 ../configlets.py:417
-#: ../cfg_phone_sip.py:232 ../cfg_phone_sip.py:239
+#: ../cfg_phone_sip.py:232 ../cfg_phone_sip.py:239 ../cfg_ivr_autoatt.py:114
+#: ../cfg_ivr_autoatt.py:117 ../cfg_ivr_autoatt.py:120
+#: ../cfg_ivr_autoatt.py:123 ../cfg_phone_epygi.py:231
+#: ../cfg_phone_epygi.py:238 ../cfg_phone_iax.py:209 ../cfg_phone_iax.py:216
+#: ../cfg_phone_mgcp.py:215 ../cfg_phone_mgcp.py:222 ../cfg_phone_queue.py:170
+#: ../cfg_phone_queue.py:173 ../cfg_phone_sip.py:233 ../cfg_phone_sip.py:240
+#: ../cfg_phone_zap.py:213 ../cfg_phone_zap.py:220 ../cfg_trunk_capimsn.py:42
+#: ../cfg_trunk_fwdiax.py:57 ../cfg_trunk_iax.py:133 ../cfg_trunk_iax.py:136
+#: ../cfg_trunk_iaxtel.py:56 ../cfg_trunk_sip.py:117 ../cfg_trunk_sip.py:120
+#: ../cfg_trunk_zappbx.py:125 ../cfg_trunk_zappbx.py:128
+#: ../cfg_trunk_zappri.py:132 ../cfg_trunk_zappri.py:135
+#: ../cfg_trunk_zap.py:112 ../cfg_trunk_zap.py:115 ../configlets.py:418
 msgid "This is a Dependency"
 msgstr "Ceci est une d?pendance"
 
@@ -473,39 +498,39 @@
 msgid "Basic auto-attendant."
 msgstr "R?pondeur automatique de base"
 
-#: ../cfg_ivr_autoatt.py:39
+#: ../cfg_ivr_autoatt.py:39 ../cfg_ivr_autoatt.py:53
 msgid "Max. time for incoming calls in seconds"
 msgstr "Temps maximum pour les appels entrants en secondes"
 
-#: ../cfg_ivr_autoatt.py:40
+#: ../cfg_ivr_autoatt.py:40 ../cfg_ivr_autoatt.py:54
 msgid "(0 or empty means no time restriction)"
 msgstr "(0 ou vide signifie pas de restriction de temps)"
 
-#: ../cfg_ivr_autoatt.py:52
+#: ../cfg_ivr_autoatt.py:52 ../cfg_ivr_autoatt.py:67
 msgid "File to play in the background"
 msgstr "Fichier ? jouer en fond"
 
-#: ../cfg_ivr_autoatt.py:56
+#: ../cfg_ivr_autoatt.py:56 ../cfg_ivr_autoatt.py:71
 msgid "How many times should it be played?"
 msgstr "Combien de fois devrait-it ?tre jou? ?"
 
-#: ../cfg_ivr_autoatt.py:62
+#: ../cfg_ivr_autoatt.py:62 ../cfg_ivr_autoatt.py:77
 msgid "Pause between each playback"
 msgstr "Pause entre chaque jeu"
 
-#: ../cfg_ivr_autoatt.py:66
+#: ../cfg_ivr_autoatt.py:66 ../cfg_ivr_autoatt.py:81
 msgid "Extension to ring after file playing"
 msgstr "Extension ? appeler apr?s le jeu"
 
-#: ../cfg_ivr_autoatt.py:71
+#: ../cfg_ivr_autoatt.py:71 ../cfg_ivr_autoatt.py:86
 msgid "Digit to jump that extension directly"
 msgstr "Chiffre pour sauter directement ? cette extension"
 
-#: ../cfg_ivr_autoatt.py:76
+#: ../cfg_ivr_autoatt.py:76 ../cfg_ivr_autoatt.py:91
 msgid "IVR to jump on special dates"
 msgstr "IVR ? activer ? des dates sp?cifiques"
 
-#: ../cfg_ivr_autoatt.py:83
+#: ../cfg_ivr_autoatt.py:83 ../cfg_ivr_autoatt.py:98
 msgid "Times string"
 msgstr "Sp?cification de temps"
 
@@ -518,11 +543,11 @@
 msgid "Allow calling to all extensions?"
 msgstr "Autorise l'appel de toute les extentions"
 
-#: ../cfg_ivr_autoatt.py:122
+#: ../cfg_ivr_autoatt.py:122 ../cfg_ivr_autoatt.py:137
 msgid "File should be played at least one time"
 msgstr "Les fichier devraient ?tre jou?s au moins une fois"
 
-#: ../cfg_ivr_autoatt.py:124
+#: ../cfg_ivr_autoatt.py:124 ../cfg_ivr_autoatt.py:139
 msgid "Please specify dates"
 msgstr "Svp sp?cifiez des dates"
 
@@ -564,16 +589,22 @@
 
 #: ../cfg_opt_did.py:45 ../cfg_trunk_iax.py:53 ../cfg_trunk_sip.py:48
 #: ../cfg_trunk_zappbx.py:49 ../cfg_trunk_zappri.py:57 ../cfg_trunk_zap.py:46
+#: ../cfg_trunk_iax.py:103 ../cfg_trunk_sip.py:87 ../cfg_trunk_zappbx.py:95
+#: ../cfg_trunk_zappri.py:103 ../cfg_trunk_zap.py:88
 msgid "Go to"
 msgstr "Aller ?"
 
 #: ../cfg_opt_did.py:48 ../cfg_trunk_iax.py:54 ../cfg_trunk_sip.py:49
 #: ../cfg_trunk_zappbx.py:50 ../cfg_trunk_zappri.py:58 ../cfg_trunk_zap.py:47
+#: ../cfg_trunk_iax.py:106 ../cfg_trunk_sip.py:90 ../cfg_trunk_zappbx.py:98
+#: ../cfg_trunk_zappri.py:106 ../cfg_trunk_zap.py:91
 msgid "Phone"
 msgstr "T?l?phone"
 
 #: ../cfg_opt_did.py:48 ../cfg_trunk_iax.py:54 ../cfg_trunk_sip.py:49
 #: ../cfg_trunk_zappbx.py:50 ../cfg_trunk_zappri.py:58 ../cfg_trunk_zap.py:47
+#: ../cfg_trunk_iax.py:106 ../cfg_trunk_sip.py:90 ../cfg_trunk_zappbx.py:98
+#: ../cfg_trunk_zappri.py:106 ../cfg_trunk_zap.py:91
 msgid "IVR"
 msgstr "IVR"
 
@@ -584,11 +615,15 @@
 
 #: ../cfg_opt_did.py:57 ../cfg_trunk_iax.py:57 ../cfg_trunk_sip.py:52
 #: ../cfg_trunk_zappbx.py:53 ../cfg_trunk_zappri.py:61 ../cfg_trunk_zap.py:50
+#: ../cfg_trunk_iax.py:115 ../cfg_trunk_sip.py:99 ../cfg_trunk_zappbx.py:107
+#: ../cfg_trunk_zappri.py:115 ../cfg_trunk_zap.py:100
 msgid "IVR to jump to"
 msgstr "Faire aller l'IVR ?"
 
 #: ../cfg_opt_did.py:63 ../cfg_trunk_iax.py:59 ../cfg_trunk_sip.py:54
 #: ../cfg_trunk_zappbx.py:55 ../cfg_trunk_zappri.py:63 ../cfg_trunk_zap.py:52
+#: ../cfg_trunk_iax.py:98 ../cfg_trunk_sip.py:82 ../cfg_trunk_zappbx.py:90
+#: ../cfg_trunk_zappri.py:98 ../cfg_trunk_zap.py:83
 msgid "Change Caller*Id to:"
 msgstr "Changer le Caller*Id en :"
 
@@ -704,19 +739,19 @@
 msgid "Configure Asternic Flash Operator Panel"
 msgstr "Configurer le Asternic Flash Operator Panel"
 
-#: ../cfg_opt_oppanel.py:35
+#: ../cfg_opt_oppanel.py:35 ../cfg_opt_oppanel.py:40
 msgid "FQDN/IP to access the panel via web"
 msgstr "FQDN/IP pour acc?der au panneau via le web"
 
-#: ../cfg_opt_oppanel.py:36
+#: ../cfg_opt_oppanel.py:36 ../cfg_opt_oppanel.py:45
 msgid "Security Code"
 msgstr "Code de s?curit?"
 
-#: ../cfg_opt_oppanel.py:37
+#: ../cfg_opt_oppanel.py:37 ../cfg_opt_oppanel.py:63
 msgid "Manager agent"
 msgstr "Agent de gestion"
 
-#: ../cfg_opt_oppanel.py:39
+#: ../cfg_opt_oppanel.py:39 ../cfg_opt_oppanel.py:68
 msgid "Frequency in seconds to poll for sip and iax status"
 msgstr "Fr?quence en seconde de verification de status de sip et de iax"
 
@@ -1255,11 +1290,11 @@
 msgid "HDB3 (E1)"
 msgstr "HDB3 (E1)"
 
-#: ../cfg_opt_zappri.py:51 ../cfg_trunk_zappri.py:46
+#: ../cfg_opt_zappri.py:51 ../cfg_trunk_zappri.py:46 ../cfg_trunk_zappri.py:56
 msgid "Channels"
 msgstr "Cannaux"
 
-#: ../cfg_opt_zappri.py:51 ../cfg_trunk_zappri.py:46
+#: ../cfg_opt_zappri.py:51 ../cfg_trunk_zappri.py:46 ../cfg_trunk_zappri.py:57
 msgid "i.e. 1-15,17-31"
 msgstr "par exemple, 1-15,17-31"
 
@@ -1380,11 +1415,15 @@
 
 #: ../cfg_phone_epygi.py:144 ../cfg_phone_iax.py:122 ../cfg_phone_mgcp.py:128
 #: ../cfg_phone_sip.py:206 ../cfg_phone_zap.py:126 ../cfg_phone_sip.py:207
+#: ../cfg_phone_epygi.py:207 ../cfg_phone_iax.py:185 ../cfg_phone_mgcp.py:191
+#: ../cfg_phone_sip.py:208 ../cfg_phone_zap.py:189
 msgid "Allowed dialout-entries"
 msgstr "Autorise les entr?es d'appel vers l'ext?rieur"
 
 #: ../cfg_phone_epygi.py:149 ../cfg_phone_iax.py:127 ../cfg_phone_mgcp.py:133
 #: ../cfg_phone_sip.py:211 ../cfg_phone_zap.py:131 ../cfg_phone_sip.py:212
+#: ../cfg_phone_epygi.py:212 ../cfg_phone_iax.py:190 ../cfg_phone_mgcp.py:196
+#: ../cfg_phone_sip.py:213 ../cfg_phone_zap.py:194
 msgid "Enable time restriction?"
 msgstr "Active les restrictions de temps ?"
 
@@ -1482,104 +1521,115 @@
 msgid "Timeout"
 msgstr "Timeout"
 
-#: ../cfg_phone_queue.py:59
+#: ../cfg_phone_queue.py:59 ../cfg_phone_queue.py:63
 msgid "Strategy:"
 msgstr "Strategie"
 
-#: ../cfg_phone_queue.py:61
+#: ../cfg_phone_queue.py:61 ../cfg_phone_queue.py:65
 msgid "Ring all - ring all available channels until one answers"
 msgstr "Appelle tous - appelle tous les canaux disponibles jusqu'? une r?ponse"
 
-#: ../cfg_phone_queue.py:62
+#: ../cfg_phone_queue.py:62 ../cfg_phone_queue.py:66
 msgid "Round robin - take turns ringing each available interface"
 msgstr "Caroussel - fait sonner chaque interface disponible ? son tour"
 
-#: ../cfg_phone_queue.py:63
+#: ../cfg_phone_queue.py:63 ../cfg_phone_queue.py:67
 msgid ""
 "Least recent - ring interface which was least recently called by this queue"
 msgstr ""
 "Le moins r?cent - fait sonner l'interface qui a ?t? le moins r?cement "
 "appel?e dans cette file"
 
-#: ../cfg_phone_queue.py:64
+#: ../cfg_phone_queue.py:64 ../cfg_phone_queue.py:68
 msgid "Fewest calls - ring the one with fewest completed calls from this queue"
 msgstr ""
 "Le moins d'appels - fait sonner celle avec le moins d'appel compl?t?s sur "
 "cette file"
 
-#: ../cfg_phone_queue.py:65
+#: ../cfg_phone_queue.py:65 ../cfg_phone_queue.py:69
 msgid "Random - ring random interface"
 msgstr "Au hasard - fait sonner une interface au hasard"
 
-#: ../cfg_phone_queue.py:66
+#: ../cfg_phone_queue.py:66 ../cfg_phone_queue.py:70
 msgid "Round robin with memory - remember where we left off last ring pass"
 msgstr ""
 "Caroussel avec m?moire - se souvient qui a laiss? passer lors du dernier "
 "passage"
 
-#: ../cfg_phone_queue.py:70
+#: ../cfg_phone_queue.py:70 ../cfg_phone_queue.py:74
 msgid "How long to wait before trying all the members again?"
 msgstr ""
 "Combien de temps faut-il attendre avant de r?essayer tous les membre de "
 "nouveau ?"
 
-#: ../cfg_phone_queue.py:75
+#: ../cfg_phone_queue.py:75 ../cfg_phone_queue.py:79
 msgid "Announces"
 msgstr "Annonces"
 
-#: ../cfg_phone_queue.py:80
+#: ../cfg_phone_queue.py:80 ../cfg_phone_queue.py:84
 msgid "Announce queue position to caller?"
 msgstr "Annonce la position dans la file ? l'appelant ?"
 
-#: ../cfg_phone_queue.py:84
+#: ../cfg_phone_queue.py:84 ../cfg_phone_queue.py:88
 msgid ""
 "How often to announce queue position and/or estimated holdtime to caller"
 msgstr ""
 "Combien de fois annoncer la position dans la liste et/ou le temps d'attente "
 "estim? ? l'appelant"
 
-#: ../cfg_phone_queue.py:89
+#: ../cfg_phone_queue.py:89 ../cfg_phone_queue.py:93
 msgid "Include estimated hold time in position announcements?"
 msgstr "Inclure le temps estim? d'attente dans les annonces de position"
 
-#: ../cfg_phone_queue.py:91
+#: ../cfg_phone_queue.py:91 ../cfg_phone_queue.py:95
 msgid "Yes"
 msgstr "Oui"
 
-#: ../cfg_phone_queue.py:92
+#: ../cfg_phone_queue.py:92 ../cfg_phone_queue.py:96
 msgid "No"
 msgstr "Non"
 
-#: ../cfg_phone_queue.py:93
+#: ../cfg_phone_queue.py:93 ../cfg_phone_queue.py:97
 msgid "Only Once"
 msgstr "Seulement une fois"
 
 #: ../cfg_phone_queue.py:97 ../cfg_phone_sip.py:144 ../cfg_phone_sip.py:145
+#: ../cfg_phone_epygi.py:144 ../cfg_phone_iax.py:122 ../cfg_phone_mgcp.py:128
+#: ../cfg_phone_queue.py:101 ../cfg_phone_zap.py:126
 msgid "Monitoring"
 msgstr "Surveillance"
 
-#: ../cfg_phone_queue.py:102
+#: ../cfg_phone_queue.py:102 ../cfg_phone_queue.py:106
 msgid "Monitor answered calls?"
 msgstr "Surveillance des appels r?pondus ?"
 
 #: ../cfg_phone_queue.py:106 ../cfg_phone_sip.py:160 ../cfg_phone_sip.py:161
+#: ../cfg_phone_epygi.py:160 ../cfg_phone_iax.py:138 ../cfg_phone_mgcp.py:144
+#: ../cfg_phone_queue.py:116 ../cfg_phone_zap.py:142
 msgid "Monitor file format"
 msgstr "Format de fichier de la surveillance"
 
 #: ../cfg_opt_codec.py:40 ../cfg_phone_queue.py:108 ../cfg_phone_sip.py:162
-#: ../cfg_phone_sip.py:163
+#: ../cfg_phone_sip.py:163 ../cfg_phone_epygi.py:162 ../cfg_phone_iax.py:140
+#: ../cfg_phone_mgcp.py:146 ../cfg_phone_queue.py:118 ../cfg_phone_zap.py:144
 msgid "GSM"
 msgstr "GSM"
 
 #: ../cfg_phone_queue.py:109 ../cfg_phone_sip.py:163 ../cfg_phone_sip.py:164
+#: ../cfg_phone_epygi.py:163 ../cfg_phone_iax.py:141 ../cfg_phone_mgcp.py:147
+#: ../cfg_phone_queue.py:119 ../cfg_phone_zap.py:145
 msgid "WAV"
 msgstr "WAV"
 
 #: ../cfg_phone_queue.py:110 ../cfg_phone_sip.py:164 ../cfg_phone_sip.py:165
+#: ../cfg_phone_epygi.py:164 ../cfg_phone_iax.py:142 ../cfg_phone_mgcp.py:148
+#: ../cfg_phone_queue.py:120 ../cfg_phone_zap.py:146
 msgid "WAV49"
 msgstr "WAV49"
 
 #: ../cfg_phone_queue.py:114 ../cfg_phone_sip.py:154 ../cfg_phone_sip.py:155
+#: ../cfg_phone_epygi.py:154 ../cfg_phone_iax.py:132 ../cfg_phone_mgcp.py:138
+#: ../cfg_phone_queue.py:110 ../cfg_phone_zap.py:136
 msgid "Monitor file name"
 msgstr "Nom de fichier de la surveillance"
 
@@ -1591,19 +1641,19 @@
 msgid "Split file on inbound and outbound channels?"
 msgstr "Coupe le fichier sur les canaux entrants et sortants ?"
 
-#: ../cfg_phone_queue.py:129
+#: ../cfg_phone_queue.py:129 ../cfg_phone_queue.py:162
 msgid "Show this queue in the panel"
 msgstr "Affiche cette file dans le panneau"
 
-#: ../cfg_phone_queue.py:149
+#: ../cfg_phone_queue.py:149 ../cfg_phone_queue.py:182
 msgid "You should select a frequency"
 msgstr "Vous devriez s?lectionner une fr?quence"
 
-#: ../cfg_phone_sip.py:27
+#: ../cfg_phone_sip.py:27 ../cfg_phone_sip.py:28
 msgid "Normal SIP phone"
 msgstr "T?l?phone SIP normal"
 
-#: ../cfg_phone_sip.py:28
+#: ../cfg_phone_sip.py:28 ../cfg_phone_sip.py:29
 msgid "New SIP phone"
 msgstr "Nouveau t?l?phone SIP normal"
 
@@ -1620,11 +1670,13 @@
 msgstr "Nouveau t?l?phone ZAP"
 
 #: ../cfg_phone_zap.py:43 ../cfg_trunk_zappbx.py:34 ../cfg_trunk_zap.py:33
+#: ../cfg_trunk_zappbx.py:38 ../cfg_trunk_zap.py:37
 msgid "Zaptel channel number"
 msgstr "Num?ro du canal Zaptel"
 
 #: ../cfg_phone_zap.py:48 ../cfg_trunk_zappbx.py:35 ../cfg_trunk_zappri.py:35
-#: ../cfg_trunk_zap.py:34
+#: ../cfg_trunk_zap.py:34 ../cfg_trunk_zappbx.py:43 ../cfg_trunk_zappri.py:39
+#: ../cfg_trunk_zap.py:42
 msgid "Signalling type"
 msgstr "Type de signalisation"
 
@@ -1654,6 +1706,7 @@
 msgstr "Num?ro du souscripteur"
 
 #: ../cfg_trunk_capimsn.py:68 ../cfg_trunk_capimsn.py:67
+#: ../cfg_trunk_capimsn.py:73
 msgid "MSN already assigned"
 msgstr "MSN d?ja assign?"
 
@@ -1736,68 +1789,71 @@
 "Utilis? pour configurer un canal IAX vers un autre serveur Asterisk ou un "
 "point d'acc?s IAX."
 
-#: ../cfg_trunk_iax.py:35
+#: ../cfg_trunk_iax.py:35 ../cfg_trunk_iax.py:40
 msgid "IAX host"
 msgstr "H?te IAX"
 
-#: ../cfg_trunk_iax.py:36
+#: ../cfg_trunk_iax.py:36 ../cfg_trunk_iax.py:44
 msgid "Bandwith"
 msgstr "Bande passante"
 
-#: ../cfg_trunk_iax.py:37
+#: ../cfg_trunk_iax.py:37 ../cfg_trunk_iax.py:47
 msgid "Low"
 msgstr "Basse"
 
-#: ../cfg_trunk_iax.py:37
+#: ../cfg_trunk_iax.py:37 ../cfg_trunk_iax.py:47
 msgid "High"
 msgstr "Haute"
 
-#: ../cfg_trunk_iax.py:40
+#: ../cfg_trunk_iax.py:40 ../cfg_trunk_iax.py:50
 msgid "Authentication"
 msgstr "Authentification"
 
-#: ../cfg_trunk_iax.py:41
+#: ../cfg_trunk_iax.py:41 ../cfg_trunk_iax.py:54
 msgid "Authentication Method"
 msgstr "M?thode d'Authentification"
 
-#: ../cfg_trunk_iax.py:42
+#: ../cfg_trunk_iax.py:42 ../cfg_trunk_iax.py:57
 msgid "Plain text"
 msgstr "Textuelle"
 
-#: ../cfg_trunk_iax.py:42
+#: ../cfg_trunk_iax.py:42 ../cfg_trunk_iax.py:57
 msgid "RSA"
 msgstr "RSA"
 
-#: ../cfg_trunk_iax.py:42
+#: ../cfg_trunk_iax.py:42 ../cfg_trunk_iax.py:57
 msgid "MD5"
 msgstr "MD5"
 
-#: ../cfg_trunk_iax.py:43
+#: ../cfg_trunk_iax.py:43 ../cfg_trunk_iax.py:61
 msgid "For 'Plain' or 'MD5' only"
 msgstr "Seulement pour 'Textuelle' ou 'MD5'"
 
-#: ../cfg_trunk_iax.py:44
+#: ../cfg_trunk_iax.py:44 ../cfg_trunk_iax.py:66
 msgid "Public key from remote server"
 msgstr "Cl? publique du serveur distant"
 
-#: ../cfg_trunk_iax.py:44 ../cfg_trunk_iax.py:45
+#: ../cfg_trunk_iax.py:44 ../cfg_trunk_iax.py:45 ../cfg_trunk_iax.py:67
+#: ../cfg_trunk_iax.py:73
 msgid "For 'RSA' only"
 msgstr "Seulement pour 'RSA'"
 
-#: ../cfg_trunk_iax.py:45
+#: ../cfg_trunk_iax.py:45 ../cfg_trunk_iax.py:72
 msgid "Private local key"
 msgstr "Cl? priv?e locale"
 
-#: ../cfg_trunk_iax.py:47
+#: ../cfg_trunk_iax.py:47 ../cfg_trunk_iax.py:78
 msgid "Enable trunking?"
 msgstr "Active le trunking"
 
-#: ../cfg_trunk_iax.py:52
+#: ../cfg_trunk_iax.py:52 ../cfg_trunk_iax.py:94
 msgid "Calls from IAX trunk"
 msgstr "Appels venant d'un canal IAX"
 
 #: ../cfg_trunk_iax.py:55 ../cfg_trunk_sip.py:50 ../cfg_trunk_zappbx.py:51
-#: ../cfg_trunk_zappri.py:59 ../cfg_trunk_zap.py:48
+#: ../cfg_trunk_zappri.py:59 ../cfg_trunk_zap.py:48 ../cfg_trunk_iax.py:109
+#: ../cfg_trunk_sip.py:93 ../cfg_trunk_zappbx.py:101
+#: ../cfg_trunk_zappri.py:109 ../cfg_trunk_zap.py:94
 msgid "Extension to ring"
 msgstr "Extension ? faire sonner"
 
@@ -1843,41 +1899,42 @@
 msgid "New standard SIP trunk"
 msgstr "Nouveau canal SIP standard"
 
-#: ../cfg_trunk_sip.py:30
+#: ../cfg_trunk_sip.py:30 ../cfg_trunk_sip.py:29
 msgid "Used to setup a SIP trunk to a SIP provider or a different SIP server."
 msgstr ""
 "Utilis? pour configurer un canal SIP vers un fournisseur SIP ou un serveur "
 "sip diff?rent."
 
-#: ../cfg_trunk_sip.py:36
+#: ../cfg_trunk_sip.py:36 ../cfg_trunk_sip.py:40
 msgid "SIP username"
 msgstr "Nom d'utilisateur SIP"
 
-#: ../cfg_trunk_sip.py:37
+#: ../cfg_trunk_sip.py:37 ../cfg_trunk_sip.py:44
 msgid "SIP password"
 msgstr "Mot de passe SIP"
 
-#: ../cfg_trunk_sip.py:38
+#: ../cfg_trunk_sip.py:38 ../cfg_trunk_sip.py:48
 msgid "SIP host"
 msgstr "H?te SIP"
 
-#: ../cfg_trunk_sip.py:39
+#: ../cfg_trunk_sip.py:39 ../cfg_trunk_sip.py:52
 msgid "Register with remote host?"
 msgstr "S'enregistrer (se faire conna?tre) de l'h?te distant ?"
 
-#: ../cfg_trunk_sip.py:40
+#: ../cfg_trunk_sip.py:40 ../cfg_trunk_sip.py:56
 msgid "Enable forward address type?"
 msgstr "Active les adresses de type 'faire suivre' ?"
 
-#: ../cfg_trunk_sip.py:41
+#: ../cfg_trunk_sip.py:41 ../cfg_trunk_sip.py:60
 msgid "Is the trunk behind NAT?"
 msgstr "Le canal est-il derri?re un NAT ?"
 
-#: ../cfg_trunk_sip.py:42
+#: ../cfg_trunk_sip.py:42 ../cfg_trunk_sip.py:64
 msgid "Bypass auth for incoming calls?"
 msgstr "Evite l'authentification pour les appels entrants ?"
 
-#: ../cfg_trunk_sip.py:47 ../cfg_trunk_zappbx.py:48
+#: ../cfg_trunk_sip.py:47 ../cfg_trunk_zappbx.py:48 ../cfg_trunk_sip.py:78
+#: ../cfg_trunk_zappbx.py:86
 msgid "Calls from SIP trunk"
 msgstr "Appels venant du canal SIP"
 
@@ -1906,32 +1963,38 @@
 msgstr "Nouveau canal PBX ZAP"
 
 #: ../cfg_trunk_zappbx.py:37 ../cfg_trunk_zappri.py:47 ../cfg_trunk_zap.py:36
+#: ../cfg_trunk_zappbx.py:48 ../cfg_trunk_zappri.py:62 ../cfg_trunk_zap.py:47
 msgid "Callout group"
 msgstr "Groupe d'appel vers l'ext?rieur"
 
 #: ../cfg_trunk_zappbx.py:42 ../cfg_trunk_zappri.py:52 ../cfg_trunk_zap.py:41
+#: ../cfg_trunk_zappbx.py:64 ../cfg_trunk_zappri.py:78 ../cfg_trunk_zap.py:63
 msgid "Reception and Transmission Gains"
 msgstr "Gains de r?ception et de transmission"
 
 #: ../cfg_trunk_zappbx.py:43 ../cfg_trunk_zappri.py:53 ../cfg_trunk_zap.py:42
+#: ../cfg_trunk_zappbx.py:68 ../cfg_trunk_zappri.py:82 ../cfg_trunk_zap.py:67
 msgid "Reception gain"
 msgstr "Gain de r?ception"
 
 #: ../cfg_trunk_zappbx.py:43 ../cfg_trunk_zappbx.py:44
 #: ../cfg_trunk_zappri.py:53 ../cfg_trunk_zappri.py:54 ../cfg_trunk_zap.py:42
-#: ../cfg_trunk_zap.py:43
+#: ../cfg_trunk_zap.py:43 ../cfg_trunk_zappbx.py:69 ../cfg_trunk_zappbx.py:75
+#: ../cfg_trunk_zappri.py:83 ../cfg_trunk_zappri.py:89 ../cfg_trunk_zap.py:68
+#: ../cfg_trunk_zap.py:74
 msgid "in dB"
 msgstr "en dB"
 
 #: ../cfg_trunk_zappbx.py:44 ../cfg_trunk_zappri.py:54 ../cfg_trunk_zap.py:43
+#: ../cfg_trunk_zappbx.py:74 ../cfg_trunk_zappri.py:88 ../cfg_trunk_zap.py:73
 msgid "Transmission gain"
 msgstr "Gain de transmission"
 
-#: ../cfg_trunk_zappbx.py:46
+#: ../cfg_trunk_zappbx.py:46 ../cfg_trunk_zappbx.py:80
 msgid "Outbound prefix"
 msgstr "Pr?fixe de sortie"
 
-#: ../cfg_trunk_zappbx.py:46
+#: ../cfg_trunk_zappbx.py:46 ../cfg_trunk_zappbx.py:82
 msgid "Used to call through a PBX"
 msgstr "Utilis? pour appel? ? travers un PBX"
 
@@ -1943,23 +2006,23 @@
 msgid "New standard ZAP PRI trunk"
 msgstr "Nouveau canal ZAP PRI standard"
 
-#: ../cfg_trunk_zappri.py:36
+#: ../cfg_trunk_zappri.py:36 ../cfg_trunk_zappri.py:41
 msgid "PRI signalling, CPE side"
 msgstr "Signalisation PRI, cot? CPE"
 
-#: ../cfg_trunk_zappri.py:36
+#: ../cfg_trunk_zappri.py:36 ../cfg_trunk_zappri.py:42
 msgid "PRI signalling, Network side"
 msgstr "Signalisation PRI, cot? r?seau"
 
-#: ../cfg_trunk_zappri.py:37
+#: ../cfg_trunk_zappri.py:37 ../cfg_trunk_zappri.py:45
 msgid "Switch type"
 msgstr "Type de switch"
 
-#: ../cfg_trunk_zappri.py:56
+#: ../cfg_trunk_zappri.py:56 ../cfg_trunk_zappri.py:94
 msgid "Calls from PRI channel(s)"
 msgstr "Appels venant du/des canal/canaux PRI"
 
-#: ../cfg_trunk_zappri.py:90
+#: ../cfg_trunk_zappri.py:90 ../cfg_trunk_zappri.py:161
 msgid "Group already in use"
 msgstr "Groupe d?ja utlis?"
 
@@ -1971,7 +2034,7 @@
 msgid "New standard ZAP trunk"
 msgstr "Nouveau canal ZAP standard"
 
-#: ../cfg_trunk_zap.py:45
+#: ../cfg_trunk_zap.py:45 ../cfg_trunk_zap.py:79
 msgid "Calls from ZAP trunk"
 msgstr "Appels venant du canal ZAP"
 
@@ -1979,24 +2042,28 @@
 #: ../configlets.py:1061 ../configlets.py:1083 ../configlets.py:909
 #: ../configlets.py:1062 ../configlets.py:1084 ../configlets.py:924
 #: ../configlets.py:925 ../configlets.py:1078 ../configlets.py:1100
+#: ../configlets.py:579 ../configlets.py:948 ../configlets.py:949
+#: ../configlets.py:1102 ../configlets.py:1124
 msgid "None"
 msgstr "Aucun"
 
-#: ../configlets.py:613
+#: ../configlets.py:613 ../configlets.py:614
 msgid "Name should not contain '-' or spaces"
 msgstr "Le nom ne doit pas contenir de '-' ou d'espaces"
 
-#: ../configlets.py:618
+#: ../configlets.py:618 ../configlets.py:619
 msgid "Name already in use"
 msgstr "Le nom est d?ja utilis?"
 
 #: ../configlets.py:737 ../configlets.py:1096 ../configlets.py:738
 #: ../configlets.py:1097 ../configlets.py:754 ../configlets.py:1113
+#: ../configlets.py:755 ../configlets.py:1137
 msgid "Info"
 msgstr "Info"
 
 #: ../configlets.py:790 ../configlets.py:803 ../configlets.py:791
 #: ../configlets.py:804 ../configlets.py:807 ../configlets.py:820
+#: ../configlets.py:808 ../configlets.py:821
 #, python-format
 msgid "%s"
 msgstr "%s"
@@ -2005,14 +2072,17 @@
 msgstr "Co?t de ce pattern"
 
 #: ../configlets.py:804 ../configlets.py:805 ../configlets.py:821
+#: ../configlets.py:822
 msgid "Password:"
 msgstr "Mot de passe :"
 
 #: ../configlets.py:824 ../configlets.py:825 ../configlets.py:841
+#: ../configlets.py:842
 msgid "Dial Command"
 msgstr "Commande d'appel"
 
 #: ../configlets.py:852 ../configlets.py:853 ../configlets.py:869
+#: ../configlets.py:870
 msgid "You should select a phone to ring to"
 msgstr "S?lectionner un t?l?phone ? faire sonner"
 
@@ -2020,7 +2090,7 @@
 msgid "This menu will contain all sorts of administration stuff:"
 msgstr "Ce menu contient toutes sortes de composants d'administration"
 
-#: ../panelutils.py:74
+#: ../panelutils.py:74 ../panelutils.py:75
 msgid ""
 "0,No timeout|300,5 minutes|600,10 minutes|1200,20 minutes|2400,40 minutes|"
 "3000,50 minutes"
@@ -2028,19 +2098,19 @@
 "0,pas de minuterie|300,5 minutes|600,10 minutes|1200,20 minutes|2400,40 "
 "minutes|3000,50 minutes"
 
-#: ../panelutils.py:98
+#: ../panelutils.py:98 ../panelutils.py:136
 msgid "Meetme"
 msgstr "Meetme"
 
-#: ../panelutils.py:102
+#: ../panelutils.py:102 ../panelutils.py:140
 msgid "PARK"
 msgstr "PARK"
 
-#: ../panelutils.py:106
+#: ../panelutils.py:106 ../panelutils.py:144
 msgid "Park"
 msgstr "Park"
 
-#: ../panelutils.py:124
+#: ../panelutils.py:124 ../panelutils.py:162
 msgid "Restarting the panel daemon ..."
 msgstr "Red?marrage du d?mon du panneau..."
 
@@ -2115,6 +2185,7 @@
 #: ../ConfigHelper.ptl:324 ../page_login.ptl:44 ../page_stats_calls.ptl:73
 #: ../page_stats_dialouts.ptl:106 ../page_stats_phone.ptl:109
 #: ../page_stats_trunks.ptl:105 ../page_user_settings.ptl:69
+#: ../page_stats_calls.ptl:77
 msgid "Submit"
 msgstr "Soumettre"
 
@@ -2130,121 +2201,132 @@
 msgid "Calls Statistics"
 msgstr "Statistiques d'appels"
 
-#: ../page_stats_calls.ptl:55
+#: ../page_stats_calls.ptl:55 ../page_stats_calls.ptl:57
 msgid "Day:"
 msgstr "Jour :"
 
-#: ../page_stats_calls.ptl:106
+#: ../page_stats_calls.ptl:106 ../page_stats_calls.ptl:110
 msgid "Calls per Hour in a Day"
 msgstr "Appels par heure dans une journ?e"
 
 #: ../page_stats_calls.ptl:106 ../page_stats_calls.ptl:107
-#: ../page_stats_calls.ptl:108
+#: ../page_stats_calls.ptl:108 ../page_stats_calls.ptl:110
+#: ../page_stats_calls.ptl:111 ../page_stats_calls.ptl:112
 msgid "Hours"
 msgstr "Heures"
 
-#: ../page_stats_calls.ptl:107
+#: ../page_stats_calls.ptl:107 ../page_stats_calls.ptl:111
 msgid "Minutes per Hour in a Day"
 msgstr "Minuntes par heure dans une journ?e"
 
 #: ../page_stats_calls.ptl:107 ../page_stats_calls.ptl:141
 #: ../page_stats_calls.ptl:180 ../page_stats_calls.ptl:181
 #: ../page_stats_calls.ptl:211 ../StatsHelper.ptl:112
+#: ../page_stats_calls.ptl:111 ../page_stats_calls.ptl:145
+#: ../page_stats_calls.ptl:184 ../page_stats_calls.ptl:185
+#: ../page_stats_calls.ptl:215
 msgid "Minutes"
 msgstr "Minutes"
 
-#: ../page_stats_calls.ptl:108
+#: ../page_stats_calls.ptl:108 ../page_stats_calls.ptl:112
 msgid "Cost per Hour in a Day"
 msgstr "Co?t par heure dans une journ?e"
 
 #: ../page_stats_calls.ptl:108 ../page_stats_calls.ptl:142
 #: ../page_stats_calls.ptl:212 ../StatsHelper.ptl:113
+#: ../page_stats_calls.ptl:112 ../page_stats_calls.ptl:146
+#: ../page_stats_calls.ptl:216
 msgid "Cost"
 msgstr "Co?t"
 
-#: ../page_stats_calls.ptl:139
+#: ../page_stats_calls.ptl:139 ../page_stats_calls.ptl:143
 msgid "Day"
 msgstr "Jour"
 
-#: ../page_stats_calls.ptl:140
+#: ../page_stats_calls.ptl:140 ../page_stats_calls.ptl:144
 msgid "Calls per Day in a Month"
 msgstr "Appels par jour dans un mois"
 
 #: ../page_stats_calls.ptl:140 ../page_stats_calls.ptl:141
-#: ../page_stats_calls.ptl:142
+#: ../page_stats_calls.ptl:142 ../page_stats_calls.ptl:144
+#: ../page_stats_calls.ptl:145 ../page_stats_calls.ptl:146
 msgid "Days"
 msgstr "Jours"
 
-#: ../page_stats_calls.ptl:141
+#: ../page_stats_calls.ptl:141 ../page_stats_calls.ptl:145
 msgid "Minutes per Day in a Month"
 msgstr "Minutes par jour dans un mois"
 
-#: ../page_stats_calls.ptl:142
+#: ../page_stats_calls.ptl:142 ../page_stats_calls.ptl:146
 msgid "Cost per Day in a Month"
 msgstr "Co?t par jour dans un mois"
 
-#: ../page_stats_calls.ptl:177
+#: ../page_stats_calls.ptl:177 ../page_stats_calls.ptl:181
 msgid "Month"
 msgstr "Mois"
 
-#: ../page_stats_calls.ptl:179
+#: ../page_stats_calls.ptl:179 ../page_stats_calls.ptl:183
 msgid "Calls per Month in a Year"
 msgstr "Appels par mois dans une ann?e"
 
 #: ../page_stats_calls.ptl:179 ../page_stats_calls.ptl:180
-#: ../page_stats_calls.ptl:181
+#: ../page_stats_calls.ptl:181 ../page_stats_calls.ptl:183
+#: ../page_stats_calls.ptl:184 ../page_stats_calls.ptl:185
 msgid "Months"
 msgstr "Mois"
 
-#: ../page_stats_calls.ptl:180
+#: ../page_stats_calls.ptl:180 ../page_stats_calls.ptl:184
 msgid "Minutes per Month in a Year"
 msgstr "Minutes par mois dans une ann?e"
 
-#: ../page_stats_calls.ptl:181
+#: ../page_stats_calls.ptl:181 ../page_stats_calls.ptl:185
 msgid "Cost per Month in a Year"
 msgstr "Co?t par mois dans une ann?e"
 
-#: ../page_stats_calls.ptl:209
+#: ../page_stats_calls.ptl:209 ../page_stats_calls.ptl:213
 msgid "Year"
 msgstr "Ann?e"
 
-#: ../page_stats_calls.ptl:210
+#: ../page_stats_calls.ptl:210 ../page_stats_calls.ptl:214
 msgid "Calls per Year"
 msgstr "Appels par an"
 
 #: ../page_stats_calls.ptl:210 ../page_stats_calls.ptl:211
-#: ../page_stats_calls.ptl:212
+#: ../page_stats_calls.ptl:212 ../page_stats_calls.ptl:214
+#: ../page_stats_calls.ptl:215 ../page_stats_calls.ptl:216
 msgid "Years"
 msgstr "Ans"
 
-#: ../page_stats_calls.ptl:211
+#: ../page_stats_calls.ptl:211 ../page_stats_calls.ptl:215
 msgid "Minutes per Year"
 msgstr "Minutes par an"
 
-#: ../page_stats_calls.ptl:212
+#: ../page_stats_calls.ptl:212 ../page_stats_calls.ptl:216
 msgid "cost per Year"
 msgstr "co?t par an"
 
 #: ../page_owner_cdr.ptl:109 ../page_stats_calls.ptl:215
-#: ../page_stats_cdr.ptl:110 ../StatsHelper.ptl:95
+#: ../page_stats_cdr.ptl:110 ../StatsHelper.ptl:95 ../page_stats_cdr.ptl:112
 msgid "All"
 msgstr "Tout"
 
-#: ../page_stats_calls.ptl:226
+#: ../page_stats_calls.ptl:226 ../page_stats_calls.ptl:230
 msgid "Sorry, this kind of query is not supported yet"
 msgstr "D?sol?, ce type de requ?te n'est pas encore support?"
 
-#: ../page_stats_calls.ptl:230
+#: ../page_stats_calls.ptl:230 ../page_stats_calls.ptl:234
 msgid "Statistics of Calls by Date:"
 msgstr "Statistiques d'appels par date"
 
 #: ../page_stats_calls.ptl:235 ../page_stats_dialouts.ptl:176
 #: ../page_stats_phone.ptl:183 ../page_stats_trunks.ptl:190
+#: ../page_stats_calls.ptl:239
 msgid "Results"
 msgstr "R?sultat"
 
 #: ../page_stats_calls.ptl:243 ../page_stats_dialouts.ptl:184
 #: ../page_stats_phone.ptl:191 ../page_stats_trunks.ptl:198
+#: ../page_stats_calls.ptl:247
 msgid ""
 "You need to install pychart and use a cdr with sqlite to get these statistics"
 msgstr ""
@@ -2259,77 +2341,91 @@
 msgid "Get statistics about made and received calls"
 msgstr "Statistiques des appels effectu?s et re?us"
 
-#: ../page_owner_cdr.ptl:74 ../page_stats_cdr.ptl:75
+#: ../page_owner_cdr.ptl:74 ../page_stats_cdr.ptl:75 ../page_stats_cdr.ptl:77
 msgid "First"
 msgstr "Premier"
 
-#: ../page_owner_cdr.ptl:75 ../page_stats_cdr.ptl:76
+#: ../page_owner_cdr.ptl:75 ../page_stats_cdr.ptl:76 ../page_stats_cdr.ptl:78
 msgid "Previous"
 msgstr "Pr?c?dent"
 
-#: ../page_owner_cdr.ptl:86 ../page_stats_cdr.ptl:87
+#: ../page_owner_cdr.ptl:86 ../page_stats_cdr.ptl:87 ../page_stats_cdr.ptl:89
 msgid "Next"
 msgstr "Suivant"
 
-#: ../page_owner_cdr.ptl:87 ../page_stats_cdr.ptl:88
+#: ../page_owner_cdr.ptl:87 ../page_stats_cdr.ptl:88 ../page_stats_cdr.ptl:90
 msgid "Last"
 msgstr "Dernier"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:102
+#: ../page_stats_cdr.ptl:121
 msgid "January"
 msgstr "Janvier"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:102
+#: ../page_stats_cdr.ptl:121
 msgid "February"
 msgstr "F?vrier"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:102
+#: ../page_stats_cdr.ptl:121
 msgid "March"
 msgstr "Mars"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:103
+#: ../page_stats_cdr.ptl:121
 msgid "April"
 msgstr "Avril"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:103
+#: ../page_stats_cdr.ptl:121
 msgid "May"
 msgstr "Mai"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:103
+#: ../page_stats_cdr.ptl:121
 msgid "June"
 msgstr "Juin"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:103
+#: ../page_stats_cdr.ptl:121
 msgid "July"
 msgstr "Juillet"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:103
+#: ../page_stats_cdr.ptl:121
 msgid "August"
 msgstr "Ao?t"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:104
+#: ../page_stats_cdr.ptl:121
 msgid "September"
 msgstr "Septembre"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:104
+#: ../page_stats_cdr.ptl:121
 msgid "October"
 msgstr "Octobre"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:104
+#: ../page_stats_cdr.ptl:121
 msgid "November"
 msgstr "Novembre"
 
 #: ../page_owner_cdr.ptl:118 ../page_stats_cdr.ptl:119 ../StatsHelper.ptl:104
+#: ../page_stats_cdr.ptl:121
 msgid "December"
 msgstr "D?cembre"
 
 #: ../page_owner_cdr.ptl:140 ../page_stats_cdr.ptl:142
+#: ../page_stats_cdr.ptl:144
 msgid "Source "
 msgstr "Source"
 
 #: ../page_owner_cdr.ptl:140 ../page_owner_cdr.ptl:141
 #: ../page_stats_cdr.ptl:141 ../page_stats_cdr.ptl:142
-#: ../page_stats_cdr.ptl:143
+#: ../page_stats_cdr.ptl:143 ../page_stats_cdr.ptl:144
+#: ../page_stats_cdr.ptl:145
 #, python-format
 msgid ""
 "Wildcards: % is the 'zero or more characters' wildcard, and _ is the "
@@ -2340,54 +2436,63 @@
 
 #: ../page_owner_cdr.ptl:141 ../page_stats_cdr.ptl:143
 #: ../page_stats_phone.ptl:67 ../page_user_state.ptl:100
+#: ../page_stats_cdr.ptl:145
 msgid "Caller ID"
 msgstr "Identifiant de l'appelant"
 
 #: ../page_owner_cdr.ptl:142 ../page_stats_cdr.ptl:144
+#: ../page_stats_cdr.ptl:146
 msgid "Destination"
 msgstr "Destination"
 
 #: ../page_owner_cdr.ptl:142 ../page_stats_cdr.ptl:144
+#: ../page_stats_cdr.ptl:146
 msgid "You can use the same wildcards as above"
 msgstr "Vous pouvez utiliser les m?mes caract?res de matching que ci-dessus"
 
 #: ../page_owner_cdr.ptl:143 ../page_owner_cdr.ptl:283
 #: ../page_stats_cdr.ptl:145 ../page_stats_cdr.ptl:285
-#: ../page_stats_cdr.ptl:286
+#: ../page_stats_cdr.ptl:286 ../page_stats_cdr.ptl:147
 msgid "Duration"
 msgstr "Dur?e"
 
 #: ../page_owner_cdr.ptl:144 ../page_stats_cdr.ptl:146
+#: ../page_stats_cdr.ptl:148
 msgid "In seconds"
 msgstr "En secondes"
 
 #: ../page_owner_cdr.ptl:145 ../page_stats_cdr.ptl:147
+#: ../page_stats_cdr.ptl:149
 msgid "Number of records to show:"
 msgstr "Nombre d'enregistrements affich?s :"
 
 #: ../page_owner_cdr.ptl:146 ../page_stats_cdr.ptl:148
+#: ../page_stats_cdr.ptl:150
 msgid "Search between the following dates"
 msgstr "Recherche entre les dates suivantes"
 
 #: ../page_owner_cdr.ptl:147 ../page_stats_cdr.ptl:149
+#: ../page_stats_cdr.ptl:151
 msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Start:"
 msgstr "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D?but :"
 
 #: ../page_owner_cdr.ptl:150 ../page_stats_cdr.ptl:152
+#: ../page_stats_cdr.ptl:154
 msgid "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End:"
 msgstr "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fin :"
 
 #: ../page_owner_cdr.ptl:158 ../page_stats_cdr.ptl:160
+#: ../page_stats_cdr.ptl:162
 msgid "Search"
 msgstr "Recherche"
 
 #: ../page_owner_cdr.ptl:264 ../page_stats_cdr.ptl:267
-#: ../page_stats_cdr.ptl:268
+#: ../page_stats_cdr.ptl:268 ../page_stats_cdr.ptl:269
 msgid "Asc. Order"
 msgstr "Ordre croissant"
 
 #: ../page_owner_cdr.ptl:266 ../page_stats_cdr.ptl:269
-#: ../page_stats_cdr.ptl:270
+#: ../page_stats_cdr.ptl:270 ../page_stats_cdr.ptl:271
 msgid "Desc. Order"
 msgstr "Ordre d?croissant"
 
@@ -2400,18 +2505,18 @@
 msgid "Result"
 msgstr "R?sultat"
 
-#: ../StatsHelper.ptl:160
+#: ../StatsHelper.ptl:160 ../StatsHelper.ptl:165
 msgid "Answered"
 msgstr "R?ponse"
 
 msgid "Not answered"
 msgstr "Pas r?pondu"
 
-#: ../StatsHelper.ptl:162
+#: ../StatsHelper.ptl:162 ../StatsHelper.ptl:167
 msgid "Busy"
 msgstr "Occup?"
 
-#: ../StatsHelper.ptl:163
+#: ../StatsHelper.ptl:163 ../StatsHelper.ptl:168
 msgid "Failed"
 msgstr "Echou?"
 
@@ -2428,7 +2533,7 @@
 msgstr "Affiche les enregistrements de %s ? %s de %s <br /><br />"
 
 #: ../page_owner_cdr.ptl:302 ../page_stats_cdr.ptl:304
-#: ../page_stats_cdr.ptl:306
+#: ../page_stats_cdr.ptl:306 ../page_stats_cdr.ptl:307
 #, python-format
 msgid "Total Duration of shown calls: %s min."
 msgstr "Dur?e totale des appels affich?s : %s min."
@@ -2473,19 +2578,19 @@
 msgid "Statistics of Calls by Dialout Entry:"
 msgstr "Statistiques des appels par entr?e d'appels sortants :"
 
-#: ../page_admin_panel.ptl:28
+#: ../page_admin_panel.ptl:28 ../page_admin_panel.ptl:27
 msgid "Asternic Flash Operator Panel"
 msgstr "Panneau Asternic Flash Operator"
 
-#: ../page_admin_panel.ptl:43
+#: ../page_admin_panel.ptl:43 ../page_admin_panel.ptl:42
 msgid "You don't have a panel configured yet"
 msgstr "Vous n'avez pas encore configur? le panneau"
 
-#: ../page_admin_panel.ptl:47
+#: ../page_admin_panel.ptl:47 ../page_admin_panel.ptl:46
 msgid "You have a panel configured "
 msgstr "Vous avez un panneau configur?"
 
-#: ../page_admin_panel.ptl:49
+#: ../page_admin_panel.ptl:49 ../page_admin_panel.ptl:48
 msgid "here"
 msgstr "ici"
 
@@ -2524,7 +2629,7 @@
 msgid "Administration"
 msgstr "Administration"
 
-#: ../page_owner.ptl:26
+#: ../page_owner.ptl:26 ../page_owner.ptl:27
 msgid "Perform administrative actions to PBX and extensions"
 msgstr "Effectue des actions administrative sur le PBX et les extensions"
 
@@ -3053,11 +3158,11 @@
 msgid "Failed Calls"
 msgstr "Appels ayant ?chou?s"
 
-#: ../StatsHelper.ptl:158
+#: ../StatsHelper.ptl:158 ../StatsHelper.ptl:163
 msgid "Calls"
 msgstr "Appels"
 
-#: ../StatsHelper.ptl:161
+#: ../StatsHelper.ptl:161 ../StatsHelper.ptl:166
 msgid "Not Answered"
 msgstr "Non r?pondu"
 
@@ -3095,11 +3200,14 @@
 #: ../cfg_phone_sip.py:34 ../cfg_phone_zap.py:34 ../configlets.py:899
 #: ../configlets.py:1055 ../page_config_pbx.ptl:27 ../page_config_pbx.ptl:28
 #: ../configlets.py:900 ../configlets.py:1056 ../cfg_phone_sip.py:35
-#: ../configlets.py:916 ../configlets.py:1072
+#: ../configlets.py:916 ../configlets.py:1072 ../cfg_phone_sip.py:36
+#: ../cfg_trunk_iax.py:106 ../cfg_trunk_sip.py:90 ../cfg_trunk_zappbx.py:98
+#: ../cfg_trunk_zappri.py:106 ../cfg_trunk_zap.py:91 ../configlets.py:940
+#: ../configlets.py:1096
 msgid "Virtual PBX"
 msgstr "PBX Virtuel"
 
-#: ../cfg_ivr_autoatt.py:90
+#: ../cfg_ivr_autoatt.py:90 ../cfg_ivr_autoatt.py:105
 msgid "Allow calling to all extensions of PBX"
 msgstr "Autorise l'appel de toutes les extensions du PBX"
 
@@ -3116,6 +3224,7 @@
 msgstr "PBX virtuel associ?"
 
 #: ../configlets.py:791 ../configlets.py:792 ../configlets.py:808
+#: ../configlets.py:809
 msgid "Price/Account_code for this pattern"
 msgstr "Co?t/Code_de_compte pour ce pattern"
 
@@ -3140,11 +3249,11 @@
 msgid "Time_of_start"
 msgstr "Heure_du_d?but"
 
-#: ../page_owner.ptl:25
+#: ../page_owner.ptl:25 ../page_owner.ptl:26
 msgid "Virtual PBX Owner"
 msgstr "Propri?taire du PBX virtuel"
 
-#: ../page_stats_cdr.ptl:141
+#: ../page_stats_cdr.ptl:141 ../page_stats_cdr.ptl:143
 msgid "PBX"
 msgstr "PBX"
 
@@ -3315,7 +3424,7 @@
 msgid "Phone #5"
 msgstr "T?l?phone #5"
 
-#: ../configlets.py:606
+#: ../configlets.py:606 ../configlets.py:607
 msgid "Extension already in use on that PBX"
 msgstr "L'extension est d?ja utilis?e sur ce PBX"
 
@@ -3390,101 +3499,146 @@
 
 #: ../cfg_app_callfw.py:34
 msgid "Call Forwarding if Busy"
-msgstr ""
+msgstr "Transf?re d'appel si occup?"
 
 #: ../cfg_app_callfw.py:34
 msgid "Call Forwarding if Timeout/Unavailable"
-msgstr ""
+msgstr "Transf?re d'appel si Timeout/Non disponible"
 
 #: ../cfg_phone_iax.py:106
 msgid "Skip asterisk media path?"
-msgstr ""
+msgstr "Evite le chemin de m?dia d'asterisk"
 
-#: ../cfg_phone_sip.py:149 ../cfg_phone_sip.py:150
+#: ../cfg_phone_sip.py:149 ../cfg_phone_sip.py:150 ../cfg_phone_epygi.py:149
+#: ../cfg_phone_iax.py:127 ../cfg_phone_mgcp.py:133 ../cfg_phone_zap.py:131
 msgid "Monitor calls made from this extension?"
-msgstr ""
+msgstr "Surveille les appels ex?cut?s de cette extension"
 
-#: ../cfg_phone_sip.py:155 ../cfg_phone_sip.py:156
+#: ../cfg_phone_sip.py:155 ../cfg_phone_sip.py:156 ../cfg_phone_epygi.py:155
+#: ../cfg_phone_iax.py:133 ../cfg_phone_mgcp.py:139 ../cfg_phone_queue.py:111
+#: ../cfg_phone_zap.py:137
 msgid "Otherwise it will use Date-CallerIdName(CallerIdNum)-Exten"
-msgstr ""
+msgstr "Sinon sera utilis? Date-CallerIdName(CallerIdNum)-Exten"
 
-#: ../cfg_phone_sip.py:168 ../cfg_phone_sip.py:169
+#: ../cfg_phone_sip.py:168 ../cfg_phone_sip.py:169 ../cfg_phone_epygi.py:168
+#: ../cfg_phone_iax.py:146 ../cfg_phone_mgcp.py:152 ../cfg_phone_queue.py:124
+#: ../cfg_phone_zap.py:150
 msgid "Append to existing file instead of overwriting it?"
-msgstr ""
+msgstr "Ajouter au fichier existant ? la place de remplacer"
 
 #: ../cfg_phone_sip.py:173 ../cfg_phone_sip.py:174
 msgid "Save audio while the channel is bridged?"
-msgstr ""
+msgstr "Sauve le son pendant que le cannal est bridg?"
 
-#: ../cfg_phone_sip.py:178 ../cfg_phone_sip.py:179
+#: ../cfg_phone_sip.py:178 ../cfg_phone_sip.py:179 ../cfg_phone_epygi.py:179
+#: ../cfg_phone_iax.py:157 ../cfg_phone_mgcp.py:163 ../cfg_phone_queue.py:129
+#: ../cfg_phone_sip.py:180 ../cfg_phone_zap.py:161
 msgid "Heard volume factor"
-msgstr ""
+msgstr "Entendre le facteur de volume"
 
 #: ../cfg_phone_sip.py:180 ../cfg_phone_sip.py:194 ../cfg_phone_sip.py:181
-#: ../cfg_phone_sip.py:195
+#: ../cfg_phone_sip.py:195 ../cfg_phone_epygi.py:181 ../cfg_phone_epygi.py:195
+#: ../cfg_phone_iax.py:159 ../cfg_phone_iax.py:173 ../cfg_phone_mgcp.py:165
+#: ../cfg_phone_mgcp.py:179 ../cfg_phone_queue.py:131
+#: ../cfg_phone_queue.py:145 ../cfg_phone_sip.py:182 ../cfg_phone_sip.py:196
+#: ../cfg_phone_zap.py:163 ../cfg_phone_zap.py:177
 msgid "+4"
-msgstr ""
+msgstr "+4"
 
 #: ../cfg_phone_sip.py:181 ../cfg_phone_sip.py:195 ../cfg_phone_sip.py:182
-#: ../cfg_phone_sip.py:196
+#: ../cfg_phone_sip.py:196 ../cfg_phone_epygi.py:182 ../cfg_phone_epygi.py:196
+#: ../cfg_phone_iax.py:160 ../cfg_phone_iax.py:174 ../cfg_phone_mgcp.py:166
+#: ../cfg_phone_mgcp.py:180 ../cfg_phone_queue.py:132
+#: ../cfg_phone_queue.py:146 ../cfg_phone_sip.py:183 ../cfg_phone_sip.py:197
+#: ../cfg_phone_zap.py:164 ../cfg_phone_zap.py:178
 msgid "+3"
-msgstr ""
+msgstr "+3"
 
 #: ../cfg_phone_sip.py:182 ../cfg_phone_sip.py:196 ../cfg_phone_sip.py:183
-#: ../cfg_phone_sip.py:197
+#: ../cfg_phone_sip.py:197 ../cfg_phone_epygi.py:183 ../cfg_phone_epygi.py:197
+#: ../cfg_phone_iax.py:161 ../cfg_phone_iax.py:175 ../cfg_phone_mgcp.py:167
+#: ../cfg_phone_mgcp.py:181 ../cfg_phone_queue.py:133
+#: ../cfg_phone_queue.py:147 ../cfg_phone_sip.py:184 ../cfg_phone_sip.py:198
+#: ../cfg_phone_zap.py:165 ../cfg_phone_zap.py:179
 msgid "+2"
-msgstr ""
+msgstr "+2"
 
 #: ../cfg_phone_sip.py:183 ../cfg_phone_sip.py:197 ../cfg_phone_sip.py:184
-#: ../cfg_phone_sip.py:198
+#: ../cfg_phone_sip.py:198 ../cfg_phone_epygi.py:184 ../cfg_phone_epygi.py:198
+#: ../cfg_phone_iax.py:162 ../cfg_phone_iax.py:176 ../cfg_phone_mgcp.py:168
+#: ../cfg_phone_mgcp.py:182 ../cfg_phone_queue.py:134
+#: ../cfg_phone_queue.py:148 ../cfg_phone_sip.py:185 ../cfg_phone_sip.py:199
+#: ../cfg_phone_zap.py:166 ../cfg_phone_zap.py:180
 msgid "+1"
-msgstr ""
+msgstr "+1"
 
 #: ../cfg_phone_sip.py:184 ../cfg_phone_sip.py:198 ../cfg_phone_sip.py:185
-#: ../cfg_phone_sip.py:199
+#: ../cfg_phone_sip.py:199 ../cfg_phone_epygi.py:185 ../cfg_phone_epygi.py:199
+#: ../cfg_phone_iax.py:163 ../cfg_phone_iax.py:177 ../cfg_phone_mgcp.py:169
+#: ../cfg_phone_mgcp.py:183 ../cfg_phone_queue.py:135
+#: ../cfg_phone_queue.py:149 ../cfg_phone_sip.py:186 ../cfg_phone_sip.py:200
+#: ../cfg_phone_zap.py:167 ../cfg_phone_zap.py:181
 msgid "0"
-msgstr ""
+msgstr "0"
 
 #: ../cfg_phone_sip.py:185 ../cfg_phone_sip.py:199 ../cfg_phone_sip.py:186
-#: ../cfg_phone_sip.py:200
+#: ../cfg_phone_sip.py:200 ../cfg_phone_epygi.py:186 ../cfg_phone_epygi.py:200
+#: ../cfg_phone_iax.py:164 ../cfg_phone_iax.py:178 ../cfg_phone_mgcp.py:170
+#: ../cfg_phone_mgcp.py:184 ../cfg_phone_queue.py:136
+#: ../cfg_phone_queue.py:150 ../cfg_phone_sip.py:187 ../cfg_phone_sip.py:201
+#: ../cfg_phone_zap.py:168 ../cfg_phone_zap.py:182
 msgid "-1"
-msgstr ""
+msgstr "-1"
 
 #: ../cfg_phone_sip.py:186 ../cfg_phone_sip.py:200 ../cfg_phone_sip.py:187
-#: ../cfg_phone_sip.py:201
+#: ../cfg_phone_sip.py:201 ../cfg_phone_epygi.py:187 ../cfg_phone_epygi.py:201
+#: ../cfg_phone_iax.py:165 ../cfg_phone_iax.py:179 ../cfg_phone_mgcp.py:171
+#: ../cfg_phone_mgcp.py:185 ../cfg_phone_queue.py:137
+#: ../cfg_phone_queue.py:151 ../cfg_phone_sip.py:188 ../cfg_phone_sip.py:202
+#: ../cfg_phone_zap.py:169 ../cfg_phone_zap.py:183
 msgid "-2"
-msgstr ""
+msgstr "-2"
 
 #: ../cfg_phone_sip.py:187 ../cfg_phone_sip.py:201 ../cfg_phone_sip.py:188
-#: ../cfg_phone_sip.py:202
+#: ../cfg_phone_sip.py:202 ../cfg_phone_epygi.py:188 ../cfg_phone_epygi.py:202
+#: ../cfg_phone_iax.py:166 ../cfg_phone_iax.py:180 ../cfg_phone_mgcp.py:172
+#: ../cfg_phone_mgcp.py:186 ../cfg_phone_queue.py:138
+#: ../cfg_phone_queue.py:152 ../cfg_phone_sip.py:189 ../cfg_phone_sip.py:203
+#: ../cfg_phone_zap.py:170 ../cfg_phone_zap.py:184
 msgid "-3"
-msgstr ""
+msgstr "-3"
 
 #: ../cfg_phone_sip.py:188 ../cfg_phone_sip.py:202 ../cfg_phone_sip.py:189
-#: ../cfg_phone_sip.py:203
+#: ../cfg_phone_sip.py:203 ../cfg_phone_epygi.py:189 ../cfg_phone_epygi.py:203
+#: ../cfg_phone_iax.py:167 ../cfg_phone_iax.py:181 ../cfg_phone_mgcp.py:173
+#: ../cfg_phone_mgcp.py:187 ../cfg_phone_queue.py:139
+#: ../cfg_phone_queue.py:153 ../cfg_phone_sip.py:190 ../cfg_phone_sip.py:204
+#: ../cfg_phone_zap.py:171 ../cfg_phone_zap.py:185
 msgid "-4"
-msgstr ""
+msgstr "-4"
 
-#: ../cfg_phone_sip.py:192 ../cfg_phone_sip.py:193
+#: ../cfg_phone_sip.py:192 ../cfg_phone_sip.py:193 ../cfg_phone_epygi.py:193
+#: ../cfg_phone_iax.py:171 ../cfg_phone_mgcp.py:177 ../cfg_phone_queue.py:143
+#: ../cfg_phone_sip.py:194 ../cfg_phone_zap.py:175
 msgid "Spoken volume factor"
-msgstr ""
+msgstr "Facteur de volume parl?"
 
 #: ../page_user_settings.ptl:59
 msgid "Forward call when busy to"
-msgstr ""
+msgstr "Faire suivre l'appel quand occup? vers"
 
 #: ../page_user_settings.ptl:60
 msgid "Forward call when timeout/unavailable to"
-msgstr ""
+msgstr "Faire suivre l'appel quand timeout/non disponible vers"
 
 #: ../cfg_dialout_normal.py:42
 msgid "Disallow calling user transfer?"
-msgstr ""
+msgstr "Interdit le transf?re de l'utilisateur appelant ?"
 
 #: ../backend.py:404
 #, python-format
 msgid "Error writing up %s"
-msgstr ""
+msgstr "Erreur d'?criture sur %s"
 
 #: ../cfg_app_quickdial_phone.py:27
 msgid ""
@@ -3495,102 +3649,107 @@
 "if the extension has an assigned dialout entry which pattern matches the "
 "final destination."
 msgstr ""
+"Extensions ? ajouter ? partir de la liste de num?rotation rapide. L'ajout d'extension\n"
+"sera de la forme pr?fixe+2_chiffres+*+destination_finale. La suppression\n"
+"d'extension sera de la forme pr?fixe+2_chiffres. La liste de num?rotation rapide\n"
+"personnelle fonctionne pour toutes les extensions, en t?l?phonant pr?fixe_d_appel+2_chiffres et\n"
+"seulement si l'extension poss?de une entr?e d'appel sortant matchant la destination finale"
 
 #: ../cfg_app_quickdial_phone.py:28
 msgid "New extensions to add/remove/access personal quick dial list"
-msgstr ""
+msgstr "Nouvelles extensions ? ajouter/supprimer/acc?der de la liste des num?rotations rapide"
 
 #: ../cfg_app_quickdial_phone.py:35
 msgid "Dial prefix"
-msgstr ""
+msgstr "Pr?fixe d'appel"
 
 #: ../page_admin_viewconf.ptl:29
 msgid "View/Save Configuration"
-msgstr ""
+msgstr "Voir/Sauver configuration"
 
 #: ../page_admin_viewconf.ptl:30
 msgid "Show and Save Asterisk configuration files"
-msgstr ""
+msgstr "Monter et sauver les fichiers de configuration d'asterisk"
 
 #: ../page_admin_viewconf.ptl:91
 msgid "Save all changes"
-msgstr ""
+msgstr "Sauver tous les changements"
 
 #: ../page_admin_viewconf.ptl:108
 msgid "Save changes results"
-msgstr ""
+msgstr "Sauver les r?sultants des changements"
 
 #: ../page_admin_viewconf.ptl:111
 msgid "Configuration files saved"
-msgstr ""
+msgstr "Fichiers de configuration sauv?s"
 
 #: ../page_admin_viewconf.ptl:113
 msgid ""
 "There were problems writing the configuration. Please take a look at the "
 "error logs."
-msgstr ""
+msgstr "Il y a eu des probl?mes lors de la sauvegarde de la configuration. Svp, regardes les logs d'erreur"
 
 #: ../page_admin_viewconf.ptl:126
 msgid ""
 "WARNING: This configuration might experience grave problems because the "
 "following asterisk modules are missing on your system:"
-msgstr ""
+msgstr "AVERTISSEMENT: Cette configuration peut avoir de probl?me cons?quents car les module asterisk suivant sont manquants sur votre syst?me :"
 
 #: ../cfg_opt_sip_audio.py:39
 msgid "Allow g726 codec"
-msgstr ""
+msgstr "Autorise le codec g726"
 
 #: ../page_admin_viewconf.ptl:90
 msgid "Show selected files"
-msgstr ""
+msgstr "Montre les fichiers s?lectionn?s"
 
 #: ../cfg_opt_codec.py:29
 msgid "Audio Codec"
-msgstr ""
+msgstr "Codec audio"
 
 #: ../cfg_opt_codec.py:30
 msgid "New audio codec to be used"
-msgstr ""
+msgstr "Nouveau codec audio ? utiliser"
 
 #: ../cfg_opt_codec.py:35
 msgid "Allow codec"
-msgstr ""
+msgstr "Autorise codec"
 
 #: ../cfg_opt_codec.py:37
 msgid "Use all codecs"
-msgstr ""
+msgstr "Utilise tous les codecs"
 
 #: ../cfg_opt_codec.py:38
 msgid "A Law (g711a)"
-msgstr ""
+msgstr "Alaw (g711a)"
 
 #: ../cfg_opt_codec.py:39
 msgid "U Law (g711u)"
-msgstr ""
+msgstr "Ulaw (g711u)"
 
 #: ../cfg_opt_codec.py:41
 msgid "ILBC"
-msgstr ""
+msgstr "ILBC"
 
 #: ../cfg_opt_codec.py:42
 msgid "g726"
-msgstr ""
+msgstr "g726"
 
 #: ../cfg_opt_codec.py:43
 msgid "g723.1"
-msgstr ""
+msgstr "g723.1"
 
 #: ../cfg_opt_codec.py:44
 msgid "g729"
-msgstr ""
+msgstr "g729"
 
 #: ../page_config_codecs.ptl:27
 msgid "Codecs"
-msgstr ""
+msgstr "Codecs"
 
 #: ../page_config_codecs.ptl:28
 msgid "Audio codecs to use on SIP and IAX channels."
-msgstr ""
+msgstr "Codecs audio ? utiliser sur les cannaux SIP et IAX"
 
 #: ../cdrutils.py:36
 #, python-format
@@ -3598,25 +3757,29 @@
 "Note: you don't seem to have access to %s yet created by cdr_sqlite3_custom. "
 "See INSTALL.txt for details."
 msgstr ""
+"Note : vous ne semblez pas avoir acc?s ? %s d?ja cr?? par cdr_sqlite3_custom.\n"
+"Consultez INSTALL.txt pour les d?tails."
 
 #: ../cfg_opt_sip_audio.py:29
 msgid "Depricated: use individual 'Audio Codec' configlets instead."
-msgstr ""
+msgstr "D?suet : utilisez le configlets individuel 'Audio Codec' ? la place"
 
-#: ../page_admin.ptl:38 ../page_owner.ptl:40
+#: ../page_admin.ptl:38 ../page_owner.ptl:40 ../page_owner.ptl:43
 msgid "Action"
-msgstr ""
+msgstr "Action"
 
 #: ../page_admin.ptl:38 ../page_owner.ptl:40 ../page_stats.ptl:38
-#: ../page_user.ptl:38
+#: ../page_user.ptl:38 ../page_owner.ptl:43
 msgid "Description"
-msgstr ""
+msgstr "Description"
 
 #, python-format
 msgid ""
 "You don't seem to have access to %s yet created by cdr_sqlite3_custom. "
 "Without this file CDR reports wont be accesible trough this interface.),"
 msgstr ""
+"Note : vous ne semblez pas avoir acc?s ? %s d?ja cr?? par cdr_sqlite3_custom.\n"
+"Sans ce fichier, les rapports CDR ne seront pas accessible via cette interface."
 
 #: ../page_config.ptl:107
 #, python-format
@@ -3624,39 +3787,103 @@
 "You don't seem to have access to %s yet created by cdr_sqlite3_custom. "
 "Without this file CDR reports wont be accesible trough this interface."
 msgstr ""
+"Note : vous ne semblez pas avoir acc?s ? %s d?ja cr?? par cdr_sqlite3_custom.\n"
+"Sans ce fichier, les rapports CDR ne seront pas accessible via cette interface."
 
 #: ../page_user.ptl:38
 msgid "Available actions"
-msgstr ""
+msgstr "Actions disponibles"
 
 #: ../destar:62
 msgid "  -b | --backend: run on backend mode"
-msgstr ""
+msgstr "  -b | --backend : lance en mode backend"
 
 #: ../destar:63
 msgid "  -g | --generate-docs: generate documentation"
-msgstr ""
+msgstr "  -g | --generate-docs : g?n?re la documentation"
 
-#: ../cfg_ivr_autoatt.py:84
+#: ../cfg_ivr_autoatt.py:84 ../cfg_ivr_autoatt.py:99
 msgid "i.e. hours|weekdays|monthdays|months (comma separated)"
-msgstr ""
+msgstr "c?d heures|jours de la semaine|jours du mois|mois (s?par?s par des vigules)"
 
-#: ../cfg_phone_sip.py:29
+#: ../cfg_phone_sip.py:29 ../cfg_phone_sip.py:30
 msgid ""
 "This is a SIP phone account, to be used by hard-phones, soft-phones, ATAs, "
 "etc."
 msgstr ""
+"Ceci est un compte de t?l?phone SIP pouvant ?tre utilis? par des t?l?phones mat?riels ou logiciels, ATAs,\n"
+"etc."
 
-#: ../configlets.py:696
+#: ../configlets.py:696 ../configlets.py:697
 #, python-format
 msgid "The configlet '%s' does not have a description"
-msgstr ""
+msgstr "La configlet '%s' n'a pas de description"
 
 #: ../cfg_opt_zap_trunk.py:31
 msgid "Try to detect busy signal to detect if remote site hung up"
-msgstr ""
+msgstr "Essaie de d?tecter le signal d'occupation si le site distant raccroche"
 
 #: ../page_stats_cdr.ptl:301 ../page_stats_cdr.ptl:303
+#: ../page_stats_cdr.ptl:302 ../page_stats_cdr.ptl:304
 #, python-format
 msgid "Showing records from %s to %s of %s"
-msgstr ""
+msgstr "Affichage des enregistrements de %s ? %s de %s"
+
+#: ../cfg_ivr_autoatt.py:39
+msgid "Time to wait before answer the line"
+msgstr "Temps d'attente avant de r?pondre sur la ligne"
+
+#: ../cfg_ivr_autoatt.py:40 ../cfg_ivr_autoatt.py:47
+msgid "(in seconds)"
+msgstr "(en secondes)"
+
+#: ../cfg_ivr_autoatt.py:46
+msgid "How many time has the user to dial an extension?"
+msgstr "Combien de fois un utilisateur a pour composer une extension ?"
+
+#: ../cfg_opt_oppanel.py:50
+msgid "Button Size"
+msgstr "Taille de Bouton"
+
+#: ../cfg_opt_oppanel.py:53
+msgid "Very Small"
+msgstr "Tr?s petit"
+
+#: ../cfg_opt_oppanel.py:54
+msgid "Small"
+msgstr "Petit"
+
+#: ../cfg_opt_oppanel.py:55
+msgid "Normal"
+msgstr "Normal"
+
+#: ../cfg_opt_oppanel.py:56
+msgid "Large"
+msgstr "Grand"
+
+#: ../cfg_opt_oppanel.py:57
+msgid "Very Large"
+msgstr "Tr?s grand"
+
+#: ../cfg_phone_epygi.py:173 ../cfg_phone_iax.py:151 ../cfg_phone_mgcp.py:157
+#: ../cfg_phone_sip.py:174 ../cfg_phone_zap.py:155
+msgid "Save audio only while the channel is bridged?"
+msgstr "Sauvegarder l'audio seulement pendant que cannal est bridg? ?"
+
+#: ../cfg_phone_epygi.py:174 ../cfg_phone_iax.py:152 ../cfg_phone_mgcp.py:158
+#: ../cfg_phone_sip.py:175 ../cfg_phone_zap.py:156
+msgid "Does not include conferences"
+msgstr "N'inclus pas les conf?rences"
+
+#: ../cfg_phone_queue.py:59
+msgid "Ring instead of playing Music-on-Hold?"
+msgstr "Sonne ? place de jouer la musique d'attente ?"
+
+#: ../cfg_trunk_iax.py:121 ../cfg_trunk_sip.py:105 ../cfg_trunk_zappbx.py:113
+#: ../cfg_trunk_zappri.py:121
+msgid "Allow dial extension from which Virtual PBX"
+msgstr "Autorise l'extension d'appel ? partir de quel PBX VIrtual"
+
+#: ../Templates.ptl:27
+msgid "0.2.0"
+msgstr "0.2.0"



From santiago at mail.berlios.de  Tue Jan 16 23:44:02 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Tue, 16 Jan 2007 23:44:02 +0100
Subject: [Destar-dev] r567 - branches/quixote2
Message-ID: <200701162244.l0GMi2kN000632@sheep.berlios.de>

Author: santiago
Date: 2007-01-16 23:44:01 +0100 (Tue, 16 Jan 2007)
New Revision: 567

Modified:
   branches/quixote2/backend.py
   branches/quixote2/cdrutils.py
   branches/quixote2/configlets.py
   branches/quixote2/destar
Log:
and merging



Modified: branches/quixote2/backend.py
===================================================================
--- branches/quixote2/backend.py	2007-01-16 22:40:11 UTC (rev 566)
+++ branches/quixote2/backend.py	2007-01-16 22:44:01 UTC (rev 567)
@@ -153,8 +153,8 @@
 
 
 	c = AstConf("zapata.conf")
+	c.setSection("channels")
 	c.append("language=%s" % getSetting('language', 'en'))
-	c.setSection("channels")
 	c.append("immediate=no")
 	c.append("overlapdial=yes")
 	
@@ -163,13 +163,13 @@
 	c.append("language=%s" % getSetting('language', 'en'))
 
 	needModule("pbx_functions")
-	needModule("cdr_sqlite3_custom")
 	c = AstConf("cdr_sqlite3_custom.conf")
 	c.setSection("master")
 	c.append("table => cdr")
 	c.append("columns => clid,src,dst,dcontext,channel,dstchannel,lastapp,lastdata,start,answer,end,duration,billsec,disposition,amaflags,accountcode,uniqueid,userfield,pbx,intrunk,outtrunk,dialout")
 	c.append("values => '${CDR(clid)}','${CDR(src)}','${CDR(dst)}','${CDR(dcontext)}','${CDR(channel)}','${CDR(dstchannel)}','${CDR(lastapp)}','${CDR(lastdata)}','${CDR(start)}','${CDR(answer)}','${CDR(end)}','${CDR(duration)}','${CDR(billsec)}','${CDR(disposition)}','${CDR(amaflags)}','${CDR(accountcode)}','${CDR(uniqueid)}','${CDR(userfield)}','${CDR(pbx)}','${CDR(intrunk)}','${CDR(outtrunk)}','${CDR(dialout)}'")
 
+	needModule("res_indications")
 	c = AstConf("macros.inc")
 	c.append(";")
 	c.append("; Macro to dial a standard local extension")
@@ -182,47 +182,73 @@
 	c.append("exten=s,1,Set(fw_ext=${DB(CFIM/${ARG5}/${ARG4})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append(";")
+	c.append("; test for VMIM (VM Immediate)")
+	c.append("exten=s,n,Set(vmim=${DB(VMIM/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${vmim}" != ""]?vmu)')
+	c.append(";")
 	c.append("; test for DND (Do Not Disturb)")
-	c.append("exten=s,n,Set(temp=${DB(DND/${ARG5}/${ARG4})})")
-	c.append('exten=s,n,GotoIf($["${temp}" = "True"]?testvmu)')
+	c.append("exten=s,n,Set(dnd=${DB(DND/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${dnd}" != ""]?busy)')
 	c.append(";")
 	c.append("; get dial seconds")
 	c.append("exten=s,n,Set(dsec=${DB(DSEC/${ARG5}/${ARG4})})")
-	c.append('exten=s,n,GotoIf($["${dsec}" = ""]?:dsecEnd)')
+	c.append('exten=s,n,GotoIf($["${dsec}" != ""]?dsecEnd)')
 	c.append("exten=s,n,Set(dsec=45)")
 	c.append("exten=s,n(dsecEnd),NoOp()")
 	c.append(";")
-	c.append("; get dial options")
+	c.append("; get global dial options")
 	c.append("exten=s,n,Set(dopt=${DIAL_OPTIONS})")
-	c.append('exten=s,n,GotoIf($["${dopt}" = ""]?:doptEnd)')
-	c.append("exten=s,n,Set(dopt=r)")
-	c.append("exten=s,n(doptEnd),NoOp()")
+	#c.append('exten=s,n,GotoIf($["${dopt}" != ""]?doptEnd)')
+	#c.append("exten=s,n,Set(dopt=r)")
+	#c.append("exten=s,n(doptEnd),NoOp()")
 	c.append(";")
+	c.append("; get early media")
+	c.append("exten=s,n,Set(emedia=${DB(EMEDIA/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${emedia}" = ""]?emediaEnd)')
+	c.append("exten=s,n,Set(dopt=${dopt}m(${emedia}))")
+	c.append("exten=s,n,Answer()")
+	c.append("exten=s,n(emediaEnd),NoOp()")
+	c.append(";")
+	c.append("; parallel ringing")
+	c.append("exten=s,n,Set(prng=${DB(PRNG/${ARG5}/${ARG4})})")
+	c.append(";")
 	c.append("; Dial")
-	c.append("exten=s,n(MainDial),Dial(${ARG1},${dsec},Tt${dopt})")
+	c.append("exten=s,n(MainDial),Dial(${ARG1}${prng},${dsec},TtWw${dopt})")
 	c.append(";")
 	c.append("; Dial result was 'timeout'")
-	c.append("exten=s,n,Set(fw_ext=${DB(CFTO/${ARG5}/${ARG4})})")
+	c.append("exten=s,n(dialtimeout),Set(fw_ext=${DB(CFTO/${ARG5}/${ARG4})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
+	c.append('exten=s,n,GotoIf($["{CDR(intrunk)}" = ""]?cftoend)')
+	c.append("exten=s,n,Set(fw_ext=${DB(CFTO-TRUNK/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
+	c.append("exten=s,n(cftoend),NoOp()")
 	c.append(";")
 	c.append("; no CFTO (Call Forward Timeout), test VM U.")
-	c.append("exten=s,n,Goto(testvmu)")
+	c.append("exten=s,n,Set(vmu=${DB(VMU/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${vmu}" != ""]?vmu)')
+	c.append("exten=s,n,Goto(hangup)")
 	c.append(";")
 	c.append("; Dial result was 'busy'")
-	c.append("exten=s,MainDial+101,Set(fw_ext=${DB(CFBS/${ARG5}/${ARG4})})")
+	c.append("exten=s,MainDial+101(busy),Set(fw_ext=${DB(CFBS/${ARG5}/${ARG4})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
+	c.append('exten=s,n,GotoIf($["{CDR(intrunk)}" = ""]?cfbsend)')
+	c.append("exten=s,n,Set(fw_ext=${DB(CFBS-TRUNK/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
+	c.append("exten=s,n(cfbsend),NoOp()")
 	c.append(";")
 	c.append("; no CFBS (Call Forward Busy), test VM Busy")
-	c.append("exten=s,n,Goto(testvmb)")
+	c.append("exten=s,n,Set(vmbs=${DB(VMBS/${ARG5}/${ARG4})})")
+	c.append('exten=s,n,GotoIf($["${vmbs}" != ""]?vmbs)')
+	c.append("exten=s,n,Answer()")
+	c.append("exten=s,n,Playtones(busy)")
+	c.append("exten=s,n,Busy()")
 	c.append(";")
 	c.append("exten=s,n(fw),Goto(${ARG2},${fw_ext},1)")
 	c.append(";")
-	c.append('exten=s,n(testvmu),GotoIf($["${ARG3}" = "1"]?:hangup)')
-	c.append('exten=s,n,Set(vmopt=u)')
+	c.append('exten=s,n(vmu),Set(vmopt=u)')
 	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG4}@${ARG5})")
 	c.append(";")
-	c.append('exten=s,n(testvmb),GotoIf($["${ARG3}" = "1"]?:hangup)')
-	c.append('exten=s,n,Set(vmopt=b)')
+	c.append('exten=s,n(vmbs),Set(vmopt=b)')
 	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG4}@${ARG5})")
 	c.append(";")
 	c.append("exten=s,n(hangup),Hangup()")
@@ -363,13 +389,17 @@
 	c.setSection("modules")
 	c.append("autoload=no")
 	for m in c.modules.preload:
-		c.append("preload=%s.so" % m)
-		if not m in available_modules: missing_modules.append(m)
+		if not m in available_modules:
+			missing_modules.append(m)
+		else:
+			c.append("preload=%s.so" % m)
 
 	for sect in ("pbx", "codec", "format", "res", "cdr", "chan", "func", "app"):
 		for m in c.modules[sect]:
-			c.append("load=%s.so" % m)
-			if not m in available_modules: missing_modules.append(m)
+			if not m in available_modules:
+				missing_modules.append(m)
+			else:
+				c.append("load=%s.so" % m)
 
 	# test if all config files are OK to be written or overwritten
 	tmp_conf = []

Modified: branches/quixote2/cdrutils.py
===================================================================
--- branches/quixote2/cdrutils.py	2007-01-16 22:40:11 UTC (rev 566)
+++ branches/quixote2/cdrutils.py	2007-01-16 22:44:01 UTC (rev 567)
@@ -20,14 +20,22 @@
 
 import sys, os
 import language
+from configlets import needModule
 
-
 try:
 	from pysqlite2 import dbapi2 as sqlite
 except ImportError:
 	print _("Note: you should install python-pysqlite2 to have CDR functionality")
 
 try:
+	if not  os.access("/usr/lib/asterisk/modules/cdr_sqlite3_custom.so", os.F_OK):
+		raise ImportError
+	needModule("cdr_sqlite3_custom")
+except:
+	print _("Note: you need the cdr_sqlite3_custom module to have CDR and Stats functionalities")
+	
+
+try:
 	db_fn = "/var/log/asterisk/master.db"
 	if not os.access(db_fn, os.O_RDWR):
 		raise ImportError

Modified: branches/quixote2/configlets.py
===================================================================
--- branches/quixote2/configlets.py	2007-01-16 22:40:11 UTC (rev 566)
+++ branches/quixote2/configlets.py	2007-01-16 22:44:01 UTC (rev 567)
@@ -104,7 +104,7 @@
 			self.order.append(self.section)
 		self.dirty = True
 
-	def appendExten(self,ext,l,e=None):
+	def appendExten(self,ext,l,e=None, label=None):
 		"""Append an extension line l to the current section. Append
 		an optional error extenion e as well. Increments the priorty
 		if the extension stays the same, resets the prio to 1 if the
@@ -113,7 +113,12 @@
 		if ext != self.lastext:
 			self.extpriority = 1
 		self.lastext = ext
-		self.append("exten=%s,%d,%s" % (ext, self.extpriority, l))
+
+		if label:
+		    self.append("exten=%s,%d(%s),%s" % (ext, self.extpriority, label, l))
+		else:
+		    self.append("exten=%s,%d,%s" % (ext, self.extpriority, l))
+
 		if e:
 			self.append("exten=%s,%d,%s" % (ext, self.extpriority+101, e))
 			
@@ -874,27 +879,63 @@
 		contextin = "in-%s" % self.name
 		c.setSection(contextin)
 		c.appendExten("s","Set(CDR(intrunk)=%s)" %  self.name)
-		c.appendExten("_X.","Set(CDR(intrunk)=%s)" %  self.name)
 		if self.clid:
 			needModule("func_callerid")
 			c.appendExten("s","Set(CALLERID(name)=%s)" %  self.clid)
-			c.appendExten("_X.","Set(CALLERID(name)=%s)" %  self.clid)
+		if self.clidnumin:
+			needModule("func_callerid")
+			c.appendExten("s","Set(CALLERID(number)=%s)" %  self.clidnumin)
 		global configlet_tree
 		if self.contextin == 'phone' and self.phone:
 			obj = configlet_tree.getConfigletByName(self.phone)
 			try:
 				pbx = obj.pbx
 				c.appendExten("s", "Goto(%s,%s,1)" % (pbx,self.phone))
-				c.appendExten("_X.", "Goto(%s,%s,1)" % (pbx,self.phone))
 			except AttributeError:
 				pass
 		if self.contextin == 'ivr' and self.ivr:
 			c.appendExten("s", "Goto(%s,s,1)" % self.ivr)
-			c.appendExten("_X.", "Goto(%s,s,1)" % self.ivr)
 		if self.contextin == 'pbx' and self.pbx:
 			c.appendExten("s", "Goto(%s,s,1)" % self.pbx)
-			c.appendExten("_X.", "Goto(%s,${EXTEN},1)" % self.ivr)
 
+		c.appendExten("_X","Set(CDR(intrunk)=%s)" %  self.name)
+		if self.clid:
+			needModule("func_callerid")
+			c.appendExten("_X","Set(CALLERID(name)=%s)" %  self.clid)
+		if self.clidnumin:
+			needModule("func_callerid")
+			c.appendExten("_X","Set(CALLERID(number)=%s)" %  self.clidnumin)
+		if self.contextin == 'phone' and self.phone:
+			obj = configlet_tree.getConfigletByName(self.phone)
+			try:
+				pbx = obj.pbx
+				c.appendExten("_X", "Goto(%s,%s,1)" % (pbx,self.phone))
+			except AttributeError:
+				pass
+		if self.contextin == 'ivr' and self.ivr:
+			c.appendExten("_X", "Goto(%s,s,1)" % self.ivr)
+		if self.contextin == 'pbx' and self.pbx:
+			c.appendExten("_X", "Goto(%s,${EXTEN},1)" % self.pbx)
+
+		c.appendExten("_X.","Set(CDR(intrunk)=%s)" %  self.name)
+		if self.clid:
+			needModule("func_callerid")
+			c.appendExten("_X.","Set(CALLERID(name)=%s)" %  self.clid)
+		if self.clidnumin:
+			needModule("func_callerid")
+			c.appendExten("_X.","Set(CALLERID(number)=%s)" %  self.clidnumin)
+		if self.contextin == 'phone' and self.phone:
+			obj = configlet_tree.getConfigletByName(self.phone)
+			try:
+				pbx = obj.pbx
+				c.appendExten("_X.", "Goto(%s,%s,1)" % (pbx,self.phone))
+			except AttributeError:
+				pass
+		if self.contextin == 'ivr' and self.ivr:
+			c.appendExten("_X.", "Goto(%s,s,1)" % self.ivr)
+		if self.contextin == 'pbx' and self.pbx:
+			c.appendExten("_X.", "Goto(%s,${EXTEN},1)" % self.pbx)
+
 		
 class CfgPhone(Cfg):
 	"""Base class for all phone devices."""
@@ -953,24 +994,30 @@
                 except AttributeError:
                         pbx = "phones"
                 extensions.setSection(pbx)
+		extensions.append("exten=%s,hint,%s/%s" % (self.ext, self.technology, self.name))
 		extensions.appendExten(self.ext,"Set(CDR(pbx)=%s,CDR(userfield)=%s)" % (pbx,self.name))
 		self.createDialEntry(extensions, self.ext, pbx, self.ext)
 		extensions.appendExten(self.name,"Set(CDR(pbx)=%s,CDR(userfield)=%s)" % (pbx,self.name))
 		self.createDialEntry(extensions, self.name, pbx, self.ext)
+		for obj in configlet_tree:
+			if obj.__class__.__name__ == 'CfgAppCallFW':
+				if obj.devstateprefix:
+					extensions.append("exten=%s%s,hint,DS/%s_%s_%s" % (obj.devstateprefix, self.ext, obj.type.lower(), pbx, self.ext))
+					extensions.appendExten("%s%s" % (obj.devstateprefix, self.ext), "Goto(%s,%s,1)" % (pbx, obj.set))
+		for obj in configlet_tree:
+			if obj.__class__.__name__ == 'CfgAppVoicemailSettings':
+				if obj.devstateprefix:
+					extensions.append("exten=%s%s,hint,DS/%s_%s_%s" % (obj.devstateprefix, self.ext, obj.type.lower(), pbx, self.ext))
+					extensions.appendExten("%s%s" % (obj.devstateprefix, self.ext), "Goto(%s,%s,1)" % (pbx, obj.set))
 
-	def createHintConfig(self):
-		extensions = AstConf("extensions.conf")
-        	try:
-            		pbx = self.pbx
-        	except AttributeError:
-            		pbx = "phones"
-        	extensions.setSection(pbx)
-		extensions.append("exten=%s,hint,%s/%s" % (self.ext, self.technology, self.name))
-
 	def createVoicemailConfig(self, conf):
-		if self.ext and self.usevm:
-			needModule("res_adsi")
-			needModule("app_voicemail")
+		vmconfig = False;
+		for obj in configlet_tree:
+			if obj.__class__.__name__ == 'CfgOptVoicemail':
+				if obj.enable:
+				    vmconfig = True;
+				break
+		if vmconfig:
 			if self.usemwi:
 				conf.append("mailbox=%s@%s" % (self.ext,self.pbx))
 

Modified: branches/quixote2/destar
===================================================================
--- branches/quixote2/destar	2007-01-16 22:40:11 UTC (rev 566)
+++ branches/quixote2/destar	2007-01-16 22:44:01 UTC (rev 567)
@@ -36,9 +36,8 @@
 be_daemon = False
 rport = 8080
 pid_file = '/var/run/destar.pid'
-VERSION = 'QUIXOTE 2.X BRANCH'
+VERSION = 'DEVELOPMENT SNAPSHOT'
 
-
 def print_version():
 	print _("DeStar %s, Copyright (C) 2005 by Holger Schurig and contributors.\n\n"\
 	"DeStar comes with ABSOLUTELY NO WARRANTY. This is free software,\n"\



From admin at berlios.de  Wed Jan 17 00:12:24 2007
From: admin at berlios.de (admin at berlios.de)
Date: Tue, 16 Jan 2007 18:12:24 -0500 (COT)
Subject: [Destar-dev] [Bug #9705] NAT support config for sip
Message-ID: <200701162312.l0GNCOJ6025143@unicorn.berlios.de>

Bug #9705, was updated on 2006-Dec-13 00:27
Here is a current snapshot of the bug.

Project: DeStar
Category: None
Status: Closed
Resolution: Fixed
Bug Group: None
Priority: 5
Submitted by: santiago
Assigned to : none
Summary: NAT support config for sip

Details: destar should allow to config the externip and localnet sip parameters 

Follow-Ups:

Date: 2007-Jan-16 18:12
By: santiago

Comment:
it's invalid
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9705&group_id=2112


From admin at berlios.de  Wed Jan 17 00:12:37 2007
From: admin at berlios.de (admin at berlios.de)
Date: Tue, 16 Jan 2007 18:12:37 -0500 (COT)
Subject: [Destar-dev] [Bug #9705] NAT support config for sip
Message-ID: <200701162312.l0GNCbNJ025269@unicorn.berlios.de>

Bug #9705, was updated on 2006-Dec-13 00:27
Here is a current snapshot of the bug.

Project: DeStar
Category: None
Status: Closed
Resolution: Fixed
Bug Group: None
Priority: 5
Submitted by: santiago
Assigned to : none
Summary: NAT support config for sip

Details: destar should allow to config the externip and localnet sip parameters 

Follow-Ups:

Date: 2007-Jan-16 18:12
By: santiago

Comment:
it's invalid
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9705&group_id=2112


From hholzer at mail.berlios.de  Fri Jan 19 01:16:43 2007
From: hholzer at mail.berlios.de (hholzer at mail.berlios.de)
Date: Fri, 19 Jan 2007 01:16:43 +0100
Subject: [Destar-dev] r568 - trunk
Message-ID: <200701190016.l0J0GhLa022158@sheep.berlios.de>

Author: hholzer
Date: 2007-01-19 01:16:38 +0100 (Fri, 19 Jan 2007)
New Revision: 568

Modified:
   trunk/backend.py
   trunk/cfg_app_callfw.py
   trunk/cfg_phone_epygi.py
   trunk/cfg_phone_iax.py
   trunk/cfg_phone_mgcp.py
   trunk/cfg_phone_sip.py
   trunk/cfg_phone_zap.py
   trunk/configlets.py
Log:
cleanup voicemail settings
callforward can now remember the last number


Modified: trunk/backend.py
===================================================================
--- trunk/backend.py	2007-01-16 22:44:01 UTC (rev 567)
+++ trunk/backend.py	2007-01-19 00:16:38 UTC (rev 568)
@@ -174,24 +174,24 @@
 	c.append(";")
 	c.append("; Macro to dial a standard local extension")
 	c.append(";")
-	c.append("; format: Macro(stdexten,dest,voicebox 1/0,ext,pbx)")
+	c.append("; format: Macro(stdexten,dest,ext,pbx)")
 	c.append(";")
 	c.setSection("macro-dial-std-exten")
 	c.append(";")
 	c.append("; test for CFIM (Call Forwarding Immediate)")
-	c.append("exten=s,1,Set(fw_ext=${DB(CFIM/${ARG5}/${ARG4})})")
+	c.append("exten=s,1,Set(fw_ext=${DB(CFIM/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append(";")
 	c.append("; test for VMIM (VM Immediate)")
-	c.append("exten=s,n,Set(vmim=${DB(VMIM/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(vmim=${DB(VMIM/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${vmim}" != ""]?vmu)')
 	c.append(";")
 	c.append("; test for DND (Do Not Disturb)")
-	c.append("exten=s,n,Set(dnd=${DB(DND/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(dnd=${DB(DND/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${dnd}" != ""]?busy)')
 	c.append(";")
 	c.append("; get dial seconds")
-	c.append("exten=s,n,Set(dsec=${DB(DSEC/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(dsec=${DB(DSEC/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${dsec}" != ""]?dsecEnd)')
 	c.append("exten=s,n,Set(dsec=45)")
 	c.append("exten=s,n(dsecEnd),NoOp()")
@@ -203,41 +203,41 @@
 	#c.append("exten=s,n(doptEnd),NoOp()")
 	c.append(";")
 	c.append("; get early media")
-	c.append("exten=s,n,Set(emedia=${DB(EMEDIA/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(emedia=${DB(EMEDIA/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${emedia}" = ""]?emediaEnd)')
 	c.append("exten=s,n,Set(dopt=${dopt}m(${emedia}))")
 	c.append("exten=s,n,Answer()")
 	c.append("exten=s,n(emediaEnd),NoOp()")
 	c.append(";")
 	c.append("; parallel ringing")
-	c.append("exten=s,n,Set(prng=${DB(PRNG/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(prng=${DB(PRNG/${ARG4}/${ARG3})})")
 	c.append(";")
 	c.append("; Dial")
 	c.append("exten=s,n(MainDial),Dial(${ARG1}${prng},${dsec},TtWw${dopt})")
 	c.append(";")
 	c.append("; Dial result was 'timeout'")
-	c.append("exten=s,n(dialtimeout),Set(fw_ext=${DB(CFTO/${ARG5}/${ARG4})})")
+	c.append("exten=s,n(dialtimeout),Set(fw_ext=${DB(CFTO/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append('exten=s,n,GotoIf($["{CDR(intrunk)}" = ""]?cftoend)')
-	c.append("exten=s,n,Set(fw_ext=${DB(CFTO-TRUNK/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(fw_ext=${DB(CFTO-TRUNK/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append("exten=s,n(cftoend),NoOp()")
 	c.append(";")
 	c.append("; no CFTO (Call Forward Timeout), test VM U.")
-	c.append("exten=s,n,Set(vmu=${DB(VMU/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(vmu=${DB(VMU/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${vmu}" != ""]?vmu)')
 	c.append("exten=s,n,Goto(hangup)")
 	c.append(";")
 	c.append("; Dial result was 'busy'")
-	c.append("exten=s,MainDial+101(busy),Set(fw_ext=${DB(CFBS/${ARG5}/${ARG4})})")
+	c.append("exten=s,MainDial+101(busy),Set(fw_ext=${DB(CFBS/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append('exten=s,n,GotoIf($["{CDR(intrunk)}" = ""]?cfbsend)')
-	c.append("exten=s,n,Set(fw_ext=${DB(CFBS-TRUNK/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(fw_ext=${DB(CFBS-TRUNK/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append("exten=s,n(cfbsend),NoOp()")
 	c.append(";")
 	c.append("; no CFBS (Call Forward Busy), test VM Busy")
-	c.append("exten=s,n,Set(vmbs=${DB(VMBS/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(vmbs=${DB(VMBS/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${vmbs}" != ""]?vmbs)')
 	c.append("exten=s,n,Answer()")
 	c.append("exten=s,n,Playtones(busy)")
@@ -246,10 +246,10 @@
 	c.append("exten=s,n(fw),Goto(${ARG2},${fw_ext},1)")
 	c.append(";")
 	c.append('exten=s,n(vmu),Set(vmopt=u)')
-	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG4}@${ARG5})")
+	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG3}@${ARG4})")
 	c.append(";")
 	c.append('exten=s,n(vmbs),Set(vmopt=b)')
-	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG4}@${ARG5})")
+	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG3}@${ARG4})")
 	c.append(";")
 	c.append("exten=s,n(hangup),Hangup()")
 	c.append(";")

Modified: trunk/cfg_app_callfw.py
===================================================================
--- trunk/cfg_app_callfw.py	2007-01-16 22:44:01 UTC (rev 567)
+++ trunk/cfg_app_callfw.py	2007-01-19 00:16:38 UTC (rev 568)
@@ -51,22 +51,31 @@
 		    needModule("app_devstate")
 		c = AstConf("extensions.conf")
 		c.setSection(self.pbx)
-		c.appendExten("_%sX." % self.set, "Answer()")
+		c.appendExten("_%s" % self.set, "Set(testcf=${DB(%s/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
+		c.appendExten("_%s" % self.set, 'GotoIf($["${testcf}" != ""]?switchoff)')	
+		c.appendExten("_%s" % self.set, "Set(lastnum=${DB(%s_LASTNUM/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
+		c.appendExten("_%s" % self.set, 'GotoIf($["${lastnum}" = ""]?nonumber)')
+		c.appendExten("_%s" % self.set, "Goto(%s,%s${lastnum},1)" % (self.pbx, self.set))
+		c.appendExten("_%s" % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="nonumber")
+		c.appendExten("_%s" % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="switchoff")
+		c.appendExten("_%s." % self.set, "Answer()")
 		if self.toggle:
-			c.appendExten("_%sX." % self.set, "Set(testcf=${DB(%s/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
-			c.appendExten("_%sX." % self.set, 'GotoIf($["${testcf}" = ""]?:switchoff)')
-		c.appendExten("_%sX." % self.set, "Set(DB(%s/%s/${CALLERIDNUM})=${EXTEN:%d})" % (self.type, self.pbx,len(self.set)))
+			c.appendExten("_%s." % self.set, "Set(testcf=${DB(%s/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
+			c.appendExten("_%s." % self.set, 'GotoIf($["${testcf}" != ""]?switchoff)')	
+		c.appendExten("_%s." % self.set, "Set(DB(%s/%s/${CALLERIDNUM})=${EXTEN:%d})" % (self.type, self.pbx,len(self.set)))
+		c.appendExten("_%s." % self.set, "Set(DB(%s_LASTNUM/%s/${CALLERIDNUM})=${EXTEN:%d})" % (self.type, self.pbx,len(self.set)))
 		if self.devstateprefix:
-			c.appendExten("_%sX." % self.set, "Devstate(%s_%s_${CALLERIDNUM},2)" % (self.type.lower(), self.pbx))
+			c.appendExten("_%s." % self.set, "Devstate(%s_%s_${CALLERIDNUM},2)" % (self.type.lower(), self.pbx))
 		if self.type == "CFIM":
-			c.appendExten("_%sX." % self.set, "Playback(call-fwd-unconditional)")
+			c.appendExten("_%s." % self.set, "Playback(call-fwd-unconditional)")
 		elif self.type == "CFTO":
-			c.appendExten("_%sX." % self.set, "Playback(call-fwd-no-ans)")
+			c.appendExten("_%s." % self.set, "Playback(call-fwd-no-ans)")
 		else:
-			c.appendExten("_%sX." % self.set, "Playback(call-fwd-on-busy)")
-		c.appendExten("_%sX." % self.set, "Wait(1)")
-		c.appendExten("_%sX." % self.set, "Hangup")
-		c.appendExten("_%sX." % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="switchoff")
+			c.appendExten("_%s." % self.set, "Playback(call-fwd-on-busy)")
+		c.appendExten("_%s." % self.set, "Wait(1)")
+		c.appendExten("_%s." % self.set, "Hangup")
+		c.appendExten("_%s." % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="switchoff")
+
 		c.appendExten("%s" % self.ext, "Answer()")
 		c.appendExten("%s" % self.ext, "DBdel(%s/%s/${CALLERIDNUM})" % (self.type, self.pbx))
 		if self.devstateprefix:

Modified: trunk/cfg_phone_epygi.py
===================================================================
--- trunk/cfg_phone_epygi.py	2007-01-16 22:44:01 UTC (rev 567)
+++ trunk/cfg_phone_epygi.py	2007-01-19 00:16:38 UTC (rev 568)
@@ -108,11 +108,6 @@
 					type="label",
 					len=6),
 
-			VarType("usevm",
-					title=_("Use voicemail"),
-					type="bool",
-					optional=True),
-
 			VarType("usemwi",
 					title=_("Signal waiting mail"),
 					type="bool",
@@ -299,7 +294,7 @@
 		extensions = AstConf("extensions.conf")
 		extensions.setSection(self.pbx)
 		if self.ext:
-			extensions.appendExten(self.ext, "Macro(dial-std-exten,%s/%s@%s:5060,out-%s,%d,%s,%s)" % (self.technology,self.name,self.gw,self.name,int(self.usevm),self.pbx,self.ext))
+			extensions.appendExten(self.ext, "Macro(dial-std-exten,%s/%s@%s:5060,out-%s,%s,%s)" % (self.technology,self.name,self.gw,self.name,self.pbx,self.ext))
 
 		self.createVoicemailConfig(sip)
 		self.createOutgoingContext()

Modified: trunk/cfg_phone_iax.py
===================================================================
--- trunk/cfg_phone_iax.py	2007-01-16 22:44:01 UTC (rev 567)
+++ trunk/cfg_phone_iax.py	2007-01-19 00:16:38 UTC (rev 568)
@@ -100,11 +100,6 @@
 					title=_("Voicemail settings"),
 					type="label"),
 
-			VarType("usevm",
-					title=_("Use voicemail"),
-					type="bool",
-					optional=True),
-
 			VarType("usemwi",
 					title=_("Signal waiting mail"),
 					type="bool",

Modified: trunk/cfg_phone_mgcp.py
===================================================================
--- trunk/cfg_phone_mgcp.py	2007-01-16 22:44:01 UTC (rev 567)
+++ trunk/cfg_phone_mgcp.py	2007-01-19 00:16:38 UTC (rev 568)
@@ -109,11 +109,6 @@
 					type="label",
 					len=6),
 
-			VarType("usevm",
-					title=_("Use voicemail"),
-					type="bool",
-					optional=True),
-
 			VarType("usemwi",
 					title=_("Signal waiting mail"),
 					type="bool",

Modified: trunk/cfg_phone_sip.py
===================================================================
--- trunk/cfg_phone_sip.py	2007-01-16 22:44:01 UTC (rev 567)
+++ trunk/cfg_phone_sip.py	2007-01-19 00:16:38 UTC (rev 568)
@@ -109,11 +109,6 @@
 					type="label",
 					len=6),
 					
-			VarType("usevm",
-					title=_("Use voicemail"),
-					type="bool",
-					optional=True),
-			
 			VarType("usemwi",
 					title=_("Signal waiting mail"),
 					type="bool",

Modified: trunk/cfg_phone_zap.py
===================================================================
--- trunk/cfg_phone_zap.py	2007-01-16 22:44:01 UTC (rev 567)
+++ trunk/cfg_phone_zap.py	2007-01-19 00:16:38 UTC (rev 568)
@@ -107,11 +107,6 @@
 				type="label",
 				len=6),
 			
-			VarType("usevm",
-				title=_("Use voicemail"),
-				type="bool",
-				optional=True),
-				
 			VarType("usemwi",
 				title=_("Signal waiting mail"),
 				type="bool",
@@ -294,11 +289,10 @@
 
 
 	def createDialEntry(self, extensions, exten, pbx, ext):
-		ret = extensions.appendExten(exten, "Macro(dial-std-exten,%s/%s,out-%s,%d,%s,%s)" % (
+		ret = extensions.appendExten(exten, "Macro(dial-std-exten,%s/%s,out-%s,%s,%s)" % (
 			self.technology,
 			self.channels,
 			self.name,
-			int(self.usevm),
 			pbx,
 			ext)
 		      )

Modified: trunk/configlets.py
===================================================================
--- trunk/configlets.py	2007-01-16 22:44:01 UTC (rev 567)
+++ trunk/configlets.py	2007-01-19 00:16:38 UTC (rev 568)
@@ -976,11 +976,10 @@
 					v.hide = False
 
 	def createDialEntry(self, extensions, exten, pbx, ext):
-		ret = extensions.appendExten(exten, "Macro(dial-std-exten,%s/%s,out-%s,%d,%s,%s)" % (
+		ret = extensions.appendExten(exten, "Macro(dial-std-exten,%s/%s,out-%s,%s,%s)" % (
 			self.technology,
 			self.name,
 			self.name,
-			int(self.usevm),
 			ext,
 			pbx
 			))



From santiago at mail.berlios.de  Fri Jan 19 23:23:19 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Fri, 19 Jan 2007 23:23:19 +0100
Subject: [Destar-dev] r569 - trunk
Message-ID: <200701192223.l0JMNJSd017142@sheep.berlios.de>

Author: santiago
Date: 2007-01-19 23:23:18 +0100 (Fri, 19 Jan 2007)
New Revision: 569

Modified:
   trunk/CHANGELOG.txt
   trunk/cfg_ivr_autoatt.py
   trunk/manager.py
Log:
* Fixed hungup typo



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-19 00:16:38 UTC (rev 568)
+++ trunk/CHANGELOG.txt	2007-01-19 22:23:18 UTC (rev 569)
@@ -1,3 +1,6 @@
+2007-01-19:
+* Fixed hungup typo
+
 2007-01-15:
 * Fixed recording. Patch by Harald Holzer
 * dont add modules to modules.conf, if they does not exists (Bug #9708). Patch by Harald Holzer

Modified: trunk/cfg_ivr_autoatt.py
===================================================================
--- trunk/cfg_ivr_autoatt.py	2007-01-19 00:16:38 UTC (rev 568)
+++ trunk/cfg_ivr_autoatt.py	2007-01-19 22:23:18 UTC (rev 569)
@@ -171,10 +171,10 @@
 		s.appendExten("i","Goto(%s,%s,1)" % (pbx,self.ext))	
 		s.appendExten("t","ResetCDR(w)")
 		s.appendExten("t","NoCDR")
-		s.appendExten("t","Hungup")
+		s.appendExten("t","Hangup")
 		s.appendExten("T","ResetCDR(w)")
 		s.appendExten("T","NoCDR")
-		s.appendExten("T","Hungup")
+		s.appendExten("T","Hangup")
 	
 
 	def row(self):

Modified: trunk/manager.py
===================================================================
--- trunk/manager.py	2007-01-19 00:16:38 UTC (rev 568)
+++ trunk/manager.py	2007-01-19 22:23:18 UTC (rev 569)
@@ -344,7 +344,7 @@
 		# Callerid: <unknown>
 		# Uniqueid: 1091804181.95
 
-		# reap old, hungup channels :-)
+		# reap old, hangup channels :-)
 		global channels
 		reapchannel = normalizeChannel(dict.Channel)
 		toreap = []



From hholzer at mail.berlios.de  Sun Jan 21 22:53:54 2007
From: hholzer at mail.berlios.de (hholzer at mail.berlios.de)
Date: Sun, 21 Jan 2007 22:53:54 +0100
Subject: [Destar-dev] r570 - trunk
Message-ID: <200701212153.l0LLrs8w002716@sheep.berlios.de>

Author: hholzer
Date: 2007-01-21 22:53:52 +0100 (Sun, 21 Jan 2007)
New Revision: 570

Modified:
   trunk/backend.py
   trunk/cfg_dialout_normal.py
   trunk/cfg_opt_settings.py
Log:
added tapi support


Modified: trunk/backend.py
===================================================================
--- trunk/backend.py	2007-01-19 22:23:18 UTC (rev 569)
+++ trunk/backend.py	2007-01-21 21:53:52 UTC (rev 570)
@@ -116,6 +116,11 @@
 	* macros.inc
 	"""
 
+	tapisupport = False
+        for obj in configlets.configlet_tree:
+	        if obj.__class__.__name__ == 'CfgOptSettings':
+		        if obj.tapi:
+			        tapisupport = True
 
 	# Start with empty config files
 	configlets.asterisk_configfiles = []
@@ -198,9 +203,8 @@
 	c.append(";")
 	c.append("; get global dial options")
 	c.append("exten=s,n,Set(dopt=${DIAL_OPTIONS})")
-	#c.append('exten=s,n,GotoIf($["${dopt}" != ""]?doptEnd)')
-	#c.append("exten=s,n,Set(dopt=r)")
-	#c.append("exten=s,n(doptEnd),NoOp()")
+        if tapisupport:
+	        c.append("exten=s,n,Set(dopt=${dopt}M(tapi^${UNIQUEID}|${ARG1}))")
 	c.append(";")
 	c.append("; get early media")
 	c.append("exten=s,n,Set(emedia=${DB(EMEDIA/${ARG4}/${ARG3})})")
@@ -213,7 +217,13 @@
 	c.append("exten=s,n,Set(prng=${DB(PRNG/${ARG4}/${ARG3})})")
 	c.append(";")
 	c.append("; Dial")
-	c.append("exten=s,n(MainDial),Dial(${ARG1}${prng},${dsec},TtWw${dopt})")
+	c.append("exten=s,n(MainDial),NoOp()")
+        if tapisupport:
+                c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: LINE_NEWCALL ${ARG1})")
+                c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_OFFERING)")
+                c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: SET CALLERID ${CALLERID})")
+                c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: LINE_CALLINFO LINECALLINFOSTATE_CALLERID)")
+	c.append("exten=s,n,Dial(${ARG1}${prng},${dsec},TtWw${dopt})")
 	c.append(";")
 	c.append("; Dial result was 'timeout'")
 	c.append("exten=s,n(dialtimeout),Set(fw_ext=${DB(CFTO/${ARG4}/${ARG3})})")
@@ -254,7 +264,13 @@
 	c.append("exten=s,n(hangup),Hangup()")
 	c.append(";")
 	c.append("exten=i,0,Hangup")
+        if tapisupport:
+                c.append("exten=h,1,UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_IDLE)")
 
+                c.append("[macro-tapi];")
+                c.append("exten=s,1,UserEvent(TAPI|TAPIEVENT: [~${ARG1}&${ARG2}] LINE_CALLSTATE LINECALLSTATE_CONNECTED)")
+                c.append("exten=s,2,UserEvent(TAPI|TAPIEVENT: [~${ARG1}&!${ARG2}] LINE_CALLSTATE LINECALLSTATE_HANGUP)")
+
 	c.append(";")
 	c.append("; format: Macro(voicemail,<VoiceMail arguments>)")
 	c.append(";")

Modified: trunk/cfg_dialout_normal.py
===================================================================
--- trunk/cfg_dialout_normal.py	2007-01-19 22:23:18 UTC (rev 569)
+++ trunk/cfg_dialout_normal.py	2007-01-21 21:53:52 UTC (rev 570)
@@ -107,6 +107,11 @@
 		c.appendExten("s",'Set(options=%sL(%d000:10000))' % (opts,self.maxtime))
 		#TODO: add this trunks sorted by price and with a default one.
 		import configlets
+		tapisupport = False
+		for obj in configlets.configlet_tree:
+			if obj.__class__.__name__ == 'CfgOptSettings':
+				if obj.tapi:
+				    tapisupport = True
 		for obj in configlets.configlet_tree['Trunks']:
 			try:
 				if self.__getitem__("trunk_"+obj.name):
@@ -120,6 +125,12 @@
 						c.appendExten("s","Set(CALLERID(name)=%s)" % obj.clidnameout)
 					if obj.clidnumout:
 						c.appendExten("s","Set(CALLERID(number)=%s)" % obj.clidnumout)
+				        if tapisupport:
+					        c.appendExten("s","Set(chan=${CUT(CHANNEL,,1)})")
+					        c.appendExten("s","UserEvent(TAPI|TAPIEVENT: LINE_NEWCALL ${chan})")
+	    				        c.appendExten("s","UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_DIALTONE)")
+					        c.appendExten("s","UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_DIALING)")
+					        c.appendExten("s","UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_PROCEEDING)")
 					c.appendExten("s","Dial(%s,%d|${options})" % (obj.dial,self.ringtime))
 			except KeyError:
 				pass
@@ -131,4 +142,6 @@
 		c.appendExten("t","ResetCDR(w)")
 		c.appendExten("t","NoCDR")
 		c.appendExten("t","Hangup")
+		if tapisupport:
+		        c.appendExten("h","UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_IDLE)")
 

Modified: trunk/cfg_opt_settings.py
===================================================================
--- trunk/cfg_opt_settings.py	2007-01-19 22:23:18 UTC (rev 569)
+++ trunk/cfg_opt_settings.py	2007-01-21 21:53:52 UTC (rev 570)
@@ -326,6 +326,10 @@
 			hint=_("The language is used for voice prompts"),
 			len=10,
 			type="string"),
+		     VarType("tapi",
+			title=_("Tapi Support"),
+			type="bool",
+			default = True),
 		]
 
 	def createAsteriskConfig(self):
@@ -350,3 +354,6 @@
 		c.append("loadzone = %s" % zapcountry)
 		if self.country != 'us':
 			c.append("defaultzone = %s" % zapcountry)
+		if self.tapi:
+			needModule("app_userevent")
+			needModule("app_cut")



From santiago at mail.berlios.de  Mon Jan 22 00:18:47 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 22 Jan 2007 00:18:47 +0100
Subject: [Destar-dev] r571 - trunk
Message-ID: <200701212318.l0LNIlfp007429@sheep.berlios.de>

Author: santiago
Date: 2007-01-22 00:18:47 +0100 (Mon, 22 Jan 2007)
New Revision: 571

Modified:
   trunk/CHANGELOG.txt
Log:
missing changelog entry



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-21 21:53:52 UTC (rev 570)
+++ trunk/CHANGELOG.txt	2007-01-21 23:18:47 UTC (rev 571)
@@ -1,3 +1,6 @@
+2007-01-21:
+* added tapi support
+
 2007-01-19:
 * Fixed hungup typo
 



From santiago at mail.berlios.de  Mon Jan 22 00:58:56 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 22 Jan 2007 00:58:56 +0100
Subject: [Destar-dev] r572 - trunk
Message-ID: <200701212358.l0LNwu1b023188@sheep.berlios.de>

Author: santiago
Date: 2007-01-22 00:58:55 +0100 (Mon, 22 Jan 2007)
New Revision: 572

Modified:
   trunk/CHANGELOG.txt
   trunk/Templates.ptl
   trunk/destar
Log:
* Releasing and taging 0.2.2 version



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-21 23:18:47 UTC (rev 571)
+++ trunk/CHANGELOG.txt	2007-01-21 23:58:55 UTC (rev 572)
@@ -1,5 +1,6 @@
 2007-01-21:
 * added tapi support
+* Releasing and taging 0.2.2 version
 
 2007-01-19:
 * Fixed hungup typo

Modified: trunk/Templates.ptl
===================================================================
--- trunk/Templates.ptl	2007-01-21 23:18:47 UTC (rev 571)
+++ trunk/Templates.ptl	2007-01-21 23:58:55 UTC (rev 572)
@@ -24,7 +24,7 @@
 import os, sys, copy
 
 
-VERSION = 'DEVELOPMENT SNAPSHOT'
+VERSION = '0.2.2'
 
 
 class HtmlTable:

Modified: trunk/destar
===================================================================
--- trunk/destar	2007-01-21 23:18:47 UTC (rev 571)
+++ trunk/destar	2007-01-21 23:58:55 UTC (rev 572)
@@ -36,7 +36,7 @@
 be_daemon = False
 rport = 8080
 pid_file = '/var/run/destar.pid'
-VERSION = 'DEVELOPMENT SNAPSHOT'
+VERSION = '0.2.2'
 
 
 def print_version():



From santiago at mail.berlios.de  Mon Jan 22 01:01:21 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 22 Jan 2007 01:01:21 +0100
Subject: [Destar-dev] r573 - in tags: . 0.2.2
Message-ID: <200701220001.l0M01L7f027091@sheep.berlios.de>

Author: santiago
Date: 2007-01-22 01:01:19 +0100 (Mon, 22 Jan 2007)
New Revision: 573

Added:
   tags/0.2.2/
   tags/0.2.2/CHANGELOG.txt
   tags/0.2.2/Templates.ptl
   tags/0.2.2/destar
Removed:
   tags/0.2.2/CHANGELOG.txt
   tags/0.2.2/Templates.ptl
   tags/0.2.2/destar
Log:
0.2.2 version's tag



Copied: tags/0.2.2 (from rev 570, trunk)

Deleted: tags/0.2.2/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-21 21:53:52 UTC (rev 570)
+++ tags/0.2.2/CHANGELOG.txt	2007-01-22 00:01:19 UTC (rev 573)
@@ -1,886 +0,0 @@
-2007-01-19:
-* Fixed hungup typo
-
-2007-01-15:
-* Fixed recording. Patch by Harald Holzer
-* dont add modules to modules.conf, if they does not exists (Bug #9708). Patch by Harald Holzer
-* added sip tos option. Patch by Harald Holzer
-* added queue timeout. Patch by Harald Holzer
-* added callerid(number) option on incoming calls. Patch by Harald Holzer
-- added callerid(number) option on outcoming calls
-- added sip from domain option
-- added DID custom mapping option
-* some better defaults. Patch by Harald Holzer
-* add early media support in dialmacro. Patch by Harald Holzer
-- add parallel ringing support in dialmacro
-- add call forward only on trunk support in dialmacro
-* added sip pedantic option. Patch by Harald Holzer
-
-2006-12-29:
-* "updated" version
-* First attempt to detect if cdr_sqlite3_custom.so exists
-
-2006-12-13:
-* Added global nat option for sip  in cfg_opt_sip_network.py
-* Cosmetical changes in cfg_opt_sip_network.py
-
-2006-12-07:
-* Added queue (member) and hint config for non SIP phones.
-* Partial fix for bug #9633. Needs more test.
-
-2006-12-04:
-* REALLY Moved language=** from [general] to [channels] in zapata.conf. Thanks to tzafrir! :)
-* Create an entry in op_buttons.cfg for Queues.
-
-2006-12-03:
-* Added queues web form variables for iax, zap ad mgcp phones 
-* Fixed some html warnings.
-
-2006-11-21
-* Configlet to listen active calls with ChanSpy
-
-2006-11-16
-* Removed unnecessary global configlet_tree's in configlets.createIncomingContext()
-* Moved language=** from [general] to [channels] in zapata.conf. Thanks to tzafrir! :)
-
-2006-11-14:
-* Added email variable to the cfg_phone_* configlets. Closes bug #9462.
-* Set int type for the email pin.
-
-2006-11-11:
-* Updated fr.po. Thanks to Anthony Piron.
-
-2006-11-10:
-* configlets.py: added _X incoming context rule. Closes bug #9419.
-
-2006-11-09:
-* configlets.py: fixed incoming context rule.
-
-2006-11-05
-* page_stats_cdr.ptl: display records in DESC order.
-* page_stats_phone.ptl, page_stats_trunks.ptl, page_stats_dialouts.ptl:
-  Fixed current month
-  
-2006-10-31
-* Simple and ugly bug fix for #9281.
-
-2006-10-30:
-* panelutils: Insterting again startPanelDaemon and stopPanelDaemon,
-  cause ./destar was using the last one.
-* destar: starts panel when destar begins
-
-2006-10-26:
-* destar: updated VERSION variable
-
-2006-10-17:
-* Display op-panel restarting result
-* cfg_opt_oppanel: deleted duplicate and wrong variables
-* Some improvements in changing op-panel buttons size function
-* cfg_phone_queue.py: Allow to ring instead of playing MoH
-
-2006-10-14:
-* Allow changing the size of panel buttons
-
-2006-10-13
-* panelutils: using restart option instead of stop and the restart
-* First step to allow changing the size of op-panel buttons
-* No default dial group in the zap trunks
-* Cosmetic changes in cfg_opt_oppanel.py
-* Allow the incoming calls jump to a Virtual PBX
-* Cosmetic changes in cfg_trunk_*.py
-
-2006-10-10
-* Little bug fix in autoattendant
-* Removed unnecessary stuff
-
-2006-09-29
-* cfg_phone_zap.py: 
-- calleridnum was missed. Fixes bug #8943
-- callgroup config was done in /etc/zaptel.conf. Fixes bug #8944	
-
-2006-09-26
-* configlets: fixed undetectable little bug on dialout_secret writing.
-
-2006-09-24
-* backend.py: using writeAsteriskConfig() after createAsteriskConfig()
-  in reloadAsterisk. Fixes Bug #8777
-* Makefile: .mo file are removed in clean-languages:, not in clean:
-
-2006-09-23
-* Allows to load func_* modules 
-
-2006-09-20
-* StatsHelper.ptl and some page_stats_*.ptl, using getMonthnames() to 
-  allow translate strings in date html selects. Fixes bug #8842
-* StatsHelper.ptl: some pychart label weren't using unicode().
-* page_stats_cdr.ptl: new M_(message) function = _(str(message)). It really
-  fixes bug #8745
-
-2006-09-19
-* Added dependencies for the trunks. Fixed Bug #8836.
-* Added some translations.
-* Updated es.po header and added a missing translation.
-* Replaced _('string') by _(str('string')) on the [html] functions.
-* Fixed Bug #8745.
-
-2006-09-18
-* Added sort (default True) param to the getChoice function in backend.py
-* Bug #8257 closed.
-
-2006-09-15
-* Remove unnecessary imports.
-* Fixed bug #7951 checking the existence of a PBX.
-* Fixed bug #7952 replacing Monitor by MixMonitor in the queues.
-* Allow monitoring for the other phones types.
-
-2006-09-14
-* Use md5secret instead secret in sip.conf.
-* Ths SIP password is not optional.
-
-2006-09-13
-* The auth=md5 line in sip.conf is wrong. auth is the auth name, not the auth type.
-* Closes Bug #007917.
-
-2006-09-11
-* Wait time to answer and digit timeout were fixed on the code for the AutoAttendant. 
-
-2006-09-09
-* Languages stuff do not have to be re-created each time destar is installed.
-
-2006-09-07
-* StatsHelper.ptl: solved some problems with gettext and pychart. Fixes bug#8689
-* page_stats_cdr.ptl: Now it works with translations.
-
-2006-09-07
-* Meetme needs a timer
-* Applied patch from Debian on Makefile.
-
-2006-09-05
-* Reordered config menu, the real one didn't agree with each _q_menupos. 
-* sort() function for submenus was missed
-* Changes in Makefile to allow use it on FreeBSD. (And close bug #8004) It still needs some testing, 
-  I don't have a FreeBSD box.
-
-2006-09-04
-* Applied missing changes in Templates.ptl from patch #1090. Thanks to alenvers. Closes [ Bug #8014 ] _q_disc and _q_title translation not displayed. 
-* Added code to automate docbook documentation for configlets.
-* Fixed typo in cfg_opt_zap_trunk.py
-
-2006-08-28
-* Fixed bug on pbx dependencies not created for sip phones.
-* Make command-line-only backend mode work again using 'destar -b'
-* Updated man page.
-* Alternative solution to '[ Bug #7916 ] Menus don't work on IE', by modifying page_admin.ptl, page_user.ptl and page_owner.ptl to allow automatic listing of their submenus.
-* Fixed pbx displaying on cfg_quickdial_*
-* Included up to date destar_cfg.py example.
-* Added cfg_opt_codec.py, page_config_codecs.ptl to allow codec order selection for SIP and IAX. Depricates cfg_opt_sip_audio.py
-* Removed depricated function "useContext()".
-* Small changes on cdrutils.py, Makefile, page_user_info.ptl.
-* Added sqlite tip on page_config.ptl.
-* Fixed '[Bug #8576] From Debian: #384630 breaks related software', by not writing asterisk files until the user clics on "Save all changes".
-* Fixed '[Bug #8577] From Debian: #384632 writes wrong configuration files', by getting list of codecs and formats from ASTERISK_MODULES_DIR, and warning the user about missing needed codecs.
-* Also changed 'preloaded' modules writing format on modules.conf
-* Some code to generate basic documentation from configlets. Todo: create in docbook format.
-
-2006-08-25
-* Closed [ Bug #8010 ] tests.py needs the executable flags.
-* Applied [ Patch #1152 ] Mixmonitor outgoing calls, by juanmanuel.
-* Applied [ Patch #1193 ] Sometimes dialling the pound or number sign "#" is needed, by juanmanuel.
-* Better python/quixote versions checking to allow python2.3 users use quixote-1.0
-  (and make dasenjo happy).
-* Applied [ Patch #1279 ] customize private quickdial prefix, by hholzer.
-
-2006-08-09
-* Fixed media path issue in IAX phones.
-
-2006-08-08
-* Added hint support, applied patch #1291, by hholzer
-* Changed some field lengths in cfg_trunk_iax.py
-* Fixed bug #8171, applied patch #1232, by hholzer
-
-2006-08-06
-* Added isAddable() method in all cfg_phone_*.py
-* Fixed bug #8303, applied patch #1273, by hholzer
-* cfg_phone_ext.py: the extension in Goto() was missed 
-
-2006-08-01
-* Load app_cdr module (NoCDR() application) at startup
-
-2006-07-21
-* AstDB adjustments
-* Fixed bug #8147
-
-2006-07-20
-* configlets.py: fixed small bug on an unreferenced variable.
-* deleted static/page.html since it's not needed anymore.
-
-2006-07-10
-* DigitTimeout is deprecated on *-1.2
-
-2006-07-09
-* Fixed priority in macro-dial-std-exten
-
-2006-07-07
-* Macro dial-std-exten adjustments (asterisk 1.2 stuff)
-* Some DB typos fixed
-
-2006-06-29
-* Updated french translation. Applied patch #1171. by alenvers
-
-2006-06-23
-* Added reportlab pdf exporting example to misc/ thanks to Ian Esper.
-* configlets.py: fixed configlet_tree warning. Closes Bug #7980.
-* destar: fixed 'port' option bug.
-
-2006-06-22
-* Fixed little typo in cfg_phone_zap.py
-
-2006-06-21
-* Fixed conding in French and Spanish .po files. Successful changes need to be
-  confirmed. It will close #7950
-  TODO: check codings in whole destar
-
-2006-06-20
-* Applied patches from debian package. Closes patches #1144, #1145 and #1146.
-
-2006-06-17
-* Applied patch #1090: I18n cosmetics+Makefile(s) by alenvers.
-* Some little i18n changes in cdrutils
-* Changed AbsoluteTimeout by Set(TIMEOUT(absolute)=). Absolutetimeout is deprecated in *-1.2
-* Changed SetCID{Name,Num} by CALLERID, because they're deprecated in *-1.2.
-* Upgraded cfg_opt_music.py to new musiconhold.conf syntax.
-* Small fix to page_stats_phone.ptl and page_owner_pbx.ptl.
-* Updated basic documentation.
-* Added new features: cfg_opt_monitor.py and cfg_opt_transfer.py.
-* Applications DBGet and DBPut have been deprecated in favor of functions in asterisk-1.2.
-
-2006-06-16
-* Changed SetVar by Set. SetVar is deprecated in *-1.2
-
-2006-06-12
-* configlets.py: Fixed small bug on trunk redirection.
-* Small patch to CSS (still menus won't work on IE).
-
-2006-06-10
-* With the new menu and virtual pbx stuff, "Administrator" user becomes "Virtual PBX Administrator" (we gotta document the whole new thing).
-
-2006-06-09
-* configlets.py: Changed 'ext' comprobation for each pbx.
-* page_stats_*.ptl: Now we use the custom cdr fields (only page_stats_phone.ptl left). Closes bug #5964.
-* cfg_phone_sip.py: Increased 'ext' field size.
-* panelutils.py: changed panel path according to op-panel-0.26.
-
-2006-06-05
-* Renamed page_stats_callstats.ptl to page_stats_calls.ptl
-* Somehow 'disposition' field now has string values, instead of numeric ones.
-
-2006-05-31
-* Templates.ptl: Restored, fixed a wrong html title header
-* destar: Using gettext in (almost?) all the strings.
-* Use VERSION to put versioning information.
-
-2006-05-30
-* Changed menu distribution.
-* Modified to allow virtual pbx: cfg_app_directory, cfg_app_play, cg_app_echo, cfg_app_record, cfg_app_music.
-* Actual new custom CDR fields: intrunk, outtrunk, pbx and dialout.
-* A SIP phone depends on its pbx (other phones remaining).
-* Modified cfg_ivr_autoatt to virtual pbx scheme.
-* Added pbx dependencies on cfg_app_voicemail and cfg_app_meetme.
-* Added pbx dependencies on all cfg_app_*.
-* Added pbx dependencies on all cfg_phone_*.
-
-2006-05-29
-* Added initial cdr_sqlite3_custom.conf support.
-* Modified cfg_appmeetme and cfg_app_voicemail to allow virtual pbxs.
-
-2006-05-28
-* configlets.py, backend.py: removed some modules.
-* page_admin_cdr.ptl, cdrutils.py: started Sqlite3 transition.
-* page_admin_callsstats.ptl, StatsHelper.ptl: transition to sqlite3.
-* Added page_owner_cdr.ptl and page_owner.ptl to let people check CDR by Virtual PBX.
-
-2006-05-27
-* Fixed some typos.
-* Removed function useContext from configlets.py.
-* Now sip phones need to have an extension (it's safer this way).
-* Added cfg_app_callfw and cfg_app_dnd to virtual pbx boilerplate.
-* Deleted depricated contrib/destarctl file.
-* Moved TIPS.txt to misc.
-* Added cfg_opt_pbx.py and page_config_pbx.ptl to handle virtual pbx configlets.
-
-2006-05-26
-* Final changes to initial new style.
-** Added virtual/hosted pbx feature.
-	- Changed "phones" context to "pbx-name" context.
-	- Modified macro-dial-std-exten to support several pbx.
-	- Modified all configlet main classes to allow virtual pbxs.
-	- Applied new scheme to cfg_phone_sip.py (other phones are pending).
-	- Applied new scheme to cfg_opt_did.py (other opts are pending).
-
-2006-05-25
-* Deleted some unused/not-supported-anymore files from misc directory.
-* Added debian init.d file on misc/debian.
-* backend.py: Updated VoiceMail2 to newer VoiceMail.
-* Shiny new looking style, thanks to Avatar Ltd. (TODO: test with several browsers).
-* Fixed path on language.py.
-* Fixed quixote version message.
-
-2006-05-24
-* Applied Patch #1073, thanks to Anthony:
-	- Better language support, by user prefers.
-	- Unittest for translations.
-* Destar checks for quixote >= 1.2 and < 2.0. Closing Bug #7314.
-* Added first french l10n version, fr.po (Patch #1042). Thanks to Anthony.
-* Using xgettext instead of pygettext in Makefile. Closing Bug #7425. Thanks to Anthony.
-
-2006-05-03:
-* ConfigHelper.ptl: fixed bug with renaming configlets with dynamic dependencies
-* Zap phone group is optional 
-
-2006-04-27:
-* configlets.py: fixed bug with Cfg.renameDependencies()
-
-2006-04-24
-* configlets.py: fixed rename line
-* panelutils.py: fixed trunk section name
-* cfg_phone_*.py: phones depends on the dialout_* vars
-
-2006-04-20
-* cfg_dialout_normal.py: added support for dynamically generated dependencies. This is for "trunk_*" like dependencies.
-
-2006-04-08
-* cfg_ivr_autoatt.py: this configlets depends on the moh, an ext and an ivr.
-
-2006-04-03
-*Merged changes from branches/performance-experimental to trunk ("Ave Maria, dame punteria" :P).
-
-2006-03-23
-* configlets.py: Changed spaces with tabs
-* configlets.py: Added DepType class
-* configlets.py: Replaced Dependency class with DependentObject
-* configlets.py: added dependet_objs to Cfg
-* configlets.py: added generic createDependencies() method to Cfg
-* ConfigHelper.ptl: showDependencies function from configletsForm now displays dependency description
-* cfg_opt_did.py: changed spaces with tabs and improved identation
-* cfg_opt_did.py: added Dependency Descriptors
-
-2006-03-17
-* ConfigHelper.ptl: Fixed bug with cascade delete button.
-* ConfigHelper.ptl: Fixed bug with dependencies types
-* configlets.py: Added Cfg.ClearDependencies method
-* configlets.py: Changed ConfigletTree.deleteConfiglet method
-
-2006-03-14
-*destar: added -r <port>|--port=<port> option on command line.
-*cfg_opt_zap_audio.py: Added some usefull default options.
-
-2006-03-5:
-* configlets.py: Added getFullDependencies() method to Cfg
-* configlets.py: Added hasDependencies() method to Cfg
-* ConfigHelper.ptl: Added showDependencie function to configletsForm
-
-2006-02-28
-*configlets.py: again receive 's' exten on CreateIncomingContext, added mail field for voicemail notifications.
-*backend.py: Added timeout to macro-voicemail.
-*cfg_phone_zap.py: updated createDialEntry.
-*cfg_opt_music.py: increased 'Directory' field lenght.
-*cfg_trunk_zap.py: fixed typo.
-*cfg_phone_sip.py: added mail field for voicemail notifications.
-*cfg_trunk_zappri.py: changed order of some parammeters, fixed error on panel button creation when several channels are specified.
-*cfg_opt_zap_audio.py: Added some usefull default options.
-
-2006-02-23
-*Added page_admin_phonestats.ptl: initial implementation for extension estatistics (still buggy).
-*Added misc/debian/cfg_opt_networking.py: debian specific network configuration.
-*Added cfg_phone_epygi.py: remote extension on a Quadro Epygi PBX.
-
-2006-02-19:
-* configlets.py: Cfg.__getattr__() method is back due to AttributeExceptions in VarListManager.updateTrunks()
-* configlets.py: added Cfg.updateDependencies() method
-* configlets.py: added Cfg.dependencies field
-* configlets.py: added Dependency Class
-* ConfigHelper.ptl: added dependency renaming in configletsForm().saveConfig()
-* cfg_opt_did.py: added createDependencies() method for testing.
-
-2006-02-16:
-* Fixed typo en configlets.py
-* configlets.py: fixed bug with duplecated dialout entries in VarListManager.updateDialouts() method
-* cfg_phone_iax.py, cfg_phone_sip.py, cfg_phone_mgcp.py, cfg_phone_queue.py, cfg_phone_zap.py, cfg_phone_ext.py: changed if varlist_manager.hasDialouts() > 0 with if varlist_manager.hasDialouts()
-
-2006-02-15:
-* cfg_dialout_normal.py, cfg_phone_iax.py, cfg_app_meetme.py, cfg_app_record.py, cfg_opt_sip_network.py, cfg_phone_ext.py, cfg_opt_voicemail.py, cfg_app_parking.py, cfg_opt_zap_trunk.py, cfg_app_quickdial_phone.py, cfg_opt_logger.py, cfg_app_dnd.py, cfg_app_conference.py, cfg_app_saytime.py, cfg_opt_pickup.py, cfg_trunk_capimsn.py, cfg_app_echo.py, cfg_phone_zap.py, misc/cfg_app_phraserecording.py, misc/cfg_app_aa.py, cfg_opt_rawcfg.py, cfg_ivr_autoatt.py, cfg_opt_music.py, cfg_trunk_fwdiax.py, cfg_app_voicemail.py, cfg_opt_settings.py, cfg_phone_sip.py, cfg_app_quickdial_global.py, cfg_opt_manager.pycfg_opt_sip_audio.py, cfg_trunk_capi.py, cfg_app_directory.py, cfg_app_play.py, cfg_app_milliwatt.py, cfg_ivr_raw.py, cfg_trunk_iaxtel.py, cfg_phone_queue.py, cfg_phone_mgcp.py, cfg_opt_did.py, cfg_opt_enum.py, cfg_opt_zappri.py, cfg_opt_zap_audio.py, cfg_opt_zap_phone.py, cfg_app_callfw.py: Added createVariables method
-* some bug fixes
-*Added Dial options so that when SetMusicOnHold is used, Dial is passed the 'm' option.
-
-2006-02-14:
-* cfg_dialgout_normal.py: fixed bug with isAddable method
-* configlets.py: a 'variables' creation is performed in Cfg constructor
-* cfg_opt_oppanel.py, cfg_trunk_iax.py, cfg_ivr_autoatt.py, cfg_app_music.py,  cfg_opt_user.py: added createVariables() method
-* backend.py: fixed bug with fixupConfiglets() fuctions and recreation of variables in VarListManager.
-
-2006-02-13
-*Applied patch sent by <juan.coronado at avatar.com.co> with some improvements. Closes #6389.
-*Fixed small but anoying bug on dialout timeout.
-* configlets.py: fixed bug in ConfigletTree.hasConfiglet() method.
-* configlets.py: Removed debugger break point in Cfg.createPythonConfig() method.
-* configlets.py: fixed bug in CfgTrunk.fixup() method.
-* backend.py: added fixupConfiglets() function again. This time fixupConfiglet is much faster than previous version. This fuction is used at loadPythonConfig() and createPythonConfig()
-* configlets.py: added hasConfiglet() method to ConfigletTree class. Removed  __getattr__() method form Cfg. fixup() method is back in CfgPhone, now is smaller and faster.
-* added createVariables() method to CfgPermDial, CfgPermDeny and CfgOptRtp classes.
-
-2006-02-07
-* Changed the metadata specification ('variables' list) from class definition to createVariables() method in all configlets
-
-2006-02-04
-* fixup() method has been removed from all configlets except from Cfg base class
-* configlets.py: VarListManager class has been added. This class will be used to store referential integrity functionality. VarListManager. This class also serves to improve performance avoiding repetitive loops arround configlets groups.
-* New method createVariables added to some configlets. This methods manages metadata information stored in the 'variables' field. Now the metadata creation and synchronization is separated: syncronization is performed via fixup() and metadata creation is performed via createVariables(). createConfiglets creates all 'variables' from zero.
-* WARNING. this changes are incomplete, some destar functionality is broken.
-
-2006-01-31
-* page_admin_callsstats.ptl, page_admin_dialoutsstats.ptl,  page_admin_trunksstats.ptl,
-  StatsHelper.ptl: fixed bug #6182.
-* Added a menu position to the pages about cdr and statistics
-
-2006-01-28
-* configlets.py fixed bug with ConfigletTree.getConfigletByName()
-* various fixups added.
-
-2006-01-27
-* Added useful prefix handling for dialouts :)
-
-2006-01-16
-* cfg_trunk_zappri.py: Changed channel attribute for channels.
-* Various bug fixes
-* configlets.py: A tree is now used to store configlets instead the old plain list. The class ConfigletTree is used for that purpose. Tree's branches represent groups.
-* backend.py: All the old config_entries references has been replaced by references to the new tree, configlet_tree. In the future many of this functions could be deleted, some are still in the code only as stub
-* All files with references to the config_entries list has been changed.	
-* All references to config_entries has been replaced by configlet_tree, the tree structure
-
-2006-01-14
-* cfg_trunk_zappri.py: Fixed wrong 'channels' instead of 'channel'.
-* backend.py: Fixed missing identation.
-
-2005-12-27
-* Added page_user_quickdiallist.ptl to show the global and private quick dial list.
-* cfg_phone_zap: Made zap group optional.
-
-2005-12-26
-* Removed backend.fixupConfiglets() from backend.py
-* Added __getattr__ method to Cfg class in configlets.py
-* Now each configlet will fixup it self in a "intelligent" way each time that an attribute is needed.
-* A LOT of performance improvement.
-
-2005-12-24
-* Added initial support for global and private quick dial lists.
-* page_admin_dialoutsstats.ptl: Fixed confusion between inbound and outbound.
-
-2005-12-22
-*cfg_phone_queue.py: fixed bug #5885: MoH fails in calls from PSTN placed directly on queues.
-*configlets.py: is recommended to use _X. instead of _.
-
-2005-12-19
-*backend.py: fixed bug on CFIM/CFBS, still needs more testing.
-* Added "CallerID" field on CDR form and results.
-
-2005-12-17
-* Added a title for new objects in each configlet to make a little 
-  improvement in i18n.
-
-2005-12-15
-*configlets: fixed Call Forwarding so an extension can only forward to the extensions it can call itself.
-*cfg_phone_zap: The default group was 1 :s.
-*cfg_opt_music: added 'custom' type.
-*page_admin_cdr: let cost be calculated from CDR account field set on dialouts.
-
-2005-12-09
-*cfg_trunk_sip: make registration optional.
-
-2005-12-04
-* configlets.py: redirect everything on incoming context, except the extensions defined on DIDs. Closes bug #5799.
-
-2005-12-02
-* page_main.ptl: shows the login form when the user has not logged in
-  in the main page.
-
-2005-11-30
-* configlets.py: reduce the effect of the parammeters limit avoiding to write the "False" values on the destar_cfg.py file. Closes bug: #5578
-
-2005-11-29
-* Applied patch#722 submitted by xed0 trough berlios site:
-	-Fix Trunk zappri
-	-Load of app_directory module
-* Applied patch sent by Francesco Crescioli:
-	-cfg_trunk_sip.py: use the hostname instead of the peer name
-	-cfg_dialout_normal.py, configlets.py: added prefix support.
-	-added cfg_opt_sip_network.py for some sip network options.
-* page_login display the login form when the user has typed an incorrect
-  username or password
-* page_user.ptl: Removed user menu entry when the user has not logged in 
-
-2005-11-20
-* Templates.ptl: Uses XHTML Transitional instead of Strict. Closes bug: #5590
-* page_admin_cdr.ptl, cdrutils,py: use deferred translations with N_() to allow 
-translations in the call details. Closes bug: #5692
-
-2005-11-15
-* Added Dialouts and Trunks graphical reports thanks to Ceronman.
-
-2005-11-13
-* Updated INSTALL.txt
-
-2005-11-09
-* Added an initial spanish translation PO file
-
-2005-11-07
-* Updated README.txt
-* CHANGELOG.txt, destar: added notes about other project contributors.
-* Updated TODO.txt
-
-2005-11-05
-* Statistics Patch from Manuel Alejandro Cer?n applied. It implements some
-  graphic statistics reports, generated with PyChart 
-  http://home.gna.org/pychart/
-* page_config_reload.py: added missing '<p></p>' tags.
-* Increased secret field size for all phones.
-* page_admin_pbxstate, page_user_state, misc/page_admin_systemstate: Added refreshing time of 10 seconds.
-* cfg_opt_voicemail.py: added email notification options.
-* configlets.py: removed german timezone for voicemail until a better handling of timezones, validate names with '-' or spaces.
-* manager.py: lesss output to reduce cpu load.
-
-2005-11-04
-* cfg_phone_queue.py: fixed typos, added "join" option.
-
-2005-10-29
-* cfg_ivr_autoatt.py: allow dial a digit to jump to operator's extension during
-the file playback.
-
-2005-10-28
-* cfg_trunk_zappbx.py: new zap trunk to call through a PBX
-* cfg_phone_zap.py: typo fixed
-* backend.py: little bug fixed
-* Fixed a problem with the inbounds calls of zap and sip trunks
-
-2005-10-24
-* cfg_trunk_iax.py: Oops, Fixed missing 'secret' field.
-
-2005-10-22
-* Rewrited all op-panel integration to make it more usable and cleaner:
-	- Added cfg_opt_oppanel.py: a configlet to manage the panel configuration.
-	- Now panel html files are not copied but symlinked.
-	- Tested with original tarball and with the .deb package I'm working on.
-	- Initial configuration must be made on panelutils.py and Makefile to make this work.
-	- TODO: make more tests of panel integration and document configuration steps.
-* cfg_opt_manager.py,ConfigHelper.ptl: fixed little bug regarding optional "mchoice" widget.
-
-2005-10-20
-* Fixed some XHTML warnings.
-* page_admin_cdr.ptl: Fixed bug when showing cost of calls.
-* Fixed phone authentication bugs (password can be phone secret or voicemail pin and don't show 'login' option if user type is "User").
-* Global interface cleaning of "future plans" messages (Redirect to wiki pages instead).
-* Added '<p></p>' tags to several messages that didn't have them.
-* Made some other html improvements (e.g. table headers).
-* Added cfg_opt_zappri.py,cfg_trunk_zappri.py: initial support for zap pri trunks.
-
-2005-10-19
-* cfg_trunk_iax.py: improved authentication part. 
-* Added initial support for call queues.
-* cfg_opt_rawcfg.py: little change to let some fields be bigger.
-* backend.py: make sure the destar_cfg.py file gets updated before writing config files.
-* Improved cfg_ivr_autoatt.py with playback pause and timed jump to ivr.
-* page_user_settings.ptl,cfg_app_callfw.py: modified a bit the way features are stored on astdb (This needs more testing).
-* Show cost of calls based on "accountcode" field of cdr. This field is filled depending on the price per minute of every trunk/dialout. The field is not meant for that, but this is an aproach to tarification.
-
-2005-10-18
-* cfg_dialout_normal.py: validate trunk_price
-
-2005-10-12
-* cfg_trunk_iax.py: changes based on several tests with two asterisk/destar machines.
-
-2005-09-26
-* Changed config menu order. patch from santiago.
-* Makefile: little change to allow all developers make a release easier.
-
-2005-09-23
-* Big change: created class CfgIVR, changed cfg_opt_autoatt.py to cfg_ivr_autoatt and added cfg_ivr_raw.py since many people could have a weird custom auto-attendant and we want to use it on other parts of the program.
-* Changed DID's to work with new trunk and auto-attendant scheme. Now we can declare DID's per trunk and route then to a phone or auto-attendant.
-* Improved cfg_phone_ext.py
-* page_logout.ptl: don't let the programmer user logout (TODO: hide 'logout' on the menu).
-
-2005-09-21
-* Fixed bug on cfg_dialout_normal.py and configlets.py related to a GotoIf command.
-* cfg_phone_sip.py: force a well formed caller-id. 
-
-2005-09-05
-* Changed applications context from "default" to "apps".
-* Added cfg_opt_pickup.py to set pickup extension
-* Added cfg_app_callfw.py to set call forwarding
-* Added cfg_app_dnd.py to set 'do not disturb'
-* Made some improvements on several cfg_app_*
-* cfg_phone_sip.py, cfg_phone_iax.py: Fixed typo.
-* paneltils.py: fixed and added some buttons
-
-2005-09-02
-* Improved some code of cfg_trunks with inheritance.
-* Improved page_logout.ptl behavior a bit.
-* Improved some code of cfg_phones with inheritance.
-* Added support for gsm, g729 and g723.1 codecs in sip audio options
-
-2005-09-01
-* cfg_dialout_normal.py: Fixed wrong Goto
-* configlets.py: continued support for auto-attendants on CfgTrunk, cfg_trunk_zap, iax and sip.
-* Changed page_user_pbxstate.ptl to page_admin_pbxstate.ptl for usability reasons
-* Changed writing concept: now asterisk files are written with every little change
-* Changed page_config_write.ptl to page_config_viewconf.ptl. Now the backups are created without asking.
-* "Standardized" common options in the phones, they appear in the same order
-* Added dialout support for iax, zap and mgcp phones
-* "notransfer" iax option is wrote in the asterisk config files
-
-2005-08-25
-* Added misc/page_admin_systemstatus.ptl to show cpu load, memory info, etc.
-* fixed a missing 'Programmer' user type on page_user.ptl and page_user_info.ptl
-
-2005-08-23
-* Added 'new' and 'old' voicemail messages on page_user_state.ptl 
-
-2005-08-22
-* Added a message when there is nothing to write (empty destar_cfg.py)
-* Added a warning message if there is not destar_cfg.py
-* Re-added "Phone Features or Settings" by migrating old code from UserUI.ptl and UserPage.ptl to page_user_settings.ptl, and added options to change voicemail pin and extension password.
-* Changed page_login password from StringWidget to Passwordwidget.
-* Re-added "Phone State" by migrating old code from UserUI.ptl and UserPage.ptl to page_user_state.ptl
-
-2005-08-19
-* Added "enable time restriction" option to cfg_phone_sip 
-* cfg_opt_logger.py: fixed the facility's single_select 
-
-2005-08-18
-* Added initial support for radio-buttons
-* Added initial support for:
-  - auto-attendants
-  - dialout-entries
-
-2005-04-28
-* some CDR improvement
-
-2005-04-04
-
-* Big infrastructural change. Basically, we will have one page_*.ptl file
-  for each generated page. In main_page.ptl became quite complex because of
-  all sorts of RTTI-voodoo to Pythons dictionary that I now do. But the
-  other page_*.ptl files are now usually much simpler.
-  * makes *Page.ptl and *UI.ptl obsolete
-  * allows the navition menu to be automatically generated
-* beefed up the configuration tips, e.g. with hints about config file
-  writability
-* move config file backup into it's own page_config_backup.ptl
-
-2005-03-17
-
-* beginnings of fxo/fxs support (e.g. for TDM400P)
-
-2005-03-10
-
-* fix callerid
-
-2005-02-17
-
-* changed the encoding to UTF-8, change HTML a bit so that it is nearer to
-  HTML-4.0.1-strict conformance.
-
-2005-02-04
-
-* beginning of Flash Operator Panel integration
-
-2005-01-27
-
-* some more CDR code
-
-2004-09-02
-
-* added cfg_opt_rawcfg, to allow arbitrary config file snippets
-* removed l_amaflags and l_disposition from cdrutils.py, this will
-  make it easier later to have different database backends
-
-2004-08-19
-
-* enabled parking app
-* fixed layout with integer-widgets
-* added checks to load module option, record- and playback app
-* added format options to playback app
-* updated cfg_opt_rtp.py while writing http://openfacts.berlios.de/index-en.phtml?title=DeStarConfiglets
-* don't ask zaptel.conf to be backed up
-* make all 4 configuration tips appear after a fresh install
-
-2004-08-18
-
-* moved development to http://developer.berlios.de/projects/destar/
-* the dialplan is now much simpler
-* fixed cfg_line_iaxtrunk.py, it does no longer break
-* homogenized display of telco lines
-* added multiple incoming MSN capability to ISDN over CAPI
-* one MSN can only be assigned once
-* put functionality into User -> Phone settings
-
-2004-08-16
-
-* fixed tab/whitespace fixed config file creation for IAX voicemailbox
-* added notransfer to CfgPhoneIAX, delete canreinvite from the same
-* don't return None menu if there is no CDR
-* backend.py: make getConfiglet known in configlets.py, so that configlets can use it, too
-* cfg_line_fwdiax.py: added default name, don't use hard-coded SIP technology
-* ConfigUI.py: bug fix
-* don't break if pysqlite is there, but no cdr.db
-
-2004-08-13
-
-* finished login/logout capability
-* different default configuration
-* added configuration tips for first-time starters
-* backend.countConfiglets() can now count specific object types
-* new configlets.generatePassword() 'function' (callable class)
-* nicer cfg_opt_manager.py, generate secure passwords
-* removed or disabled some unfinished configlets
-* again fiddled with the CSS
-
-
-2004-08-12
-
-* added CfgOptUser as well as beginnings of session object
-  with auto-login-based-on-ip-feature
-* added logout code (login has to be done via auto-login feature
-  so far)
-* moved UI logic for the user page into ui/User.ptl
-* Admin.ptl and Users.ptl print some of the TODO-items as teasers :-)
-* incorporated Medusa into the code base
-* fixed bug in the menu calculation, multi-choice widgets
-* allow configlets to be retrieved by their .name propery
-
-2004-08-09
-
-* fixed parking config
-* centralized channel state calculations
-* added Asterisk Status to User menu
-* added individual phone status to Asterisk Status
-
-
-2004-08-08
-
-* basic support for DND, CFIM, CFBS
-* virtual phones added, first one is CfgPhoneExt for additional extensions
-
-
-2004-08-06
-
-* manager.py now automatically reconnects when Asterisk does a restart
-* fixed bug when parsing event messages
-* allow setAttr to grow the html grid
-* add option for auto-refresh
-* again rewrote the manager interface
-* allow configlet.key = val
-* cfg_app_park now adds a self-parking extension
-* fixed up/down moving of Configlets
-* the backend now checks that we don't have two thingies with the same name
-  or extension
-* added cfg_app_saytime
-* got rid of my own Widget.py module, now we're back to original Quixote
-
-
-2004-08-05
-
-* even more changes to the layout :-)
-* fixed HTML layout of PBX state
-* got rid of manager.isconnected
-* manager does no longer hang for some seconds when Asterisk is down
-* manager re-connects if Asterisk get's up again
-* now the checkConfig() method of the configlets works
-
-
-2004-07-30
-
-* started to revamp basic template & CSS
-* dynamically generated left menu
-* fixed up&down buttons
-
-
-2004-07-26
-
-* always try to connect to the manager whenever the status page is called
-* added some phone pictures I'll use later
-
-
-2004-07-22
-
-* added name field to all Phones and all Lines, we need this for the
-  status box
-* added technology variable to all Lines
-* added channel() method to all Phones and Lines
-* added User.ptl
-* added HtmlTable based on PyHtmlTables into Templates
-* let Admin.ptl use the new cdrtools, limit display to the last 30 entries
-* hide context from phone forms
-* cdrutils.cdrSelect() -> cdrutils.select()
-* added manager.py and made it handle manager commands and events. For
-  the latter, you have to subclass ManagerClient and redefine handle_event()
-
-
-2004-07-20
-
-* added simple CDR display, still VERY crude, don't use it if you have
-  thousand of CDR records
-* fixed creation of manager.conf
-* new configlets.context_entries where I store all the used contexts, with
-  configlets.useContext() to add entries to it, usually in the fixup()
-  method
-* NeedModule -> needModule
-* store full path in instances of AsteriskConfigFile.fn
-* better function doc strings in backend.py
-* backup config files before overwriting if the config file is not from us
-* groupCount -> countConfiglets
-* fixUp -> fixup
-* CfgPhoneIax got voicemail settings as well, because they are now put into
-  CfgPhone as methods
-* CfgOptLogger got syslog abilities
-
-
-2004-07-19
-
-* beginnings of voicemail, already in CfgSipPhone
-* introducation of Cfg.fixup() to do post-load setup, e.g. only unhide the
-  DID entry in Phones if one of the Lines actually support DID
-* allow entries to be moved up and down
-* fixed writing into destar_cfg.py
-* fixed loading of destar_cfg.py, especially when the cfg file did not
-  define all configlet variables because it was written with an older
-  version of DeStar
-* niced up CfgOptLogger
-* CfgAppParking now uses features.conf as does Asterisk CVS
-
-
-2004-07-15
-
-* add delete and cancel button to forms
-* big restructure of code: we now have individual cfg_*.py
-  that are read dynamically, so you can drop in your own
-* backend.py is pretty much what asterisk.py used to be
-* beginnings of context/permission support
-* enhanced CfgLineCapi
-* better docs in the *.txt files
-* somewhat nicer forms
-
-
-2004-07-12
-
-* added Labels to forms
-* support for phone permissions (via Asterisk contexts)
-* support for disable phone numbers
-
-
-2004-07-09
-
-* you can now add & edit configurables
-* nicer layout for error messages in the form
-* disabled german translations for now
-* added preliminary sidemenu
-* now you can even write your configuration
-* new IaxPhone configurable

Copied: tags/0.2.2/CHANGELOG.txt (from rev 572, trunk/CHANGELOG.txt)

Deleted: tags/0.2.2/Templates.ptl
===================================================================
--- trunk/Templates.ptl	2007-01-21 21:53:52 UTC (rev 570)
+++ tags/0.2.2/Templates.ptl	2007-01-22 00:01:19 UTC (rev 573)
@@ -1,290 +0,0 @@
-# -*- coding: iso-latin-1 -*-
-#
-# Copyright (C) 2005 by Holger Schurig
-# 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-#
-
-
-from quixote.html import htmltext, htmlescape
-from quixote.publish import get_publisher, get_request
-from quixote.errors import AccessError
-import os, sys, copy
-
-
-VERSION = 'DEVELOPMENT SNAPSHOT'
-
-
-class HtmlTable:
-
-	class TwoDimensionalArray:
-		"""An automatically growing two-dimensional array, based on work from
-		http://www.pasko.net/PyHtmlTable/"""
-
-		def __init__(self, x=1, y=1, fill=''):
-			self.array        = []
-			self.maxX         = x
-			self.maxY         = y
-			self.defaultfill  = fill
-
-			for xi in range(x):
-				self.array.append([])
-				for yi in range(y):
-					self.array[xi].append(copy.copy(fill))
-
-		def addCol(self):
-			nrow = []
-			for f in range(self.maxX):
-				self.array[f].append(copy.copy(self.defaultfill))
-
-			self.maxY = self.maxY +1
-
-		def addRow(self):
-			nrow = []
-			for f in range(self.maxY):
-				nrow.append(copy.copy(self.defaultfill))
-			self.array.append( copy.copy(nrow) )
-			self.maxX = self.maxX +1
-
-		def get(self, x, y):
-			try:
-				return self.array[x][y]
-			except:
-				return None
-
-		def set(self, x, y, data):
-			if x >= self.maxX:
-				for i in range(self.maxX-1, x):
-					self.addRow()
-			if y >= self.maxY:
-				for i in range(self.maxY-1, y):
-					self.addCol()
-			self.array[x][y] = data
-
-
-	def __init__(self, rows, cols):
-		self.cells = self.TwoDimensionalArray(rows,cols)
-		self.attrs = self.TwoDimensionalArray(rows,cols, {})
-
-	def setCell(self, x, y, data):
-		self.cells.set(x, y, data)
-
-	def setAttr(self, x, y, **attr):
-		dict = self.attrs.get(x,y) or {}
-		dict.update(attr)
-		self.attrs.set(x,y, dict)
-
-	def setRowSpan(self, x,y, span):
-		self.setAttr(x,y, rowspan=span)
-		for i in range(y+1,y+span):
-			self.setAttr(x,i, __hide=True)
-
-	def setColSpan(self, x,y, span):
-		self.setAttr(x,y, colspan=span)
-		for i in range(x+1,x+span):
-			self.setAttr(i,y, __hide=True)
-
-	def getRow [html] (self, y):
-		a = []
-		a.append('<tr>\n')
-		for x in range(self.cells.maxX):
-			b = []
-			attr = self.attrs.get(x,y)
-			hide = False
-			elem = 'td'
-			#print "attr:", attr
-			if attr:
-				for k in attr:
-					if k == '__hide':
-						hide = True
-						break
-					if k == '__head':
-						elem = 'th'
-						continue
-					b.append('%s="%s"' % (k,attr[k]))
-				if hide: continue
-				if b: b.insert(0, '')
-			a.append('<%s%s>' % (elem, ' '.join(b)) )
-			a.append(self.cells.get(x,y) or '&nbsp;')
-			a.append('</%s>\n' % elem)
-		a.append('</tr>')
-		return a
-
-
-	def getRows(self):
-		a = []
-		for y in range(self.cells.maxY):
-			a.extend(self.getRow(y))
-		return a
-
-	def getHtml [html] (self, **attr):
-		a = []
-		for k in attr:
-			if k[0] == '_':
-				a.append('%s="%s"' % (k[1:],attr[k]))
-			else:
-				a.append('%s="%s"' % (k,attr[k]))
-		if a:
-			a.insert(0,'')
-		a = [ "<table%s>" % ' '.join(a) ]
-		a.append('<tbody>')
-		a.extend(self.getRows())
-		a.append('</tbody></table>')
-		return ''.join(a)
-
-
-
-
-# The script parameter should be a list of functions defining scripts
-# such as JavaScript.
-def header [html] (title, menu=None, refresh=None, scripts=None):
-
-	# Boilerplate
-  	'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n'
-   	'<html xmlns="http://www.w3.org/1999/xhtml">\n'
-   	'<head>\n'
-   	if refresh:
-   		'<meta http-equiv="Refresh" content="%d;" />\n' % refresh
-  	'<title>Asterisk/DeStar PBX :: %s</title>\n' % _(str(title))
-  	'<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />\n'
-  	'<style type="text/css" media="screen, tv, projection">\n'
-  	'	@import url("/static/css/general.css");\n' 
-  	'	@import url("/static/css/Menu.css");\n'
-  	'</style>\n'
-  	'<!--[if lte IE 6]>\n'
-  	'<style type="text/css" media="screen, tv, projection">\n'
-  	'	@import "/static/css/Menu4IE.css";\n'
-  	'	body { behavior:url("/static/css/ADxMenu.htc"); }\n'
-  	'</style>\n'
-  	'<![endif]-->\n'
- 
-	if scripts:
-		for sc in scripts:
-			sc()
-	
-	'</head>\n'
-	'<body>\n'
-	#'<body onload="window.resizeTo(800,600);">'
-
-
-	# Header
- 	'<div id="wrapper">\n'
- 	'	<div id="header">\n'
- 	'		<h1>DeStar/Asterisk PBX</h1>\n'
-
-	
-	# Side menu
-	# e[0]: priority, only needed for sorting, discarded
-	# e[1]: Textual link
-	# e[2]: link
-	# e[3]: submenu
- 	'<div id="menu" class="nav">\n'
- 	'<ul id=menuList class="adxm">\n'
- 	def showMenu [html] (menu, submenu=False):
-  		for e in menu:
- 			'<li>\n'
-  			if e[1]:
- 				if not submenu:
- 					'<a href="%s"><span>%s</span></a>\n' % (e[1],_(str(e[2])))
- 				else:
- 					'<a href="%s">%s</a>\n' % (e[1],_(str(e[2])))
-  			else:
-  				'<li>&nbsp;</li>\n'
-  			if e[3]:
- 				'<ul>\n'
- 				showMenu(e[3], True)
- 				'</ul>\n'
- 			'</li>\n'
-  	showMenu(getMenu())
- 	'</ul>\n'
-  	'</div>\n'
- 	'	</div>\n' #header
-  
-  
-  	# Content
- 	'<div id="mainContent">\n'
- 	'			<div id="contentNav">\n'
- 	'\n'			
- 	'			</div>\n'
-
-	if title:
-		'<h2 id="contentHeading">%s</h2>\n' % _(str(title))
-
-	
-def footer [html] ():
-	'</div>\n'
-	'<div id="footer">\n'
-	'	<p>De<em>Star</em> %s <br />\n' % VERSION
-	'	<a href="http://destar.berlios.de">http://destar.berlios.de</a></p>\n'
-	'</div>\n'
-
-	'</div>\n'
-
-	'</body>\n'
-	'</html>\n'
-
-
-def getMenu():
-	request = get_request()
-	path = request.environ['PATH_INFO']
-	path = path[1:].split('/')
-
-	stack = get_publisher().get_namespace_stack()
-
-	def calcMenu(root='', n=0):
-		m = []
-		try:
-			obj = stack[n]
-		except IndexError:
-			return
-		try:
-			prueba = obj._q_menu
-		except AttributeError:
-			return
-		for e in obj._q_menu:
-			if e._q_level>request.session.level:
-				continue
-			if e._q_level<0:
-				if e._q_title == _("Logout") and request.session.level == 4:
-	                                continue
-				if e._q_level<0:
-	                                if abs(e._q_level) <= request.session.level:			
-	                                	continue
-			submenu = []
-			if e._q_parent == sys.modules['page_main']:
-				for sub in e._q_menu:
-					parent_name = sub._q_parent.__name__[5:]
-					submenu.append( (sub._q_menupos, '/'.join([root,parent_name,sub._q_link]), sub._q_title, []) )
-			submenu.sort()
-
-			m.append( (e._q_menupos, '/'.join([root,e._q_link]), e._q_title, submenu) )
-		m.sort()
-		return m
-
-	m = calcMenu()
-	return m
-
-
-
-def errorpage [plain] (txt, menu=None):
-	header(htmltext(_('Error')), menu)
-	'<p>'
-	txt
-	'.</p>'
-	footer()
-
-
-def cantAccessPage():
-	raise AccessError(htmltext(_("You don't have access to this page")))

Copied: tags/0.2.2/Templates.ptl (from rev 572, trunk/Templates.ptl)

Deleted: tags/0.2.2/destar
===================================================================
--- trunk/destar	2007-01-21 21:53:52 UTC (rev 570)
+++ tags/0.2.2/destar	2007-01-22 00:01:19 UTC (rev 573)
@@ -1,143 +0,0 @@
-#!/usr/bin/env python
-# -*- coding: iso-latin-1 -*-
-#
-# Copyright (C) 2005 by Holger Schurig
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-#
-
-
-"""
-An HTTP handler for Medusa that publishes the Asterisk setup Quixote application
-"""
-
-# A simple HTTP server, using Medusa, that publishes a Quixote application,
-# based on medusa_http.py from Quixote
-
-
-
-import language
-language.setLanguage('en')
-
-import sys, getopt, panelutils
-import daemonize
-be_daemon = False
-rport = 8080
-pid_file = '/var/run/destar.pid'
-VERSION = 'DEVELOPMENT SNAPSHOT'
-
-
-def print_version():
-	print _("DeStar %s, Copyright (C) 2005 by Holger Schurig and contributors.\n\n"\
-	"DeStar comes with ABSOLUTELY NO WARRANTY. This is free software,\n"\
-	"you are welcome to redistribute it under certain conditions;\n"\
-	"see the included files GPL-2.txt and COPYRIGHT.txt\n") % VERSION
-	
-
-def print_usage():
-	program = "destar"
-	print _("DeStar: Asterisk Management web interface")
-	print
-	print _("Usage:")
-	print _("  %s [options]: normal execution") % program
-	print _("  %s -h|--help: print this text and exit peacefully") % program
-	print _("  %s -v|--version: only print version information") % program
-	print ""
-	print _("Options:")
-	print _("  -p <pid>  | --pid=<pid>: use <pid> to store the daemon's PID")
-	print _("  -d | --daemonize: run in the background")
-	print _("  -r <port> | --port=<port>: run on port <port> (default: 8080)")
-	print _("  -b | --backend: run on backend mode")
-
-
-try:
-	opts,args = getopt.getopt(sys.argv[1:],'dhpr:vb', 
-		['daemonize','help','pid=', 'port=', 'version', 'backend'])
-except getopt.GetoptError:
-	print _("DeStar: Command-line parsing error. Aborting.")
-	print_usage()
-	sys.exit(2)
-
-for opt,val in opts:
-	if opt in  ('-d', '--daemonize'):
-		be_daemon=True
-	if opt in  ('-h', '--help'):
-		print_usage()
-		sys.exit(0)
-	if opt in ('-p', '--pid'):
-		pid_file = val
-	if opt in ('-r', '--port'):
-		rport = val
-	if opt in ('-v', '--version'):
-		print_version()
-		sys.exit(0)
-	if opt in ('-b', '--backend'):
-		import backend
-		backend.loadPythonConfig()
-		backend.createPythonConfig()
-		backend.createAsteriskConfig()
-		backend.writeAsteriskConfig()
-		sys.exit(0)
-
-# Validate parameters to give better errors:
-try:
-	rport_num = int(rport)
-except ValueError:
-	print _("Error: rport (-r <num>/--port=<num> must be a number)")
-	print_usage()
-	sys.exit(2)
-
-print_version()
-
-
-# 'medusa' is a stand-alone web server
-import medusa
-
-# 'quixote' is a web application framework
-try:
-	import quixote
-	if sys.version[:3] < "2.4":
-		if quixote.__version__ < "1.0" or quixote.__version__ >= "2.0":
-			raise ImportError
-	else:
-		if quixote.__version__ < "1.2" or quixote.__version__ >= "2.0":
-			raise ImportError
-except ImportError:
-	print _("Error:"), _("please install Quixote > 1.2  and < 2.0")
-	import sys
-	sys.exit(1)
-
-# 'Publisher.py' contains our session management, 'page_main' contains
-# the start page.
-import Server, Publisher
-pub = Server.Server("page_main", port=int(rport), publisher=Publisher.DeStarPublisher)
-
-
-
-
-# only daemonize after binding to the port. This makes error handling saner
-if be_daemon:
-	quixote.config.DISPLAY_EXCEPTIONS = 'plain'
-	daemonize.daemonize(stdout='/var/log/asterisk/destar.log', stderr='/var/log/asterisk/destar.err', pidfile=pid_file)
-
-	if panelutils.isConfigured():
-		panelutils.startPanelDaemon()
-
-try:
-	pub.run()
-except KeyboardInterrupt:
-	if panelutils.isConfigured():
-		panelutils.stopPanelDaemon()
-	pass

Copied: tags/0.2.2/destar (from rev 572, trunk/destar)



From santiago at mail.berlios.de  Mon Jan 22 01:14:23 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 22 Jan 2007 01:14:23 +0100
Subject: [Destar-dev] r574 - web
Message-ID: <200701220014.l0M0ENZ5006914@sheep.berlios.de>

Author: santiago
Date: 2007-01-22 01:14:12 +0100 (Mon, 22 Jan 2007)
New Revision: 574

Modified:
   web/download.php
   web/home.php
Log:
0.2.2 web info



Modified: web/download.php
===================================================================
--- web/download.php	2007-01-22 00:01:19 UTC (rev 573)
+++ web/download.php	2007-01-22 00:14:12 UTC (rev 574)
@@ -1,15 +1,15 @@
 <h2 id="contentHeading">Download Area</h2>
 
-<h3>Destar v0.2.1, for Asterisk 1.2.X</h3>
+<h3>Destar v0.2.2, for Asterisk 1.2.X</h3>
 
 <h4>Tarball (.tgz) file</h4>
 
 <p>To see the <b>Software Requirements</b> of this release of DeStar, please look at the Installation Instructions that come on the sources.<p>
 
 <ul>
-<li>file: <a href="http://prdownload.berlios.de/destar/destar-0.2.1.tar.bz2">destar-0.2.1.tar.bz2</a> [<a href="https://developer.berlios.de/project/shownotes.php?release_id=11661">release notes</a>] or</li>
+<li>file: <a href="http://prdownload.berlios.de/destar/destar-0.2.2.tar.bz2">destar-0.2.2.tar.bz2</a> [<a href="https://developer.berlios.de/project/shownotes.php?release_id=11661">release notes</a>] or</li>
 
-<li>file: <a href="http://prdownload.berlios.de/destar/destar-0.2.1.tar.gz">destar-0.2.1.tar.gz</a> </li>
+<li>file: <a href="http://prdownload.berlios.de/destar/destar-0.2.2.tar.gz">destar-0.2.2.tar.gz</a> </li>
 </ul>
 
 <h4>Debian package</h4>
@@ -21,8 +21,8 @@
 
 <h4>Subversion Repository</h4>
 
-<p>SVN copy of the 0.2.1 version:</p>
-<p><i>svn checkout svn://svn.berlios.de/destar/tags/0.2.1</i></p>
+<p>SVN copy of the 0.2.2 version:</p>
+<p><i>svn checkout svn://svn.berlios.de/destar/tags/0.2.2</i></p>
 
 <p>To grab the last svn copy (development version):</p>
 <p><i>svn checkout svn://svn.berlios.de/destar/trunk</i></p>

Modified: web/home.php
===================================================================
--- web/home.php	2007-01-22 00:01:19 UTC (rev 573)
+++ web/home.php	2007-01-22 00:14:12 UTC (rev 574)
@@ -3,7 +3,7 @@
 <p>Destar is a web-based interface to manage the Asterisk PBX.</p>
 <p>It provides high-level abstraction of the Asterisk configuration.</p>
 
-<p><i>Download the latest version: <b><a href="/index.php?c=2">destar-0.2.1</a></b></i></p>
+<p><i>Download the latest version: <b><a href="/index.php?c=2">destar-0.2.2</a></b></i></p>
 
 <p>Versions 0.2.X contain many improvements over the 0.1 one:<br /> 
 <ul style="font-family: verdana;">   



From admin at berlios.de  Mon Jan 15 21:36:26 2007
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 15 Jan 2007 21:36:26 +0100 (CET)
Subject: [Destar-dev] [Feature #2812] MoH class for each virtual pbx
Message-ID: <200701152036.l0FKaQBn024445@unicorn.berlios.de>

Feature Request #2812, was updated on 2006-Oct-25 19:30
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=2812&group_id=2112

Category: None
Status: Open
Priority: 5
Summary: MoH class for each virtual pbx

By: hholzer
Date: 2007-Jan-15 21:36

Message:
Logged In: YES 
user_id=30128
Browser: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.4) Gecko/20060614 Fedora/1.5.0.4-1.2.fc5 Firefox/1.5.0.4 pango-text

moh class can be set per device in sip.conf, or with
SetMusicOnHold in the dialplan.


----------------------------------------------------------------------

By: santiago
Date: 2006-Oct-25 19:30

Message:
Logged In: YES 
user_id=13352
Browser: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.6) Gecko/20060728 Firefox/1.5.0.6 (Debian-1.5.dfsg+1.5.0.6-3)

Destar should allow to use a specific moh class in the
Dial cmd in each pbx.

----------------------------------------------------------------------
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=2812&group_id=2112


From admin at berlios.de  Mon Jan 15 21:38:46 2007
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 15 Jan 2007 21:38:46 +0100 (CET)
Subject: [Destar-dev] [Feature #2812] MoH class for each virtual pbx
Message-ID: <200701152038.l0FKckCl024665@unicorn.berlios.de>

Feature Request #2812, was updated on 2006-Oct-25 19:30
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=2812&group_id=2112

Category: None
Status: Open
Priority: 5
Summary: MoH class for each virtual pbx

By: hholzer
Date: 2007-Jan-15 21:38

Message:
Logged In: YES 
user_id=30128
Browser: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.4) Gecko/20060614 Fedora/1.5.0.4-1.2.fc5 Firefox/1.5.0.4 pango-text

moh class could be set per device in sip.conf, or with
SetMusicOnHold in the dialplan.

----------------------------------------------------------------------

By: santiago
Date: 2006-Oct-25 19:30

Message:
Logged In: YES 
user_id=13352
Browser: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.6) Gecko/20060728 Firefox/1.5.0.6 (Debian-1.5.dfsg+1.5.0.6-3)

Destar should allow to use a specific moh class in the
Dial cmd in each pbx.

----------------------------------------------------------------------
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=2812&group_id=2112


From admin at berlios.de  Mon Jan 15 21:39:46 2007
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 15 Jan 2007 21:39:46 +0100 (CET)
Subject: [Destar-dev] [Feature #3051] Devstate support for CF, VM
Message-ID: <200701152039.l0FKdk1B024781@unicorn.berlios.de>

Feature Request #3051, was updated on 2007-Jan-13 20:58
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=3051&group_id=2112

Category: None
Status: Open
Priority: 5
Summary: Devstate support for CF, VM

By: hholzer
Date: 2007-Jan-13 20:58

Message:
Logged In: YES 
user_id=30128
Browser: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.4) Gecko/20060614 Fedora/1.5.0.4-1.2.fc5 Firefox/1.5.0.4 pango-text

http://www.voip-info.org/wiki/index.php?page=Asterisk+cmd+BristuffDevstate

Devstate can be used to lighting a led on the phone,
when callforward or voicemail is active.

(i am currently working on this feature.)


----------------------------------------------------------------------
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=3051&group_id=2112


From admin at berlios.de  Sun Jan 21 00:15:21 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 21 Jan 2007 00:15:21 +0100 (CET)
Subject: [Destar-dev] [Feature #3052] make voicemail setting dynamic
Message-ID: <200701202315.l0KNFLMh006436@unicorn.berlios.de>

Feature Request #3052, was updated on 2007-Jan-13 21:33
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=3052&group_id=2112

Category: None
Status: Closed
Priority: 5
Summary: make voicemail setting dynamic

By: hholzer
Date: 2007-Jan-13 21:33

Message:
Logged In: YES 
user_id=30128
Browser: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.4) Gecko/20060614 Fedora/1.5.0.4-1.2.fc5 Firefox/1.5.0.4 pango-text

Currently VM is a static feature at the phone setting,
and would be hardcoded in the dialplan.

Some user want to change the behavior on their
extension at runtime, so it should be a dynamic feature.

DND does currently something like "VM immediate", and
for "VM on busy" or "VM on timeout" there is no option
to switch them off.

I think we should remove the "Use voicemail" at the
phone setting completely and add a global option if
voicemail config, for the phones should be generated or
not.
(Should be "Signal waiting mail" removed too ? Make it
sense to disable "Signal waiting indication" ? If not
it should be default on.)


----------------------------------------------------------------------
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=3052&group_id=2112


From admin at berlios.de  Sun Jan 21 00:17:26 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 21 Jan 2007 00:17:26 +0100 (CET)
Subject: [Destar-dev] [Feature #2406] Hint support
Message-ID: <200701202317.l0KNHQ34008840@unicorn.berlios.de>

Feature Request #2406, was updated on 2006-Jul-21 18:41
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=2406&group_id=2112

Category: None
Status: Closed
Priority: 5
Summary: Hint support

By: hholzer
Date: 2007-Jan-21 00:17

Message:
Logged In: YES 
user_id=30128
Browser: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.4) Gecko/20060614 Fedora/1.5.0.4-1.2.fc5 Firefox/1.5.0.4 pango-text

hints are generated for all phone extension.

----------------------------------------------------------------------

By: alerios
Date: 2006-Aug-25 19:17

Message:
Logged In: YES 
user_id=11067
Browser: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.7.13) Gecko/20060418 Firefox/1.0.8 (Ubuntu package 1.0.8)

Added for SIP on 2006-08-08 commit to trunk using the
related patch. The feature might still have to be added for
other channels.

----------------------------------------------------------------------
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=2406&group_id=2112


From admin at berlios.de  Sun Jan 21 00:18:02 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 21 Jan 2007 00:18:02 +0100 (CET)
Subject: [Destar-dev] [Feature #2406] Hint support
Message-ID: <200701202318.l0KNI2sk009546@unicorn.berlios.de>

Feature Request #2406, was updated on 2006-Jul-21 18:41
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=2406&group_id=2112

Category: None
Status: Closed
Priority: 5
Summary: Hint support

By: hholzer
Date: 2007-Jan-21 00:18

Message:
Logged In: YES 
user_id=30128
Browser: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.4) Gecko/20060614 Fedora/1.5.0.4-1.2.fc5 Firefox/1.5.0.4 pango-text

hints are generated for all phone extension.

----------------------------------------------------------------------

By: alerios
Date: 2006-Aug-25 19:17

Message:
Logged In: YES 
user_id=11067
Browser: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.7.13) Gecko/20060418 Firefox/1.0.8 (Ubuntu package 1.0.8)

Added for SIP on 2006-08-08 commit to trunk using the
related patch. The feature might still have to be added for
other channels.

----------------------------------------------------------------------
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=2406&group_id=2112


From admin at berlios.de  Sun Jan 21 23:01:46 2007
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 21 Jan 2007 23:01:46 +0100 (CET)
Subject: [Destar-dev] [Feature #3050] TAPI Support
Message-ID: <200701212201.l0LM1kvK018161@unicorn.berlios.de>

Feature Request #3050, was updated on 2007-Jan-13 20:50
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=3050&group_id=2112

Category: None
Status: Open
Priority: 5
Summary: TAPI Support

By: hholzer
Date: 2007-Jan-21 23:01

Message:
Logged In: YES 
user_id=30128
Browser: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.4) Gecko/20060614 Fedora/1.5.0.4-1.2.fc5 Firefox/1.5.0.4 pango-text

tapi support is now included in Rev 570.

outgoing dials work.

incoming calls are not handeld on my windows test pc, but
the userevents seems ok. it could be a windows driver
problem, i will recheck this later.



----------------------------------------------------------------------

By: hholzer
Date: 2007-Jan-13 20:50

Message:
Logged In: YES 
user_id=30128
Browser: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.4) Gecko/20060614 Fedora/1.5.0.4-1.2.fc5 Firefox/1.5.0.4 pango-text

Tapi support in Asterisk 1.2 needs some extra setup in
the dialplan
(Userevents).
See: http://www.kirkhamsystems.com/asttapi


----------------------------------------------------------------------
You can respond by visiting: 
http://developer.berlios.de/feature/?func=detailfeature&feature_id=3050&group_id=2112


From santiago at mail.berlios.de  Mon Jan 22 22:24:47 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 22 Jan 2007 22:24:47 +0100
Subject: [Destar-dev] r575 - branches/quixote2
Message-ID: <200701222124.l0MLOlZB006629@sheep.berlios.de>

Author: santiago
Date: 2007-01-22 22:24:46 +0100 (Mon, 22 Jan 2007)
New Revision: 575

Modified:
   branches/quixote2/CHANGELOG.txt
   branches/quixote2/backend.py
   branches/quixote2/cfg_app_callfw.py
   branches/quixote2/cfg_dialout_normal.py
   branches/quixote2/cfg_ivr_autoatt.py
   branches/quixote2/cfg_opt_settings.py
   branches/quixote2/cfg_phone_epygi.py
   branches/quixote2/cfg_phone_iax.py
   branches/quixote2/cfg_phone_mgcp.py
   branches/quixote2/cfg_phone_sip.py
   branches/quixote2/cfg_phone_zap.py
   branches/quixote2/configlets.py
   branches/quixote2/manager.py
Log:
* Merged last changes from trunk



Modified: branches/quixote2/CHANGELOG.txt
===================================================================
--- branches/quixote2/CHANGELOG.txt	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/CHANGELOG.txt	2007-01-22 21:24:46 UTC (rev 575)
@@ -1,3 +1,13 @@
+2007-01-22:
+* Merged last changes from trunk
+
+2007-01-21:
+* added tapi support
+* Releasing and taging 0.2.2 version
+
+2007-01-19:
+* Fixed hungup typo
+
 2007-01-16:
 * Merging quixote2 branch and trunk 
 

Modified: branches/quixote2/backend.py
===================================================================
--- branches/quixote2/backend.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/backend.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -116,6 +116,11 @@
 	* macros.inc
 	"""
 
+	tapisupport = False
+        for obj in configlets.configlet_tree:
+	        if obj.__class__.__name__ == 'CfgOptSettings':
+		        if obj.tapi:
+			        tapisupport = True
 
 	# Start with empty config files
 	configlets.asterisk_configfiles = []
@@ -174,70 +179,75 @@
 	c.append(";")
 	c.append("; Macro to dial a standard local extension")
 	c.append(";")
-	c.append("; format: Macro(stdexten,dest,voicebox 1/0,ext,pbx)")
+	c.append("; format: Macro(stdexten,dest,ext,pbx)")
 	c.append(";")
 	c.setSection("macro-dial-std-exten")
 	c.append(";")
 	c.append("; test for CFIM (Call Forwarding Immediate)")
-	c.append("exten=s,1,Set(fw_ext=${DB(CFIM/${ARG5}/${ARG4})})")
+	c.append("exten=s,1,Set(fw_ext=${DB(CFIM/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append(";")
 	c.append("; test for VMIM (VM Immediate)")
-	c.append("exten=s,n,Set(vmim=${DB(VMIM/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(vmim=${DB(VMIM/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${vmim}" != ""]?vmu)')
 	c.append(";")
 	c.append("; test for DND (Do Not Disturb)")
-	c.append("exten=s,n,Set(dnd=${DB(DND/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(dnd=${DB(DND/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${dnd}" != ""]?busy)')
 	c.append(";")
 	c.append("; get dial seconds")
-	c.append("exten=s,n,Set(dsec=${DB(DSEC/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(dsec=${DB(DSEC/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${dsec}" != ""]?dsecEnd)')
 	c.append("exten=s,n,Set(dsec=45)")
 	c.append("exten=s,n(dsecEnd),NoOp()")
 	c.append(";")
 	c.append("; get global dial options")
 	c.append("exten=s,n,Set(dopt=${DIAL_OPTIONS})")
-	#c.append('exten=s,n,GotoIf($["${dopt}" != ""]?doptEnd)')
-	#c.append("exten=s,n,Set(dopt=r)")
-	#c.append("exten=s,n(doptEnd),NoOp()")
+        if tapisupport:
+	        c.append("exten=s,n,Set(dopt=${dopt}M(tapi^${UNIQUEID}|${ARG1}))")
 	c.append(";")
 	c.append("; get early media")
-	c.append("exten=s,n,Set(emedia=${DB(EMEDIA/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(emedia=${DB(EMEDIA/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${emedia}" = ""]?emediaEnd)')
 	c.append("exten=s,n,Set(dopt=${dopt}m(${emedia}))")
 	c.append("exten=s,n,Answer()")
 	c.append("exten=s,n(emediaEnd),NoOp()")
 	c.append(";")
 	c.append("; parallel ringing")
-	c.append("exten=s,n,Set(prng=${DB(PRNG/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(prng=${DB(PRNG/${ARG4}/${ARG3})})")
 	c.append(";")
 	c.append("; Dial")
-	c.append("exten=s,n(MainDial),Dial(${ARG1}${prng},${dsec},TtWw${dopt})")
+	c.append("exten=s,n(MainDial),NoOp()")
+        if tapisupport:
+                c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: LINE_NEWCALL ${ARG1})")
+                c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_OFFERING)")
+                c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: SET CALLERID ${CALLERID})")
+                c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: LINE_CALLINFO LINECALLINFOSTATE_CALLERID)")
+	c.append("exten=s,n,Dial(${ARG1}${prng},${dsec},TtWw${dopt})")
 	c.append(";")
 	c.append("; Dial result was 'timeout'")
-	c.append("exten=s,n(dialtimeout),Set(fw_ext=${DB(CFTO/${ARG5}/${ARG4})})")
+	c.append("exten=s,n(dialtimeout),Set(fw_ext=${DB(CFTO/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append('exten=s,n,GotoIf($["{CDR(intrunk)}" = ""]?cftoend)')
-	c.append("exten=s,n,Set(fw_ext=${DB(CFTO-TRUNK/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(fw_ext=${DB(CFTO-TRUNK/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append("exten=s,n(cftoend),NoOp()")
 	c.append(";")
 	c.append("; no CFTO (Call Forward Timeout), test VM U.")
-	c.append("exten=s,n,Set(vmu=${DB(VMU/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(vmu=${DB(VMU/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${vmu}" != ""]?vmu)')
 	c.append("exten=s,n,Goto(hangup)")
 	c.append(";")
 	c.append("; Dial result was 'busy'")
-	c.append("exten=s,MainDial+101(busy),Set(fw_ext=${DB(CFBS/${ARG5}/${ARG4})})")
+	c.append("exten=s,MainDial+101(busy),Set(fw_ext=${DB(CFBS/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append('exten=s,n,GotoIf($["{CDR(intrunk)}" = ""]?cfbsend)')
-	c.append("exten=s,n,Set(fw_ext=${DB(CFBS-TRUNK/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(fw_ext=${DB(CFBS-TRUNK/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${fw_ext}" != ""]?fw)')
 	c.append("exten=s,n(cfbsend),NoOp()")
 	c.append(";")
 	c.append("; no CFBS (Call Forward Busy), test VM Busy")
-	c.append("exten=s,n,Set(vmbs=${DB(VMBS/${ARG5}/${ARG4})})")
+	c.append("exten=s,n,Set(vmbs=${DB(VMBS/${ARG4}/${ARG3})})")
 	c.append('exten=s,n,GotoIf($["${vmbs}" != ""]?vmbs)')
 	c.append("exten=s,n,Answer()")
 	c.append("exten=s,n,Playtones(busy)")
@@ -246,15 +256,21 @@
 	c.append("exten=s,n(fw),Goto(${ARG2},${fw_ext},1)")
 	c.append(";")
 	c.append('exten=s,n(vmu),Set(vmopt=u)')
-	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG4}@${ARG5})")
+	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG3}@${ARG4})")
 	c.append(";")
 	c.append('exten=s,n(vmbs),Set(vmopt=b)')
-	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG4}@${ARG5})")
+	c.append("exten=s,n,Macro(voicemail,${vmopt}${ARG3}@${ARG4})")
 	c.append(";")
 	c.append("exten=s,n(hangup),Hangup()")
 	c.append(";")
 	c.append("exten=i,0,Hangup")
+        if tapisupport:
+                c.append("exten=h,1,UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_IDLE)")
 
+                c.append("[macro-tapi];")
+                c.append("exten=s,1,UserEvent(TAPI|TAPIEVENT: [~${ARG1}&${ARG2}] LINE_CALLSTATE LINECALLSTATE_CONNECTED)")
+                c.append("exten=s,2,UserEvent(TAPI|TAPIEVENT: [~${ARG1}&!${ARG2}] LINE_CALLSTATE LINECALLSTATE_HANGUP)")
+
 	c.append(";")
 	c.append("; format: Macro(voicemail,<VoiceMail arguments>)")
 	c.append(";")

Modified: branches/quixote2/cfg_app_callfw.py
===================================================================
--- branches/quixote2/cfg_app_callfw.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/cfg_app_callfw.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -51,22 +51,31 @@
 		    needModule("app_devstate")
 		c = AstConf("extensions.conf")
 		c.setSection(self.pbx)
-		c.appendExten("_%sX." % self.set, "Answer()")
+		c.appendExten("_%s" % self.set, "Set(testcf=${DB(%s/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
+		c.appendExten("_%s" % self.set, 'GotoIf($["${testcf}" != ""]?switchoff)')	
+		c.appendExten("_%s" % self.set, "Set(lastnum=${DB(%s_LASTNUM/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
+		c.appendExten("_%s" % self.set, 'GotoIf($["${lastnum}" = ""]?nonumber)')
+		c.appendExten("_%s" % self.set, "Goto(%s,%s${lastnum},1)" % (self.pbx, self.set))
+		c.appendExten("_%s" % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="nonumber")
+		c.appendExten("_%s" % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="switchoff")
+		c.appendExten("_%s." % self.set, "Answer()")
 		if self.toggle:
-			c.appendExten("_%sX." % self.set, "Set(testcf=${DB(%s/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
-			c.appendExten("_%sX." % self.set, 'GotoIf($["${testcf}" = ""]?:switchoff)')
-		c.appendExten("_%sX." % self.set, "Set(DB(%s/%s/${CALLERIDNUM})=${EXTEN:%d})" % (self.type, self.pbx,len(self.set)))
+			c.appendExten("_%s." % self.set, "Set(testcf=${DB(%s/%s/${CALLERIDNUM})})" % (self.type, self.pbx))
+			c.appendExten("_%s." % self.set, 'GotoIf($["${testcf}" != ""]?switchoff)')	
+		c.appendExten("_%s." % self.set, "Set(DB(%s/%s/${CALLERIDNUM})=${EXTEN:%d})" % (self.type, self.pbx,len(self.set)))
+		c.appendExten("_%s." % self.set, "Set(DB(%s_LASTNUM/%s/${CALLERIDNUM})=${EXTEN:%d})" % (self.type, self.pbx,len(self.set)))
 		if self.devstateprefix:
-			c.appendExten("_%sX." % self.set, "Devstate(%s_%s_${CALLERIDNUM},2)" % (self.type.lower(), self.pbx))
+			c.appendExten("_%s." % self.set, "Devstate(%s_%s_${CALLERIDNUM},2)" % (self.type.lower(), self.pbx))
 		if self.type == "CFIM":
-			c.appendExten("_%sX." % self.set, "Playback(call-fwd-unconditional)")
+			c.appendExten("_%s." % self.set, "Playback(call-fwd-unconditional)")
 		elif self.type == "CFTO":
-			c.appendExten("_%sX." % self.set, "Playback(call-fwd-no-ans)")
+			c.appendExten("_%s." % self.set, "Playback(call-fwd-no-ans)")
 		else:
-			c.appendExten("_%sX." % self.set, "Playback(call-fwd-on-busy)")
-		c.appendExten("_%sX." % self.set, "Wait(1)")
-		c.appendExten("_%sX." % self.set, "Hangup")
-		c.appendExten("_%sX." % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="switchoff")
+			c.appendExten("_%s." % self.set, "Playback(call-fwd-on-busy)")
+		c.appendExten("_%s." % self.set, "Wait(1)")
+		c.appendExten("_%s." % self.set, "Hangup")
+		c.appendExten("_%s." % self.set, "Goto(%s,%s,1)" % (self.pbx, self.ext), label="switchoff")
+
 		c.appendExten("%s" % self.ext, "Answer()")
 		c.appendExten("%s" % self.ext, "DBdel(%s/%s/${CALLERIDNUM})" % (self.type, self.pbx))
 		if self.devstateprefix:

Modified: branches/quixote2/cfg_dialout_normal.py
===================================================================
--- branches/quixote2/cfg_dialout_normal.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/cfg_dialout_normal.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -107,6 +107,11 @@
 		c.appendExten("s",'Set(options=%sL(%d000:10000))' % (opts,self.maxtime))
 		#TODO: add this trunks sorted by price and with a default one.
 		import configlets
+		tapisupport = False
+		for obj in configlets.configlet_tree:
+			if obj.__class__.__name__ == 'CfgOptSettings':
+				if obj.tapi:
+				    tapisupport = True
 		for obj in configlets.configlet_tree['Trunks']:
 			try:
 				if self.__getitem__("trunk_"+obj.name):
@@ -120,6 +125,12 @@
 						c.appendExten("s","Set(CALLERID(name)=%s)" % obj.clidnameout)
 					if obj.clidnumout:
 						c.appendExten("s","Set(CALLERID(number)=%s)" % obj.clidnumout)
+				        if tapisupport:
+					        c.appendExten("s","Set(chan=${CUT(CHANNEL,,1)})")
+					        c.appendExten("s","UserEvent(TAPI|TAPIEVENT: LINE_NEWCALL ${chan})")
+	    				        c.appendExten("s","UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_DIALTONE)")
+					        c.appendExten("s","UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_DIALING)")
+					        c.appendExten("s","UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_PROCEEDING)")
 					c.appendExten("s","Dial(%s,%d|${options})" % (obj.dial,self.ringtime))
 			except KeyError:
 				pass
@@ -131,4 +142,6 @@
 		c.appendExten("t","ResetCDR(w)")
 		c.appendExten("t","NoCDR")
 		c.appendExten("t","Hangup")
+		if tapisupport:
+		        c.appendExten("h","UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_IDLE)")
 

Modified: branches/quixote2/cfg_ivr_autoatt.py
===================================================================
--- branches/quixote2/cfg_ivr_autoatt.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/cfg_ivr_autoatt.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -171,10 +171,10 @@
 		s.appendExten("i","Goto(%s,%s,1)" % (pbx,self.ext))	
 		s.appendExten("t","ResetCDR(w)")
 		s.appendExten("t","NoCDR")
-		s.appendExten("t","Hungup")
+		s.appendExten("t","Hangup")
 		s.appendExten("T","ResetCDR(w)")
 		s.appendExten("T","NoCDR")
-		s.appendExten("T","Hungup")
+		s.appendExten("T","Hangup")
 	
 
 	def row(self):

Modified: branches/quixote2/cfg_opt_settings.py
===================================================================
--- branches/quixote2/cfg_opt_settings.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/cfg_opt_settings.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -326,6 +326,10 @@
 			hint=_("The language is used for voice prompts"),
 			len=10,
 			type="string"),
+		     VarType("tapi",
+			title=_("Tapi Support"),
+			type="bool",
+			default = True),
 		]
 
 	def createAsteriskConfig(self):
@@ -350,3 +354,6 @@
 		c.append("loadzone = %s" % zapcountry)
 		if self.country != 'us':
 			c.append("defaultzone = %s" % zapcountry)
+		if self.tapi:
+			needModule("app_userevent")
+			needModule("app_cut")

Modified: branches/quixote2/cfg_phone_epygi.py
===================================================================
--- branches/quixote2/cfg_phone_epygi.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/cfg_phone_epygi.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -108,11 +108,6 @@
 					type="label",
 					len=6),
 
-			VarType("usevm",
-					title=_("Use voicemail"),
-					type="bool",
-					optional=True),
-
 			VarType("usemwi",
 					title=_("Signal waiting mail"),
 					type="bool",
@@ -299,7 +294,7 @@
 		extensions = AstConf("extensions.conf")
 		extensions.setSection(self.pbx)
 		if self.ext:
-			extensions.appendExten(self.ext, "Macro(dial-std-exten,%s/%s@%s:5060,out-%s,%d,%s,%s)" % (self.technology,self.name,self.gw,self.name,int(self.usevm),self.pbx,self.ext))
+			extensions.appendExten(self.ext, "Macro(dial-std-exten,%s/%s@%s:5060,out-%s,%s,%s)" % (self.technology,self.name,self.gw,self.name,self.pbx,self.ext))
 
 		self.createVoicemailConfig(sip)
 		self.createOutgoingContext()

Modified: branches/quixote2/cfg_phone_iax.py
===================================================================
--- branches/quixote2/cfg_phone_iax.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/cfg_phone_iax.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -100,11 +100,6 @@
 					title=_("Voicemail settings"),
 					type="label"),
 
-			VarType("usevm",
-					title=_("Use voicemail"),
-					type="bool",
-					optional=True),
-
 			VarType("usemwi",
 					title=_("Signal waiting mail"),
 					type="bool",

Modified: branches/quixote2/cfg_phone_mgcp.py
===================================================================
--- branches/quixote2/cfg_phone_mgcp.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/cfg_phone_mgcp.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -109,11 +109,6 @@
 					type="label",
 					len=6),
 
-			VarType("usevm",
-					title=_("Use voicemail"),
-					type="bool",
-					optional=True),
-
 			VarType("usemwi",
 					title=_("Signal waiting mail"),
 					type="bool",

Modified: branches/quixote2/cfg_phone_sip.py
===================================================================
--- branches/quixote2/cfg_phone_sip.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/cfg_phone_sip.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -109,11 +109,6 @@
 					type="label",
 					len=6),
 					
-			VarType("usevm",
-					title=_("Use voicemail"),
-					type="bool",
-					optional=True),
-			
 			VarType("usemwi",
 					title=_("Signal waiting mail"),
 					type="bool",

Modified: branches/quixote2/cfg_phone_zap.py
===================================================================
--- branches/quixote2/cfg_phone_zap.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/cfg_phone_zap.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -107,11 +107,6 @@
 				type="label",
 				len=6),
 			
-			VarType("usevm",
-				title=_("Use voicemail"),
-				type="bool",
-				optional=True),
-				
 			VarType("usemwi",
 				title=_("Signal waiting mail"),
 				type="bool",
@@ -294,11 +289,10 @@
 
 
 	def createDialEntry(self, extensions, exten, pbx, ext):
-		ret = extensions.appendExten(exten, "Macro(dial-std-exten,%s/%s,out-%s,%d,%s,%s)" % (
+		ret = extensions.appendExten(exten, "Macro(dial-std-exten,%s/%s,out-%s,%s,%s)" % (
 			self.technology,
 			self.channels,
 			self.name,
-			int(self.usevm),
 			pbx,
 			ext)
 		      )

Modified: branches/quixote2/configlets.py
===================================================================
--- branches/quixote2/configlets.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/configlets.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -976,11 +976,10 @@
 					v.hide = False
 
 	def createDialEntry(self, extensions, exten, pbx, ext):
-		ret = extensions.appendExten(exten, "Macro(dial-std-exten,%s/%s,out-%s,%d,%s,%s)" % (
+		ret = extensions.appendExten(exten, "Macro(dial-std-exten,%s/%s,out-%s,%s,%s)" % (
 			self.technology,
 			self.name,
 			self.name,
-			int(self.usevm),
 			ext,
 			pbx
 			))

Modified: branches/quixote2/manager.py
===================================================================
--- branches/quixote2/manager.py	2007-01-22 00:14:12 UTC (rev 574)
+++ branches/quixote2/manager.py	2007-01-22 21:24:46 UTC (rev 575)
@@ -344,7 +344,7 @@
 		# Callerid: <unknown>
 		# Uniqueid: 1091804181.95
 
-		# reap old, hungup channels :-)
+		# reap old, hangup channels :-)
 		global channels
 		reapchannel = normalizeChannel(dict.Channel)
 		toreap = []



From santiago at mail.berlios.de  Mon Jan 22 22:27:24 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 22 Jan 2007 22:27:24 +0100
Subject: [Destar-dev] r576 - branches
Message-ID: <200701222127.l0MLROhh007247@sheep.berlios.de>

Author: santiago
Date: 2007-01-22 22:27:23 +0100 (Mon, 22 Jan 2007)
New Revision: 576

Added:
   branches/0.2.X/
Log:
New branch for destar-0.2.x versions



Copied: branches/0.2.X (from rev 574, trunk)



From santiago at mail.berlios.de  Tue Jan 23 01:02:02 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Tue, 23 Jan 2007 01:02:02 +0100
Subject: [Destar-dev] r577 - trunk
Message-ID: <200701230002.l0N022D3004065@sheep.berlios.de>

Author: santiago
Date: 2007-01-23 01:01:51 +0100 (Tue, 23 Jan 2007)
New Revision: 577

Added:
   trunk/session.py
Modified:
   trunk/CHANGELOG.txt
   trunk/ConfigHelper.ptl
   trunk/Publisher.py
   trunk/Server.py
   trunk/StatsHelper.ptl
   trunk/Templates.ptl
   trunk/destar
   trunk/page_admin.ptl
   trunk/page_admin_backup.ptl
   trunk/page_admin_panel.ptl
   trunk/page_admin_pbxstate.ptl
   trunk/page_admin_reload.ptl
   trunk/page_admin_viewconf.ptl
   trunk/page_config.ptl
   trunk/page_config_add.ptl
   trunk/page_config_applications.ptl
   trunk/page_config_codecs.ptl
   trunk/page_config_dialout.ptl
   trunk/page_config_dids.ptl
   trunk/page_config_down.ptl
   trunk/page_config_edit.ptl
   trunk/page_config_ivrs.ptl
   trunk/page_config_options.ptl
   trunk/page_config_pbx.ptl
   trunk/page_config_phones.ptl
   trunk/page_config_trunks.ptl
   trunk/page_config_up.ptl
   trunk/page_config_users.ptl
   trunk/page_debug.ptl
   trunk/page_debug_values.ptl
   trunk/page_login.ptl
   trunk/page_logout.ptl
   trunk/page_main.ptl
   trunk/page_owner.ptl
   trunk/page_owner_cdr.ptl
   trunk/page_stats.ptl
   trunk/page_stats_calls.ptl
   trunk/page_stats_cdr.ptl
   trunk/page_stats_dialouts.ptl
   trunk/page_stats_phone.ptl
   trunk/page_stats_trunks.ptl
   trunk/page_user.ptl
   trunk/page_user_info.ptl
   trunk/page_user_quickdiallist.ptl
   trunk/page_user_settings.ptl
   trunk/page_user_state.ptl
Log:
Merged quixote2 branch into trunk



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/CHANGELOG.txt	2007-01-23 00:01:51 UTC (rev 577)
@@ -1,3 +1,6 @@
+2007-01-22:
+* Merged last changes from quixote2 branch into trunk
+
 2007-01-21:
 * added tapi support
 * Releasing and taging 0.2.2 version
@@ -5,6 +8,9 @@
 2007-01-19:
 * Fixed hungup typo
 
+2007-01-16:
+* Merging quixote2 branch and trunk 
+
 2007-01-15:
 * Fixed recording. Patch by Harald Holzer
 * dont add modules to modules.conf, if they does not exists (Bug #9708). Patch by Harald Holzer
@@ -20,6 +26,16 @@
 - add call forward only on trunk support in dialmacro
 * added sip pedantic option. Patch by Harald Holzer
 
+2007-01-13:
+* Deleted some debug prints.
+
+2006-12-28:
+* page_main and Templates: fixed menus displaying.
+* page_config_trunks.ptl: fixed typo.
+* page_logout.ptl: fixed redirect.
+* page_user*.ptl and page_admin*.ptl: corrected some 
+  function's "position"
+
 2006-12-29:
 * "updated" version
 * First attempt to detect if cdr_sqlite3_custom.so exists
@@ -40,6 +56,20 @@
 * Added queues web form variables for iax, zap ad mgcp phones 
 * Fixed some html warnings.
 
+2006-12-02:
+* All missing page_* "upgraded", but there is still work to do.
+
+2006-12-01:
+* All page_config files upgraded
+* page_main: removed a surplus and wrong _q_exports
+
+2006-11-30:
+* All page_admin and page_user files upgraded
+
+2006-11-29:
+* Renamed PageMain to Page
+* Upgraded page_user, page_user_info and page_logout
+
 2006-11-21
 * Configlet to listen active calls with ChanSpy
 
@@ -64,8 +94,9 @@
 * page_stats_cdr.ptl: display records in DESC order.
 * page_stats_phone.ptl, page_stats_trunks.ptl, page_stats_dialouts.ptl:
   Fixed current month
-  
-2006-10-31
+ 
+2006-10-31:
+* A test with page_main and page_login.
 * Simple and ugly bug fix for #9281.
 
 2006-10-30:
@@ -73,9 +104,22 @@
   cause ./destar was using the last one.
 * destar: starts panel when destar begins
 
-2006-10-26:
-* destar: updated VERSION variable
+2006-10-28:
+* Updated Version. TODO: Define it in only one place
+* Template.ptl: importing get_directory_path to replace 
+  Publisher's namespace_stack
+* session.py: New (draft) class for managing Destar's sessions
+* Publisher.py: -taken off all session management related stuff
+  - publishing PageMain from page_main
+* page_main.ptl: PageMain: Directory class-based
 
+2006-10-25:
+* First attempt to upgrade publisher 
+
+2006-10-24:
+* New branch for quixote2 transition
+* Moved every form2 to form
+
 2006-10-17:
 * Display op-panel restarting result
 * cfg_opt_oppanel: deleted duplicate and wrong variables

Modified: trunk/ConfigHelper.ptl
===================================================================
--- trunk/ConfigHelper.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/ConfigHelper.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,7 +19,7 @@
 
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
 from quixote.html import htmlescape
 import backend
 import types, string

Modified: trunk/Publisher.py
===================================================================
--- trunk/Publisher.py	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/Publisher.py	2007-01-23 00:01:51 UTC (rev 577)
@@ -52,64 +52,28 @@
 """
 
 
+from quixote import enable_ptl, get_request
 from quixote.publish import Publisher
+from quixote.session import SessionManager
 import configlets, backend, language
+from session import DestarSession
 import time
+enable_ptl()
 
-sessions = {}
-
 class DeStarPublisher(Publisher):
 
-	def start_request (self, request):
-		t = time.time()
 
-		# Determine IP of originator, keep Squid in mind :-)
-		try:
-			ip = request.environ['HTTP_X_FORWARDED_FOR']
-		except:
-			ip = request.environ['REMOTE_ADDR']
-
-		# Search session object, if none found, create one with default values
-		global sessions
-		session = sessions.setdefault(ip,
-			configlets.Holder(
-				firstaccess=t,
-				user=None,
-				phone='',
-				language='en',
-				level=-1,		# Try to auto-login, based on IP
-			))
-
-		# level==-1 means we should auto-login
-		# This works by searching for the first CfgOptUser configlet where
-		# the 'pc' variable matches the request originating IP:
-		if session.level == -1:
-			# Only try auto-login once, so set it to lowest level
-			session.level = 0
-
-			users = backend.getConfiglets(name="CfgOptUser")
-			if len(users) == 0:
-				# be Admin if there are no users configured
-				session.user  = "programmer"
-				session.level = 4
-				session.language = 'en'
-			else:
-				for user in users:
-					if user.pc == ip:
-						session.user = user.name
-						session.level = int(user.level)
-						session.phone = user.phone
-						session.language = user.language
-						break
-						
-		language.setLanguage(session.language)				
-		session.lastaccess = t
-		request.session = session
-
-
 	def filter_output(self, request, output):
 		output = Publisher.filter_output(self, request, output)
 		resp = request.response
 		if resp.get_header('Content-Type') in (None, 'text/html'):
 			resp.set_header('Content-Type','text/html; charset=%s' % language.encoding() )
 		return output
+
+
+def create_publisher():
+	from page_main import Page
+	return DeStarPublisher(Page(),
+		session_manager=SessionManager(session_class=DestarSession),
+		display_exceptions='plain')
+

Modified: trunk/Server.py
===================================================================
--- trunk/Server.py	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/Server.py	2007-01-23 00:01:51 UTC (rev 577)
@@ -112,19 +112,20 @@
 		environ[k] = ''
 
 	stdin = StringIO(data)
-	qreq = self.publisher.create_request(stdin, environ)
-	try:
-	    self.publisher.parse_request(qreq)
-	    output = self.publisher.process_request(qreq, environ)
-	except PublishError, err:
-	    output = self.publisher.finish_interrupted_request(qreq, err)
-	except:
-	    output = self.publisher.finish_failed_request(qreq)
+	#qreq = self.publisher.create_request(stdin, environ)
+	qresponse = self.publisher.process(stdin, environ)
+#	try:
+#	    self.publisher.parse_request(qreq)
+#	    output = self.publisher.process_request(qreq, environ)
+#	except PublishError, err:
+#	    output = self.publisher.finish_interrupted_request(qreq, err)
+#	except:
+#	    output = self.publisher.finish_failed_request(qreq)
+#
+#	qresponse = qreq.response
+#	if output:
+#	    qresponse.set_body(output)
 
-	qresponse = qreq.response
-	if output:
-	    qresponse.set_body(output)
-
 	# Copy headers from Quixote's HTTP response
 	for name, value in qresponse.generate_headers():
 	    # XXX Medusa's HTTP request is buggy, and only allows unique
@@ -132,13 +133,14 @@
 	    request[name] = value
 
 	request.response(qresponse.status_code)
+	request.push(StreamProducer(qresponse.generate_body_chunks()))
 
-	# XXX should we set a default Last-Modified time?
-	if qresponse.body is not None:
-	    if isinstance(qresponse.body, Stream):
-		request.push(StreamProducer(qresponse.body))
-	    else:
-		request.push(qresponse.body)
+#	# XXX should we set a default Last-Modified time?
+#	if qresponse.body is not None:
+#	    if isinstance(qresponse.body, Stream):
+#		request.push(StreamProducer(qresponse.body))
+#	    else:
+#		request.push(qresponse.body)
 
 	request.done()
 
@@ -152,12 +154,13 @@
     enable_ptl: ensure that PTL mechanism is started (default: true)
     """
 
-    def __init__(self, approot, config_file=None, port=80,
-	       enable_ptl=True, publisher=Publisher):
+    def __init__(self, approot, create_publisher, config_file=None, port=80,
+	       enable_ptl=True):
 	self.approot = approot
 	self.config_file = config_file
 	self.port = port
-	self.publishclass = publisher
+	#self.publishclass = publisher
+	self.publisher = create_publisher()
 	if enable_ptl:
 	    from quixote import enable_ptl
 	    enable_ptl()
@@ -165,11 +168,11 @@
     def run(self):
 	print 'Serving application %r on port %d' % (self.approot, self.port)
 	server = http_server.http_server('', self.port)
-	publisher = self.publishclass(self.approot)
-	if self.config_file:
-	    publisher.read_config(self.config_file)
-	publisher.setup_logs()
-	dh = QuixoteHandler(publisher, self.approot, server)
+#	publisher = self.publishclass(self.approot)
+#	if self.config_file:
+#	    publisher.read_config(self.config_file)
+#	publisher.setup_logs()
+	dh = QuixoteHandler(self.publisher, self.approot, server)
 	server.install_handler(dh)
 	asyncore.loop()
 

Modified: trunk/StatsHelper.ptl
===================================================================
--- trunk/StatsHelper.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/StatsHelper.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -18,7 +18,7 @@
 #
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
 try:
         from pychart import *
 except ImportError:

Modified: trunk/Templates.ptl
===================================================================
--- trunk/Templates.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/Templates.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -20,11 +20,13 @@
 
 from quixote.html import htmltext, htmlescape
 from quixote.publish import get_publisher, get_request
+from quixote import get_session
+from quixote.util import get_directory_path
 from quixote.errors import AccessError
 import os, sys, copy
 
 
-VERSION = '0.2.2'
+VERSION = 'DEVELOPMENT SNAPSHOT'
 
 
 class HtmlTable:
@@ -104,7 +106,6 @@
 			attr = self.attrs.get(x,y)
 			hide = False
 			elem = 'td'
-			#print "attr:", attr
 			if attr:
 				for k in attr:
 					if k == '__hide':
@@ -238,10 +239,12 @@
 
 def getMenu():
 	request = get_request()
+	session = get_session()
 	path = request.environ['PATH_INFO']
 	path = path[1:].split('/')
 
-	stack = get_publisher().get_namespace_stack()
+	#stack = get_publisher().get_namespace_stack()
+	stack = get_directory_path()
 
 	def calcMenu(root='', n=0):
 		m = []
@@ -254,18 +257,19 @@
 		except AttributeError:
 			return
 		for e in obj._q_menu:
-			if e._q_level>request.session.level:
+			if e._q_level > session.level:
 				continue
 			if e._q_level<0:
-				if e._q_title == _("Logout") and request.session.level == 4:
+				if e._q_title == _("Logout") and session.level == 4:
 	                                continue
 				if e._q_level<0:
-	                                if abs(e._q_level) <= request.session.level:			
+	                                if abs(e._q_level) <= session.level:			
 	                                	continue
 			submenu = []
-			if e._q_parent == sys.modules['page_main']:
+			#if e._q_parent == sys.modules['page_main']:
+			if e._q_parent == 'page_main':
 				for sub in e._q_menu:
-					parent_name = sub._q_parent.__name__[5:]
+					parent_name = sub._q_parent[5:]
 					submenu.append( (sub._q_menupos, '/'.join([root,parent_name,sub._q_link]), sub._q_title, []) )
 			submenu.sort()
 

Modified: trunk/destar
===================================================================
--- trunk/destar	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/destar	2007-01-23 00:01:51 UTC (rev 577)
@@ -36,9 +36,8 @@
 be_daemon = False
 rport = 8080
 pid_file = '/var/run/destar.pid'
-VERSION = '0.2.2'
+VERSION = 'DEVELOPMENT SNAPSHOT'
 
-
 def print_version():
 	print _("DeStar %s, Copyright (C) 2005 by Holger Schurig and contributors.\n\n"\
 	"DeStar comes with ABSOLUTELY NO WARRANTY. This is free software,\n"\
@@ -108,21 +107,17 @@
 # 'quixote' is a web application framework
 try:
 	import quixote
-	if sys.version[:3] < "2.4":
-		if quixote.__version__ < "1.0" or quixote.__version__ >= "2.0":
-			raise ImportError
-	else:
-		if quixote.__version__ < "1.2" or quixote.__version__ >= "2.0":
-			raise ImportError
+	if quixote.__version__ < "2.0":
+		raise ImportError
 except ImportError:
-	print _("Error:"), _("please install Quixote > 1.2  and < 2.0")
+	print _("Error:"), _("please install Quixote >= 2.0")
 	import sys
 	sys.exit(1)
 
 # 'Publisher.py' contains our session management, 'page_main' contains
 # the start page.
 import Server, Publisher
-pub = Server.Server("page_main", port=int(rport), publisher=Publisher.DeStarPublisher)
+pub = Server.Server("page_main", Publisher.create_publisher, port=int(rport))
 
 
 

Modified: trunk/page_admin.ptl
===================================================================
--- trunk/page_admin.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_admin.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,34 +19,40 @@
 
 
 from Templates import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_main'
-_q_title   = _("Administration")
-_q_desc    = _("Perform administrative actions to PBX")
-_q_menupos = 20
-_q_level   = 3
+	_q_parent  = 'page_main'
+	_q_title   = _("Administration")
+	_q_desc    = _("Perform administrative actions to PBX")
+	_q_menupos = 20
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-def showMenu [plain] ():
-	'<table id="subcategories"><thead>'
-	'<tr>'
-	for s in (htmltext(_('Action')), htmltext(_('Description'))):
-		'<th>%s</th>' % s
-	'</tr></thead>'
-
-	for e in _q_menu:
+	def showMenu [plain] (self):
+		'<table id="subcategories"><thead>'
 		'<tr>'
-		'<td><a href="%s">%s</a></td>' % (e._q_link,_(e._q_title))
-		'<td>%s</td>' % _(e._q_desc)
-		'</tr>'
-	'</table>'
+		for s in (htmltext(_('Action')), htmltext(_('Description'))):
+			'<th>%s</th>' % s
+		'</thead></tr>'
 
-def _q_index [plain] (request):
-	header(_q_desc)
-	showMenu()
-	footer()
+		for e in self._q_menu:
+			'<tr>'
+			'<td><a href="%s">%s</a></td>' % (e._q_link,_(e._q_title))
+			'<td>%s</td>' % _(e._q_desc)
+			'</tr>'
+		'</table>'
+
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		self.showMenu()
+		footer()

Modified: trunk/page_admin_backup.ptl
===================================================================
--- trunk/page_admin_backup.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_admin_backup.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,27 +19,31 @@
 
 
 from Templates import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 import os, backend
 
+class Page(AccessControlled, Directory): 
 
-_q_parent = 'page_admin'
-_q_title  = ''
-_q_desc   = _("Backup a config file")
-_q_link   = 'backup'
-_q_level  = 3
+	_q_parent = 'page_admin'
+	_q_title  = ''
+	_q_desc   = _("Backup a config file")
+	_q_link   = 'backup'
+	_q_level  = 3
 
+	_q_exports = ['']
 
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-
-
-def _q_lookup(request, component):
-         try:
-                 res = backend.backupAsteriskConfig(component)
-         except OSError:
-                 res = None
-         if not res:
-                 return errorpage(htmltext(_("I had a problem backing up %s")) % component)
-         return request.redirect("../write")
+	def _q_lookup(self, component):
+		 try:
+			 res = backend.backupAsteriskConfig(component)
+		 except OSError:
+			 res = None
+		 if not res:
+			 return errorpage(htmltext(_("I had a problem backing up %s")) % component)
+		 return redirect("../write")

Modified: trunk/page_admin_panel.ptl
===================================================================
--- trunk/page_admin_panel.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_admin_panel.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,34 +19,39 @@
 
 
 from Templates import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 import panelutils
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_admin'
-_q_title   = _("Operator Panel")
-_q_desc    = _("Asternic Flash Operator Panel")
-_q_link    = 'panel'
-_q_menupos = 90
-_q_level   = 3
+	_q_parent  = 'page_admin'
+	_q_title   = _("Operator Panel")
+	_q_desc    = _("Asternic Flash Operator Panel")
+	_q_link    = 'panel'
+	_q_menupos = 90
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		if panelutils.isConfigured() != 1:
+			'<p>'
+			htmltext(_("You don't have a panel configured yet"))
+			'</p>'
+		else:
+			'<p>'
+			htmltext(_('You have a panel configured '))
+			'<a href="/static/panel/index.html">'
+			htmltext(_('here'))
+			'</a>'
+			'</p>'
+		footer()
 
-def _q_index [plain] (request):
-	header(_q_desc)
-	if panelutils.isConfigured() != 1:
-		'<p>'
-		htmltext(_("You don't have a panel configured yet"))
-		'</p>'
-	else:
-		'<p>'
-		htmltext(_('You have a panel configured '))
-		'<a href="/static/panel/index.html">'
-		htmltext(_('here'))
-		'</a>'
-		'</p>'
-	footer()
-

Modified: trunk/page_admin_pbxstate.ptl
===================================================================
--- trunk/page_admin_pbxstate.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_admin_pbxstate.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -21,21 +21,9 @@
 from Templates import *
 import backend, manager
 import time
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
-_q_parent  = 'page_admin'
-_q_title   = _("PBX State")
-_q_desc    = _("Status of Asterisk/DeStar PBX")
-_q_link    = 'pbxstate'
-_q_menupos = 10
-_q_level   = 3
-
-
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-
-
-
 def formatChannel(obj, now):
 
 	# +------------------------------+
@@ -70,42 +58,58 @@
 
 	return htmltext('<span id="phonename">%s</span><br />%s<br />%s&nbsp;<span id="phonestate">%s</span>' % (id, number, ti, _(obj._state.State)))
 
+class Page(AccessControlled, Directory): 
 
-def _q_index [plain] (request):
-	header(_q_desc,refresh=10)
+	_q_parent  = 'page_admin'
+	_q_title   = _("PBX State")
+	_q_desc    = _("Status of Asterisk/DeStar PBX")
+	_q_link    = 'pbxstate'
+	_q_menupos = 10
+	_q_level   = 3
 
-	manager.connect()
-	if not manager.isConnected():
-		'<p><span class="errornotice">'
-		htmltext(_("Asterisk is not running!"))
-		'</span></p>'
-	elif not manager.isLoggedIn():
-		# TODO: describe how to set this up
-		'<p><span class="errornotice">'
-		htmltext(_("The manager access is not working!"))
-		'</span></p>'
+	_q_exports = ['']
 
-	(phones,other) = backend.determineStateOfPhones()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-	maxy = 8
-	h = HtmlTable(1,1)
-	now = time.time()
+	def _q_index [plain] (self):
+		header(self._q_desc,refresh=10)
 
-	x = y = 0
-	for obj in phones:
-		#print obj.name
-		if obj.technology == "virtual" or obj.technology == "QUEUE":
-			continue
+		manager.connect()
+		if not manager.isConnected():
+			'<p><span class="errornotice">'
+			htmltext(_("Asterisk is not running!"))
+			'</span></p>'
+		elif not manager.isLoggedIn():
+			# TODO: describe how to set this up
+			'<p><span class="errornotice">'
+			htmltext(_("The manager access is not working!"))
+			'</span></p>'
 
-		#id = '<a href="%d/state">%s</a>' % (obj._id, ' '.join(obj.row()[1:]) )
+		(phones,other) = backend.determineStateOfPhones()
 
-		h.setCell(x,y, formatChannel(obj, now) )
-		h.setAttr(x,y, id="phone")
+		maxy = 8
+		h = HtmlTable(1,1)
+		now = time.time()
 
-		y = y + 1
-		if y>=maxy:
-			x = x + 1
-			y = 0
+		x = y = 0
+		for obj in phones:
+			#print obj.name
+			if obj.technology == "virtual" or obj.technology == "QUEUE":
+				continue
 
-	h.getHtml(id='state', border=1)
-	footer()
+			#id = '<a href="%d/state">%s</a>' % (obj._id, ' '.join(obj.row()[1:]) )
+
+			h.setCell(x,y, formatChannel(obj, now) )
+			h.setAttr(x,y, id="phone")
+
+			y = y + 1
+			if y>=maxy:
+				x = x + 1
+				y = 0
+
+		h.getHtml(id='state', border=1)
+		footer()

Modified: trunk/page_admin_reload.ptl
===================================================================
--- trunk/page_admin_reload.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_admin_reload.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -21,40 +21,46 @@
 from Templates import *
 import backend
 import manager
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_admin'
-_q_title   = _("Apply Changes")
-_q_desc    = _("Reload Asterisk/DeStar PBX")
-_q_link    = 'reload'
-_q_menupos = 90
-_q_level   = 3
 
+	_q_parent  = 'page_admin'
+	_q_title   = _("Apply Changes")
+	_q_desc    = _("Reload Asterisk/DeStar PBX")
+	_q_link    = 'reload'
+	_q_menupos = 90
+	_q_level   = 3
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	_q_exports = ['']
 
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-def _q_index [plain] (request):
-	header(_q_desc)
-	manager.connect()
-	if not manager.isConnected():
-		'<p><span class="errornotice">'
-		htmltext(_("Asterisk is not running!"))
-		'</span></p>'
-	elif not manager.isLoggedIn():
-		# TODO: describe how to set this up
-		'<p><span class="errornotice">'
-		htmltext(_("The manager access is not working!"))
-		'</span></p>'
-	else:
-		'<p>'
-		htmltext(_('Doing a reload, result is:'))
-		'</p>'
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		manager.connect()
+		if not manager.isConnected():
+			'<p><span class="errornotice">'
+			htmltext(_("Asterisk is not running!"))
+			'</span></p>'
+		elif not manager.isLoggedIn():
+			# TODO: describe how to set this up
+			'<p><span class="errornotice">'
+			htmltext(_("The manager access is not working!"))
+			'</span></p>'
+		else:
+			'<p>'
+			htmltext(_('Doing a reload, result is:'))
+			'</p>'
 
-		'<tt><p>'
-		backend.reloadAsterisk()
-		'</p></tt>'
+			'<tt><p>'
+			backend.reloadAsterisk()
+			'</p></tt>'
 
-	footer()
+		footer()

Modified: trunk/page_admin_viewconf.ptl
===================================================================
--- trunk/page_admin_viewconf.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_admin_viewconf.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -20,28 +20,12 @@
 
 from Templates import *
 from ConfigHelper import LabelWidget
-from quixote.form2 import *
+from quixote.form import *
 from quixote.html import htmlescape
 import os, backend, configlets, panelutils
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
-
-_q_parent  = 'page_admin'
-_q_title   = _("View/Save Configuration")
-_q_desc    = _("Show and Save Asterisk configuration files")
-_q_link    = 'viewconf'
-_q_menupos = 90
-_q_level   = 3
-
-
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-
-
-def _q_test():
-	return os.access("/etc/asterisk", os.O_RDWR)
-
-
 def showHtmlConfig [plain] (configEntries):
 	'<div id="config">\n'
 	for file, cfg in configEntries:
@@ -72,64 +56,83 @@
 		'</div>\n'
 	'</div>\n'
 
+class Page(AccessControlled, Directory): 
 
 
+	_q_parent  = 'page_admin'
+	_q_title   = _("View/Save Configuration")
+	_q_desc    = _("Show and Save Asterisk configuration files")
+	_q_link    = 'viewconf'
+	_q_menupos = 90
+	_q_level   = 3
 
-def _q_index [plain] (request):
+	_q_exports = ['']
 
-	res = backend.createAsteriskConfig()
-	configEntries = res[0]
-	missingModules = res[1]
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-	if not configEntries == []:
-		configEntries.sort()
+	def _q_test(self):
+		return os.access("/etc/asterisk", os.O_RDWR)
 
-		showForm = Form(attrs={"id":"showForm"})
-		for file,cnf in configEntries:
-			showForm.add(CheckboxWidget, file, False, title=file)
-		showForm.add(SubmitWidget, '_show', _("Show selected files"), render_br=False)
-		showForm.add(SubmitWidget, '_write', _("Save all changes"))
 
-		if not showForm.is_submitted():
-			header(_(_q_desc))
-			if not missingModules == []: showMissingModules(missingModules)
-			showForm.render()
+	def _q_index [plain] (self):
 
-		elif showForm['_show']:
-			header(_("Asterisk configuration files"))
-			if not missingModules == []: showMissingModules(missingModules)
-			entries = []
+		res = backend.createAsteriskConfig()
+		configEntries = res[0]
+		missingModules = res[1]
+
+		if not configEntries == []:
+			configEntries.sort()
+
+			showForm = Form(attrs={"id":"showForm"})
 			for file,cnf in configEntries:
-				if showForm[file]:
-					entries.append( (file,cnf) )
-			showHtmlConfig(entries)
-			showForm.render()
-		elif showForm['_write']:
-			header(_("Save changes results"))
-			'<p>'
-			if backend.writeAsteriskConfig():
-				_("Configuration files saved")
-			else:
-				_("There were problems writing the configuration. Please take a look at the error logs.")
-			'</p>'
+				showForm.add(CheckboxWidget, file, False, title=file)
+			showForm.add(SubmitWidget, '_show', _("Show selected files"), render_br=False)
+			showForm.add(SubmitWidget, '_write', _("Save all changes"))
 
-	else:
-			header(_("Nothing to Show"))
-			'<p>'
-			_("There is nothing configured yet.")
-			'</p>'
-	footer()
+			if not showForm.is_submitted():
+				header(_(self._q_desc))
+				if not missingModules == []: showMissingModules(missingModules)
+				showForm.render()
 
-def showMissingModules [plain] (missingModules):
-	'<div id="error">\n'
-	'<p>'
-	htmltext(_("WARNING: This configuration might experience grave problems because the following asterisk modules are missing on your system:"))
-	'</p>'
-	'<ul>'
-	for mod in missingModules:
-		'<li>'
-		mod
-		'</li>'
-	'</ul>'
-	'</div>\n'
+			elif showForm['_show']:
+				header(_("Asterisk configuration files"))
+				if not missingModules == []: showMissingModules(missingModules)
+				entries = []
+				for file,cnf in configEntries:
+					if showForm[file]:
+						entries.append( (file,cnf) )
+				showHtmlConfig(entries)
+				showForm.render()
+			elif showForm['_write']:
+				header(_("Save changes results"))
+				'<p>'
+				if backend.writeAsteriskConfig():
+					_("Configuration files saved")
+				else:
+					_("There were problems writing the configuration. Please take a look at the error logs.")
+				'</p>'
 
+		else:
+				header(_("Nothing to Show"))
+				'<p>'
+				_("There is nothing configured yet.")
+				'</p>'
+		footer()
+
+	def showMissingModules [plain] (missingModules):
+		'<div id="error">\n'
+		'<p>'
+		htmltext(_("WARNING: This configuration might experience grave problems because the following asterisk modules are missing on your system:"))
+		'</p>'
+		'<ul>'
+		for mod in missingModules:
+			'<li>'
+			mod
+			'</li>'
+		'</ul>'
+		'</div>\n'
+

Modified: trunk/page_config.ptl
===================================================================
--- trunk/page_config.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -21,119 +21,127 @@
 from Templates import *
 import os, grp, backend, string
 import panelutils
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
-_q_parent  = 'page_main'
-_q_title   = _("Configuration")
-_q_desc    = _("Modify Asterisk configuration")
-_q_menupos = 30
-_q_level   = 3
+class Page(AccessControlled, Directory): 
 
+	_q_parent  = 'page_main'
+	_q_title   = _("Configuration")
+	_q_desc    = _("Modify Asterisk configuration")
+	_q_menupos = 30
+	_q_level   = 3
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	_q_exports = ['']
 
+	tipped = False
 
-tipped = False
-def configurationTip [plain] (tip, url, label):
-	global tipped
-	if not tipped:
-		'<p>'
-		htmltext(_('Configuration tips'))
-		'</p>'
-		'<ul>'
-	tipped = True
-	'<li>'
-	htmltext(_(tip))
-	if url:
-		'You can do it in the <a href="%s">' % url
-		' -> '.join(label)
-		'</a> form.'	
-	'</li>'
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
+	def configurationTip [plain] (self, tip, url, label):
+		tipped = self.tipped
+		global tipped
+		if not tipped:
+			'<p>'
+			htmltext(_('Configuration tips'))
+			'</p>'
+			'<ul>'
+		self.tipped = True
+		'<li>'
+		htmltext(_(tip))
+		if url:
+			'You can do it in the <a href="%s">' % url
+			' -> '.join(label)
+			'</a> form.'	
+		'</li>'
 
-def configurationTips [plain] (request):
-	global tipped
-	tipped = False
 
-	groups = []
-	for gid in os.getgroups():
-		groups.append(grp.getgrgid(gid)[0])
-	groups = ", ".join(groups)
+	def configurationTips [plain] (self):
+		tipped = self.tipped
+		global tipped
+		tipped = False
 
-	if request.session.user=='programmer':
-		configurationTip(
-			_("You should create a user with type 'Configurator'. Without this user, everyone connecting to DeStar can configure everything."),
-			"add/CfgOptUser",
-			[_("Configuration"), _("Options"), _("DeStar user")] )
+		groups = []
+		for gid in os.getgroups():
+			groups.append(grp.getgrgid(gid)[0])
+		groups = ", ".join(groups)
 
-	if not os.access("/etc/asterisk", os.O_RDWR):
-		configurationTip(
-			_("You should enable write access to the directory /etc/asterisk. Without the ability to modify the configuration files DeStar would be pretty useless. You should 'chmod g+rwx' this directory and set it's group to one of '%s'." % groups),
-			"",
-			[])
+		if self.session.user=='programmer':
+			configurationTip(
+				_("You should create a user with type 'Configurator'. Without this user, everyone connecting to DeStar can configure everything."),
+				"add/CfgOptUser",
+				[_("Configuration"), _("Options"), _("DeStar user")] )
 
-	if not backend.countConfiglets(clazz="CfgOptManager"):
-		configurationTip(
-			_("You should create a management API entry. Without this entry, DeStar can't control the Asterisk PBX software."),
-			"add/CfgOptManager",
-			[_("Configuration"), _("Options"), _("Management API access")] )
+		if not os.access("/etc/asterisk", os.O_RDWR):
+			configurationTip(
+				_("You should enable write access to the directory /etc/asterisk. Without the ability to modify the configuration files DeStar would be pretty useless. You should 'chmod g+rwx' this directory and set it's group to one of '%s'." % groups),
+				"",
+				[])
 
-	if not backend.countConfiglets("Phones"):
-		configurationTip(
-			_("You should create a phone. Without defined phones you can't make and receive calls."),
-			"phones/",
-			[_("Configuration"), _("Phones")] )
+		if not backend.countConfiglets(clazz="CfgOptManager"):
+			self.configurationTip(
+				_("You should create a management API entry. Without this entry, DeStar can't control the Asterisk PBX software."),
+				"add/CfgOptManager",
+				[_("Configuration"), _("Options"), _("Management API access")] )
 
-	if not backend.countConfiglets("Trunks"):
-		configurationTip(
-			_("You should create a trunk (connection to a Phone company or VOIP Provider). Without a trunk you can only make calls between local phones."),
-			"trunks/",
-			[_("Configuration"), _("Trunks")] )
+		if not backend.countConfiglets("Phones"):
+			self.configurationTip(
+				_("You should create a phone. Without defined phones you can't make and receive calls."),
+				"phones/",
+				[_("Configuration"), _("Phones")] )
 
-	if not os.access("/etc/zaptel.conf", os.O_RDWR):
-		configurationTip(
-			_("You should enable write access to /etc/zaptel.conf. Without write access to this file you cannot configure Zaptel devices, e.g. FXO/FXS cards, T1/E1 cards, ZapHFC ISDN cards, etc. You should 'chmod g+rw' this file and set it's group to one of '%s'." % groups),
-			"",
-			[])
-	if not os.access(panelutils.PANEL_CONF_DIR, os.O_RDWR):
-		configurationTip(
-			_("You should enable write access to the %s directory. Without the ability to modify the Asternic Flash Operator Panel configuration files DeStar won't be integrated whit the panel." % panelutils.PANEL_CONF_DIR),
-			"",
-			[])
-	db_fn = "/var/log/asterisk/master.db"
-	if not os.access(db_fn, os.O_RDWR):
-		configurationTip(
-			_("You don't seem to have access to %s yet created by cdr_sqlite3_custom. Without this file CDR reports wont be accesible trough this interface."),
-			"",
-			[])
+		if not backend.countConfiglets("Trunks"):
+			self.configurationTip(
+				_("You should create a trunk (connection to a Phone company or VOIP Provider). Without a trunk you can only make calls between local phones."),
+				"trunks/",
+				[_("Configuration"), _("Trunks")] )
 
-	if tipped:
-		'</ul>'
+		if not os.access("/etc/zaptel.conf", os.O_RDWR):
+			self.configurationTip(
+				_("You should enable write access to /etc/zaptel.conf. Without write access to this file you cannot configure Zaptel devices, e.g. FXO/FXS cards, T1/E1 cards, ZapHFC ISDN cards, etc. You should 'chmod g+rw' this file and set it's group to one of '%s'." % groups),
+				"",
+				[])
+		if not os.access(panelutils.PANEL_CONF_DIR, os.O_RDWR):
+			self.configurationTip(
+				_("You should enable write access to the %s directory. Without the ability to modify the Asternic Flash Operator Panel configuration files DeStar won't be integrated whit the panel." % panelutils.PANEL_CONF_DIR),
+				"",
+				[])
+		db_fn = "/var/log/asterisk/master.db"
+		if not os.access(db_fn, os.O_RDWR):
+			configurationTip(
+				_("You don't seem to have access to %s yet created by cdr_sqlite3_custom. Without this file CDR reports wont be accesible trough this interface."),
+				"",
+				[])
 
+		if self.tipped:
+			'</ul>'
 
-def showConfigurables [plain] (head):
-	'<p>'
-	head
-	':</p><table id="subcategories"><thead>'
-	'<tr>'
-	for s in (htmltext(_('Configured')), htmltext(_('Category'))):
-		'<th>%s</th>' % s
-	'</tr></thead>'
-
-	for group in backend.configletsGrouped():
+	def showConfigurables [plain] (sefl, head):
+		'<p>'
+		head
+		':</p><table id="subcategories"><thead>'
 		'<tr>'
-		'<td>%s</td>' % backend.countConfiglets(group)
-		'<td><a href="%s">%s</a></td>' % (group.lower(), _(group))
-		'</tr>'
-	'</table>'
+		for s in (htmltext(_('Configured')), htmltext(_('Category'))):
+			'<th>%s</th>' % s
+		'</thead></tr>'
 
+		for group in backend.configletsGrouped():
+			'<tr>'
+			'<td>%s</td>' % backend.countConfiglets(group)
+			'<td><a href="%s">%s</a></td>' % (group.lower(), _(group))
+			'</tr>'
+		'</table>'
 
-def _q_index [plain] (request):
-	header(_q_desc)
-	configurationTips(request)
-	if tipped:
-		showConfigurables(htmltext(_('Other things you can configure:')))
-	else:
-		showConfigurables(htmltext(_('You can configure the following things')))
-	footer()
+
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		self.configurationTips()
+		if self.tipped:
+			self.showConfigurables(htmltext(_('Other things you can configure:')))
+		else:
+			self.showConfigurables(htmltext(_('You can configure the following things')))
+		footer()

Modified: trunk/page_config_add.ptl
===================================================================
--- trunk/page_config_add.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_add.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,18 +19,23 @@
 
 
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent = 'page_config'
-_q_title  = ''
-_q_desc   = _("Add a new configlet")
-_q_link   = 'add'
-_q_level  = 3
+	_q_parent = 'page_config'
+	_q_title  = ''
+	_q_desc   = _("Add a new configlet")
+	_q_link   = 'add'
+	_q_level  = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-_q_lookup = lookupConfiglets
+	_q_lookup = lookupConfiglets

Modified: trunk/page_config_applications.ptl
===================================================================
--- trunk/page_config_applications.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_applications.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -20,22 +20,27 @@
 
 from Templates import *
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_config'
-_q_title   = _("Applications")
-_q_desc    = _("Special Asterisk Applications")
-_q_link    = 'applications'
-_q_menupos = 50
-_q_level   = 3
+	_q_parent  = 'page_config'
+	_q_title   = _("Applications")
+	_q_desc    = _("Special Asterisk Applications")
+	_q_link    = 'applications'
+	_q_menupos = 50
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	presentConfiglets('Applications')
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		presentConfiglets('Applications')
+		footer()

Modified: trunk/page_config_codecs.ptl
===================================================================
--- trunk/page_config_codecs.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_codecs.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -21,22 +21,27 @@
 
 from Templates import *
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_config'
-_q_title   = _("Codecs")
-_q_desc    = _("Audio codecs to use on SIP and IAX channels.")
-_q_link    = 'codecs'
-_q_menupos = 80
-_q_level   = 3
+	_q_parent  = 'page_config'
+	_q_title   = _("Codecs")
+	_q_desc    = _("Audio codecs to use on SIP and IAX channels.")
+	_q_link    = 'codecs'
+	_q_menupos = 80
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	presentConfiglets('Codecs')
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		presentConfiglets('Codecs')
+		footer()

Modified: trunk/page_config_dialout.ptl
===================================================================
--- trunk/page_config_dialout.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_dialout.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -21,22 +21,27 @@
 
 from Templates import *
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_config'
-_q_title   = _("Dialout")
-_q_desc    = _("Dialout entries for outgoing calls")
-_q_link    = 'dialout'
-_q_menupos = 40
-_q_level   = 3
+	_q_parent  = 'page_config'
+	_q_title   = _("Dialout")
+	_q_desc    = _("Dialout entries for outgoing calls")
+	_q_link    = 'dialout'
+	_q_menupos = 40
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	presentConfiglets('Dialout')
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		presentConfiglets('Dialout')
+		footer()

Modified: trunk/page_config_dids.ptl
===================================================================
--- trunk/page_config_dids.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_dids.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -21,22 +21,27 @@
 
 from Templates import *
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_config'
-_q_title   = _("DIDs")
-_q_desc    = _("Direct Inward Dialing.")
-_q_link    = 'dids'
-_q_menupos = 70
-_q_level   = 3
+	_q_parent  = 'page_config'
+	_q_title   = _("DIDs")
+	_q_desc    = _("Direct Inward Dialing.")
+	_q_link    = 'dids'
+	_q_menupos = 70
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	presentConfiglets('DIDs')
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		presentConfiglets('DIDs')
+		footer()

Modified: trunk/page_config_down.ptl
===================================================================
--- trunk/page_config_down.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_down.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,23 +19,28 @@
 
 
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 
+class Page(AccessControlled, Directory): 
 
-_q_parent = 'page_config'
-_q_title  = ''
-_q_desc   = _("Moves a configlet one position down")
-_q_link   = 'down'
-_q_level  = 3
+	_q_parent = 'page_config'
+	_q_title  = ''
+	_q_desc   = _("Moves a configlet one position down")
+	_q_link   = 'down'
+	_q_level  = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_lookup(request, component):
-	obj = backend.moveConfigletDown(component)
-	if obj:
-		return request.redirect("../" + obj.groupName.lower())
-	else:
-		return errorpage(_("Could not swap id's %s and %s") % (self._id-1,self._id))
+	def _q_lookup(self, component):
+		obj = backend.moveConfigletDown(component)
+		if obj:
+			return redirect("../" + obj.groupName.lower())
+		else:
+			return errorpage(_("Could not swap id's %s and %s") % (self._id-1,self._id))

Modified: trunk/page_config_edit.ptl
===================================================================
--- trunk/page_config_edit.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_edit.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -20,25 +20,30 @@
 
 from ConfigHelper import *
 import backend
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent = 'page_config'
-_q_title  = ''
-_q_desc   = _("Edit a configlet")
-_q_link   = 'edit'
-_q_level  = 3
+	_q_parent = 'page_config'
+	_q_title  = ''
+	_q_desc   = _("Edit a configlet")
+	_q_link   = 'edit'
+	_q_level  = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
+	def _q_lookup(self, component):
+		obj = backend.getConfiglet(component)
+		if obj is not None:
+			obj.fixup()
+			return configletsForm(request, obj, _(obj.shortName), exitPath = "../" + obj.groupName.lower())
+		else:
+			return errorpage(_("Object does not exist"))
 
-def _q_lookup(request, component):
-	obj = backend.getConfiglet(component)
-	if obj is not None:
-		obj.fixup()
-		return configletsForm(request, obj, _(obj.shortName), exitPath = "../" + obj.groupName.lower())
-	else:
-		return errorpage(_("Object does not exist"))
-

Modified: trunk/page_config_ivrs.ptl
===================================================================
--- trunk/page_config_ivrs.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_ivrs.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -21,22 +21,27 @@
 
 from Templates import *
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_config'
-_q_title   = _("IVRs")
-_q_desc    = _("Interactive Voice Response menus for the PBX.")
-_q_link    = 'ivrs'
-_q_menupos = 60
-_q_level   = 3
+	_q_parent  = 'page_config'
+	_q_title   = _("IVRs")
+	_q_desc    = _("Interactive Voice Response menus for the PBX.")
+	_q_link    = 'ivrs'
+	_q_menupos = 60
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	presentConfiglets('IVRs')
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		presentConfiglets('IVRs')
+		footer()

Modified: trunk/page_config_options.ptl
===================================================================
--- trunk/page_config_options.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_options.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -20,22 +20,27 @@
 
 from Templates import *
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_config'
-_q_title   = _("Options")
-_q_desc    = _("DeStar and Asterisk options and parameters")
-_q_link    = 'options'
-_q_menupos = 999
-_q_level   = 3
+	_q_parent  = 'page_config'
+	_q_title   = _("Options")
+	_q_desc    = _("DeStar and Asterisk options and parameters")
+	_q_link    = 'options'
+	_q_menupos = 999
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	presentConfiglets('Options')
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		presentConfiglets('Options')
+		footer()

Modified: trunk/page_config_pbx.ptl
===================================================================
--- trunk/page_config_pbx.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_pbx.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -21,22 +21,27 @@
 
 from Templates import *
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_config'
-_q_title   = _("Virtual PBX")
-_q_desc    = _("Virtual PBX")
-_q_link    = 'pbx'
-_q_menupos = 05
-_q_level   = 3
+	_q_parent  = 'page_config'
+	_q_title   = _("Virtual PBX")
+	_q_desc    = _("Virtual PBX")
+	_q_link    = 'pbx'
+	_q_menupos = 05
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	presentConfiglets('PBX')
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		presentConfiglets('PBX')
+		footer()

Modified: trunk/page_config_phones.ptl
===================================================================
--- trunk/page_config_phones.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_phones.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -20,22 +20,27 @@
 
 from Templates import *
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_config'
-_q_title   = _("Phones")
-_q_desc    = _("Phones and their settings")
-_q_link    = 'phones'
-_q_menupos = 20
-_q_level   = 3
+	_q_parent  = 'page_config'
+	_q_title   = _("Phones")
+	_q_desc    = _("Phones and their settings")
+	_q_link    = 'phones'
+	_q_menupos = 20
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	presentConfiglets('Phones')
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		presentConfiglets('Phones')
+		footer()

Modified: trunk/page_config_trunks.ptl
===================================================================
--- trunk/page_config_trunks.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_trunks.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -20,29 +20,34 @@
 
 from Templates import *
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_config'
-_q_title   = _("Trunks")
-_q_desc    = _("Telephone company lines and VoIP-Trunks")
-_q_link    = 'trunks'
-_q_menupos = 30
-_q_level   = 3
+	_q_parent  = 'page_config'
+	_q_title   = _("Trunks")
+	_q_desc    = _("Telephone company lines and VoIP-Trunks")
+	_q_link    = 'trunks'
+	_q_menupos = 30
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	import configlets
-	phones = False
-	for obj in configlets.configlet_tree:
-		if obj.groupName == 'Phones':
-			phones = True
-	if not phones:
-		_('You should add at least one phone to configure trunks')
-	presentConfiglets('Trunks')
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		import configlets
+		phones = False
+		for obj in configlets.configlet_tree:
+			if obj.groupName == 'Phones':
+				phones = True
+		if not phones:
+			_('You should add at least one phone to configure trunks')
+		presentConfiglets('Trunks')
+		footer()

Modified: trunk/page_config_up.ptl
===================================================================
--- trunk/page_config_up.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_up.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,23 +19,28 @@
 
 
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 
+class Page(AccessControlled, Directory): 
 
-_q_parent = 'page_config'
-_q_title  = ''
-_q_desc   = _("Moves a configlet one position up")
-_q_link   = 'up'
-_q_level  = 3
+	_q_parent = 'page_config'
+	_q_title  = ''
+	_q_desc   = _("Moves a configlet one position up")
+	_q_link   = 'up'
+	_q_level  = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_lookup(request, component):
-	obj = backend.moveConfigletUp(component)
-	if obj:
-		return request.redirect("../" + obj.groupName.lower())
-	else:
-		return errorpage(_("Could not swap id's %s and %s") % (self._id-1,self._id))
+	def _q_lookup(self, component):
+		obj = backend.moveConfigletUp(component)
+		if obj:
+			return redirect("../" + obj.groupName.lower())
+		else:
+			return errorpage(_("Could not swap id's %s and %s") % (self._id-1,self._id))

Modified: trunk/page_config_users.ptl
===================================================================
--- trunk/page_config_users.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_config_users.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -20,22 +20,27 @@
 
 from Templates import *
 from ConfigHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_config'
-_q_title   = _("Users")
-_q_desc    = _("Users and Mailboxes")
-_q_link    = 'users'
-_q_menupos = 10
-_q_level   = 3
+	_q_parent  = 'page_config'
+	_q_title   = _("Users")
+	_q_desc    = _("Users and Mailboxes")
+	_q_link    = 'users'
+	_q_menupos = 10
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	presentConfiglets('Users')
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		presentConfiglets('Users')
+		footer()

Modified: trunk/page_debug.ptl
===================================================================
--- trunk/page_debug.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_debug.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,23 +19,28 @@
 
 
 from Templates import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_main'
-_q_title   = _("Debug")
-_q_desc    = _("Various functions to debug DeStar, mostly useful for programmers")
-_q_menupos = 99
-_q_level   = 4	# Programmer only
+	_q_parent  = 'page_main'
+	_q_title   = _("Debug")
+	_q_desc    = _("Various functions to debug DeStar, mostly useful for programmers")
+	_q_menupos = 99
+	_q_level   = 4	# Programmer only
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	'<p>'
-	htmltext(_q_desc)
-	'.</p>'
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		'<p>'
+		htmltext(self._q_desc)
+		'.</p>'
+		footer()

Modified: trunk/page_debug_values.ptl
===================================================================
--- trunk/page_debug_values.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_debug_values.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,21 +19,26 @@
 
 
 from Templates import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent = 'page_debug'
-_q_title  = _("Values")
-_q_desc   = _("Dumps all values in the HTTP request")
+	_q_parent = 'page_debug'
+	_q_title  = _("Values")
+	_q_desc   = _("Dumps all values in the HTTP request")
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	'<div id="dump">'
-	request.dump_html()
-	'</div>'
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		'<div id="dump">'
+		request.dump_html()
+		'</div>'
+		footer()

Modified: trunk/page_login.ptl
===================================================================
--- trunk/page_login.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_login.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,69 +19,79 @@
 
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
+from quixote import get_request, get_session, redirect
+from quixote.directory import Directory, AccessControlled
 import types, backend
 
-_q_parent  = 'page_main'
-_q_title   = _("Login")
-_q_desc    = _("Login into DeStar")
-_q_menupos = 90
-_q_level   = -1
+class Page(AccessControlled, Directory): 
 
+	_q_parent  = 'page_main'
+	_q_title   = _("Login")
+	_q_desc    = _("Login into DeStar")
+	_q_menupos = 90
+	_q_level   = -1
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	_q_exports = ['']
 
-def loginForm(request, exitPath=".", render=0):
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-	if request.form.has_key('_cancel'):
-		return request.redirect(exitPath)
-	form = Form()
+	def loginForm(self, exitPath=".", render=0):
 
-	form.add(StringWidget, "name",  "",  title=htmltext(_("User or phone name/number")), required=True)
-	form.add(PasswordWidget, "pw",    "",  title=htmltext(_("Password or PIN")),           required=True)
-	form.add(SubmitWidget, '_submit', _("Submit"), render_br=False)
-	form.add(SubmitWidget, '_cancel', _("Cancel"), render_br=False)
+		if self.request.form.has_key('_cancel'):
+			return self.request.redirect(exitPath)
+		form = Form()
 
-	if not form.is_submitted() or form.has_errors() or render == 1:
-		return form.render()
+		form.add(StringWidget, "name",  "",  title=htmltext(_("User or phone name/number")), required=True)
+		form.add(PasswordWidget, "pw",    "",  title=htmltext(_("Password or PIN")),           required=True)
+		form.add(SubmitWidget, '_submit', _("Submit"), render_br=False)
+		form.add(SubmitWidget, '_cancel', _("Cancel"), render_br=False)
 
-	return (form['name'], form['pw'])
+		if not form.is_submitted() or form.has_errors() or render == 1:
+			return form.render()
 
+		return (form['name'], form['pw'])
 
-def notLoggedIn [plain] (request):
-	'<p>'
-	htmltext(_('Invalid username or password'))
-	loginForm(request, render=1)
-	'.</p>'
 
+	def notLoggedIn [plain] (self):
+		'<p>'
+		htmltext(_('Invalid username or password'))
+		self.loginForm(self.request, render=1)
+		'.</p>'
 
-def _q_index [plain] (request):
-	header(_q_desc)
-	res = loginForm(request)
 
-	if type(res) != types.TupleType:
-		res
-	else:
-		# First search for a user entry
-		for obj in backend.getConfiglets(name="CfgOptUser"):
-			if obj.name==res[0] and obj.secret==res[1]:
-				request.session.user  = obj.name
-				request.session.level = int(obj.level)
-				request.session.phone = obj.phone
-				request.session.language = obj.language
-				request.session.pbx = obj.pbx
-				return request.redirect(str('../user/info'))
+	def _q_index [plain] (self):
+		self.session = get_session()
+		self.request = get_request()
 
-		# Now search for a phone entry with proper extension/voicemail pin
-		for obj in backend.getConfiglets(group="Phones"):
-			if (obj.ext==res[0] or obj.name==res[0]) and (obj.secret==res[1] or obj.pin==res[1]):
-				request.session.user  = obj.name
-				request.session.level = 1
-				request.session.phone = obj.name
-				request.session.language = 'en'
-				request.session.pbx = obj.pbx
-				return request.redirect(str('../user/info'))
-		notLoggedIn(request)
-	footer()
+		header(self._q_desc)
+		res = self.loginForm(self.request)
+
+		if type(res) != types.TupleType:
+			res
+		else:
+			# First search for a user entry
+			for obj in backend.getConfiglets(name="CfgOptUser"):
+				if obj.name==res[0] and obj.secret==res[1]:
+					self.session.user  = obj.name
+					self.session.level = int(obj.level)
+					self.session.phone = obj.phone
+					self.session.language = obj.language
+					self.session.pbx = obj.pbx
+					return redirect(str('../user/info'))
+
+			# Now search for a phone entry with proper extension/voicemail pin
+			for obj in backend.getConfiglets(group="Phones"):
+				if (obj.ext==res[0] or obj.name==res[0]) and (obj.secret==res[1] or obj.pin==res[1]):
+					self.session.user  = obj.name
+					self.session.level = 1
+					self.session.phone = obj.name
+					self.session.language = 'en'
+					self.session.pbx = obj.pbx
+					return redirect(str('../user/info'))
+			self.notLoggedIn()
+		footer()

Modified: trunk/page_logout.ptl
===================================================================
--- trunk/page_logout.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_logout.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,24 +19,30 @@
 
 
 from Templates import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_main'
-_q_title   = _("Logout")
-_q_desc    = _("Logout and become a guest user")
-_q_menupos = 90
-_q_level   = 1
+	_q_parent  = 'page_main'
+	_q_title   = _("Logout")
+	_q_desc    = _("Logout and become a guest user")
+	_q_menupos = 90
+	_q_level   = 1
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-	if request.session.level == 4:
-		return request.redirect('/user/info/')
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
+		if self.session.level == 4:
+			return redirect('/user/info/')
 
-def _q_index(request):
-	# TODO: move this into Publisher.py
-	request.session.user = ''
-	request.session.phone = ''
-	request.session.level = -1
-	return request.redirect('/user/info/')
+	def _q_index(self):
+		# TODO: move this into Publisher.py
+		self.session.user = ''
+		self.session.phone = ''
+		self.session.level = -1
+		return redirect('/')

Modified: trunk/page_main.ptl
===================================================================
--- trunk/page_main.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_main.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -20,22 +20,11 @@
 
 from Templates import *
 import sys, os, quixote, backend
+from quixote import get_session, get_session_manager
 from quixote.util import StaticDirectory
+from quixote.directory import Directory, AccessControlled
 
 
-_q_exports = ['static', 'graphs']
-_q_parent  = ''
-_q_title   = _("Main menu")
-_q_desc    = _("DeStar main page")
-_q_level   = 0
-
-
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-
-
-
 #######################################################################
 #
 # This boilerplate is only in main_page.ptl. It automatically loads
@@ -60,120 +49,128 @@
 #######################################################################
 
 
+class Page(AccessControlled, Directory): #order matters
 
+        # Our main page
 
+	_q_exports = ['', 'static', 'graphs']
+        _q_parent  = ''
+        _q_title   = _("Main menu")
+        _q_desc    = _("DeStar main page")
+        _q_level   = 0
 
-# Import all cfg_*.py files once when the module loads.
-for s in os.listdir(backend.CONFIGLETS_DIR):
-        if not s.startswith('page_'):
-		continue
-	m = None
-        if s.endswith('.ptl'):
-		s= s[:-4]
-		#print "Importing", s
-		m = __import__(s)
-        elif s.endswith('.py'):
-		s = s[:-3]
-		#print "Importing", s
-		m =  __import__(s)
-	if m:
-		for a in ('_q_parent', '_q_title', '_q_access'):
-			if not m.__dict__.has_key(a):
-				print "Error: '%s' doesn't define %s" % (s,a)
-				sys.exit(1)
+	def __init__(self):
 
-		# instantiate eventually missing variables
-		if not m.__dict__.has_key('_q_menu'):
-			m.__dict__['_q_menu'] = []
-		if not m.__dict__.has_key('_q_menupos'):
-			m.__dict__['_q_menupos'] = 0
-		if not m.__dict__.has_key('_q_exports'):
-			m.__dict__['_q_exports'] = []
-		if not m.__dict__.has_key('_q_desc'):
-			m.__dict__['_q_desc'] = ''
-		if not m.__dict__.has_key('_q_level'):
-			m.__dict__['_q_level'] = 4
-		if not m.__dict__.has_key('_q_link'):
-			m.__dict__['_q_link'] = s[5:]
-		
-# Build the menu structure for all page modules
-for s in sys.modules:
-	if not s.startswith('page_'):
-		continue
-	if s == 'page_main':
-		continue
-	
-	this_mod = sys.modules[s]
-	if this_mod.__dict__.has_key('_q_test') and not this_mod._q_test():
-		continue
+		# Import all cfg_*.py files once when the module loads.
+		for s in os.listdir(backend.CONFIGLETS_DIR):
+			#continue
+			if not s.startswith('page_main') and not s.startswith('page_user') \
+			and not s.startswith('page_login') and not s.startswith('page_admin') \
+			and not s.startswith('page_logout') and not s.startswith('page_config') :
+				continue
+			m = None
+			if s.endswith('.ptl'):
+				s= s[:-4]
+				m = __import__(s)
+			elif s.endswith('.py'):
+				s = s[:-3]
+				m =  __import__(s)
+			if m:
+				for a in ('_q_parent', '_q_title', '_q_access'):
+					if not m.Page.__dict__.has_key(a):
+						print "Error: '%s' doesn't define %s" % (s,a)
+						sys.exit(1)
 
+				# instantiate eventually missing variables
+				if not m.Page.__dict__.has_key('_q_menu'):
+					m.Page._q_menu = []
+				if not m.Page.__dict__.has_key('_q_menupos'):
+					m.Page._q_menupos = 0
+				if not m.Page.__dict__.has_key('_q_exports'):
+					m.Page._q_exports = []
+				if not m.Page.__dict__.has_key('_q_desc'):
+					m.Page._q_desc = ''
+				if not m.Page.__dict__.has_key('_q_level'):
+					m.Page._q_level = 4
+				if not m.Page.__dict__.has_key('_q_link'):
+					m.Page._q_link = s[5:]
+				
+		# Build the menu structure for all page modules
 
-	try:
-		parent_mod = sys.modules[this_mod._q_parent]
-	except KeyError:
-		print "Note: %s does not exist, menu is now garbled" % this_mod._q_parent
-		parent_mod = sys.modules['page_main']
-	s = s[5:]	# strip 'page_'
+		for s in sys.modules:
+			if not s.startswith('page_'):
+				continue
+			if s == 'page_main':
+				continue
+			
+			this_mod = sys.modules[s].Page
+			if this_mod.__dict__.has_key('_q_test') and not this_mod()._q_test():
+				continue
 
-	#print s
-	#print "this:", this_mod
-	#print "parent:", parent_mod
+			try:
+				parent_mod = sys.modules[this_mod._q_parent].Page
+			except KeyError:
+				print "Note: %s does not exist, menu is now garbled" % this_mod._q_parent
+				parent_mod = sys.modules['page_main'].Page
+			s = s[5:]	# strip 'page_'
 
-	# Append module to parent's menu and export-list
-	link = this_mod._q_link
-	#parent_mod._q_menu.append( (link, this_mod._q_title, this_mod._q_desc, this_mod._q_level, this_mod))
-	if this_mod._q_title:
-		parent_mod._q_menu.append( this_mod )
-	parent_mod._q_exports.append( link )
-	# Make this module known in the parent's module namespace
-	parent_mod.__dict__[link] = this_mod
-	# 'Convert' the _q_parent from type String to type Module
-	this_mod.__dict__['_q_parent'] = parent_mod
+			# Append module to parent's menu and export-list
+			link = this_mod._q_link
+			#parent_mod._q_menu.append( (link, this_mod._q_title, this_mod._q_desc, this_mod._q_level, this_mod))
+			if this_mod._q_title:
+				parent_mod._q_menu.append( this_mod )
+			parent_mod._q_exports.append( link )
+			# Make this module known in the parent's module namespace
+			#parent_mod.__dict__[link] = this_mod
+			#import pdb; pdb.set_trace()
+			setattr(parent_mod, link, this_mod())
+			# 'Convert' the _q_parent from type String to type Module
+			#this_mod._q_parent = parent_mod
 
-
-def _q_exception_handler [plain] (request, exc):
-        if isinstance(exc, quixote.errors.AccessError) or isinstance(exc, quixote.errors.PublishError):
-	        if (exc.title == "Access denied"):
-			header(htmltext(_('Access Denied')))
-			'<p>'
-			htmltext(_("You don't have access to this page."))
-			'</p>'
-			footer()
-		else:
-			header(_(exc.title))
-			'<p>'
-			_(exc.public_msg)
-			'</p>'
-			footer()
-        else:
-		raise exc
-
-
-
-
 #######################################################################
 #
 # End of boilerplate, now comes the contents of 'page_main':
 #
 #######################################################################
 
+	def _q_index [plain] (self):
+                #session = get_session()
+		#if session.level < 1:
+		#	return get_request().redirect(str('/login'))
+		header(self._q_desc)
+		'<p>'
+		'This page is empty. Please select one option from the menu on the left side.'
+		'</p>'
+		footer()
+		#import configlets
 
+        def _q_access(self):
+                if get_session().level < self._q_level:
+                        cantAccessPage()
+	                #raise AccessError(htmltext(_("You don't have access to this page")))
 
+        def _q_exception_handler [plain] (self, exc):
+                if isinstance(exc, quixote.errors.AccessError) or isinstance(exc, quixote.errors.PublishError):
+                        if (exc.title == "Access denied"):
+                                #header(htmltext(_('Access Denied')))
+                                '<p>'
+                                htmltext(_("You don't have access to this page."))
+                                '</p>'
+                                footer()
+                        else:
+                                #header(_(exc.title))
+                                '<p>'
+                                _(exc.public_msg)
+                                '</p>'
+                                footer()
+                else:
+                        raise exc
 
-# Our main page
-def _q_index [plain] (request):
-	if request.session.level < 1:
-		return request.redirect(str('/login'))
-	header(_q_desc)
-	'<p>'
-	'This page is empty. Please select one option from the menu on the left side.'
-	'</p>'
-	footer()
-	import configlets
-	print len(configlets.configlet_tree)
 
+	#from page_login import Page as Page
+	#login = Page()
+	#login = __import__("page_main", "", "", "Page")
 
 # Out static things like images and style-sheets:
-static = StaticDirectory(os.path.abspath(os.getenv('STATICPAGES_DIR','static')), list_directory=1, follow_symlinks=1)
-graphs = StaticDirectory(os.path.abspath('/tmp'), list_directory=1, follow_symlinks=1)
-# pages = StaticDirectory(os.path.abspath(os.getenv('STATICPAGES_DIR','static')), list_directory=1, cache_time=60*60)
+	static = StaticDirectory(os.path.abspath(os.getenv('STATICPAGES_DIR','static')), list_directory=1, follow_symlinks=1)
+	graphs = StaticDirectory(os.path.abspath('/tmp'), list_directory=1, follow_symlinks=1)

Modified: trunk/page_owner.ptl
===================================================================
--- trunk/page_owner.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_owner.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,40 +19,46 @@
 
 
 from Templates import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 import backend
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_main'
-_q_title   = _("Virtual PBX Owner")
-_q_desc    = _("Perform administrative actions to PBX and extensions")
-_q_menupos = 20
-_q_level   = 2
+	_q_parent  = 'page_main'
+	_q_title   = _("Virtual PBX Owner")
+	_q_desc    = _("Perform administrative actions to PBX and extensions")
+	_q_menupos = 20
+	_q_level   = 2
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-	if not backend.getConfiglets(name='CfgOptPbx'):
-		cantAccessPage()
-        if not request.session.pbx:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
+		if not backend.getConfiglets(name='CfgOptPbx'):
+			cantAccessPage()
+		if not request.session.pbx:
+			cantAccessPage()
 
-def showMenu [plain] ():
-	'<table id="subcategories"><thead>'
-	'<tr>'
-	for s in (htmltext(_('Action')), htmltext(_('Description'))):
-		'<th>%s</th>' % s
-	'</tr></thead>'
-
-	for e in _q_menu:
+	def showMenu [plain] (self):
+		'<table id="subcategories"><thead>'
 		'<tr>'
-		'<td><a href="%s">%s</a></td>' % (e._q_link,_(e._q_title))
-		'<td>%s</td>' % _(e._q_desc)
-		'</tr>'
-	'</table>'
+		for s in (htmltext(_('Action')), htmltext(_('Description'))):
+			'<th>%s</th>' % s
+		'</thead></tr>'
 
+		for e in self._q_menu:
+			'<tr>'
+			'<td><a href="%s">%s</a></td>' % (e._q_link,_(e._q_title))
+			'<td>%s</td>' % _(e._q_desc)
+			'</tr>'
+		'</table>'
 
-def _q_index [plain] (request):
-	header(_q_desc)
-	showMenu()
-	footer()
+
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		showMenu()
+		footer()

Modified: trunk/page_owner_cdr.ptl
===================================================================
--- trunk/page_owner_cdr.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_owner_cdr.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -29,67 +29,17 @@
 
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 import cdrutils
 import time
 
-
-_q_parent = 'page_owner'
-_q_title  = _("Call Details For Virtual PBX")
-_q_desc   = _("Get statistics about made and received calls")
-_q_level  = 2
-
-
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-
-
-def _q_test():
-	return cdrutils.db
-
 def N_(message): return message
 
-def formScript [html] ():
-	'<script language="JavaScript" type="text/javascript"> \n'
-	'<!-- \n'
-	'function gotopage ( page ) \n'
-	'{ \n'
-	'  document.searchform.pagenumber.value = page; \n'
-	'  document.searchform.submit() ; \n'
-	'} \n'
-	'function orderby ( column, order ) \n'
-	'{ \n'
-	'  document.searchform.orderby.value = column; \n'
-	'  document.searchform.order.value = order; \n'
-	'  document.searchform.submit() ; \n'
-	'} \n'
-	'--> \n'
-	'</script> \n'
-
-def pageIndex [html] (pagenum, total, limit):
-	"<p>"
-	lastpage = total/limit
-	if pagenum > 1:
-		"<a href='javascript:gotopage(\"_newest\")'>%s</a> &nbsp; \n" % _(str("First"))
-		"<a href='javascript:gotopage(\"_newer\")'>%s</a> &nbsp; \n" % _(str("Previous"))
-	
-	pagelist = [i for i in range(pagenum-10, pagenum+10) if i >= 0 and  i < lastpage]
-
-	for i in pagelist:
-		if pagenum != (i+1):
-			"<a href='javascript:gotopage(\"%d\")'>%d</a> &nbsp; \n" % (i+1, i+1)
-		else:
-			"%d &nbsp; \n" % (i+1)
-
-	if pagenum < lastpage:
-		"<a href='javascript:gotopage(\"_older\")'>%s</a> &nbsp; \n" % _(str("Next"))
-		"<a href='javascript:gotopage(\"_oldest\")'>%s</a> \n" % _(str("Last"))
-	"</p>\n <br />"
-
 def     generateYearsNumbers():
-        years = range(2004,time.localtime()[0]+1)
-        return years
+	years = range(2004,time.localtime()[0]+1)
+	return years
 
 def	generateMonthsNumbers():
 	months = range(1,13)
@@ -111,199 +61,254 @@
 
 	
 operands=['=','<>','<=','<','>=','>']
-	
-def cdrForm [plain] (request, srcextension="", dstextension="", mincost="", duration="", clid=""):
+		
+class Page(AccessControlled, Directory): 
 
-	monthsnumbers = [ '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12' ]
-	monthsnames = [ _('January'), _('February'), _('March'), _('April'), _('May'), _('June'), _('July'), _('August'), _('September'), _('October'), _('November'), _('December') ]
+	_q_parent = 'page_owner'
+	_q_title  = _("Call Details For Virtual PBX")
+	_q_desc   = _("Get statistics about made and received calls")
+	_q_level  = 2
 
-	localtime = time.localtime()
-	
-	localyear = localtime[0]
-	
-	# fix the month value for those smaller than 10 (january ... september) 1 -> 01, 2 ->02 
-	if localtime[1] < 10:
-		localmonth = '0%s' % localtime[1] 
-	else:
-		localmonth = localtime[1]
-	
-	#the same for the day
-	if localtime[2] < 10:
-		localday = '0%s' % localtime[2]
-	else:
-		localday = localtime[2]
+	_q_exports = ['']
 
-	form = Form()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-	form.name = "searchform"
-	
-	form.add(StringWidget, "srcextension",  "%s" % srcextension, title=htmltext(_("Source ")),hint=htmltext(_("Wildcards: % is the 'zero or more characters' wildcard, and _ is the 'exactly one character' wildcard")), render_br=True )
-	form.add(StringWidget, "clid",  "%s" % clid, title=htmltext(_("Caller ID")),hint=htmltext(_("Wildcards: % is the 'zero or more characters' wildcard, and _ is the 'exactly one character' wildcard")), render_br=True )
-	form.add(StringWidget, "dstextension",  "%s" % dstextension, title=htmltext(_("Destination")),hint=htmltext(_("You can use the same wildcards as above")), render_br=True)
-	form.add(OptionSelectWidget, "durationoperand",  "%s" % duration, title=htmltext(_("Duration")), options=zip(operands,operands,operands),render_br=False)
-	form.add(StringWidget, "duration",  "%s" % duration, hint=htmltext(_("In seconds")),render_br=True)
-	form.add(OptionSelectWidget,'linesToShow', title=_('Number of records to show:'),options=zip( generateOptionSelect(), generateOptionSelect(text=True), generateOptionSelect() ), value=20)	
-	form.add_checkbox('searchBetweenDates',title= _("Search between the following dates"), render_br=True)
-	form.add_single_select('fromyear', title=htmltext(_('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Start:')), value="", options=zip( generateYearsNumbers(), generateYearsNumbers() ), render_br=False )
-	form.add_single_select('frommonth', options=zip( generateMonthsNumbers(), monthsnames, generateMonthsNumbers() ), render_br=False )
-	form.add_single_select('fromday', options=zip( generateDaysNumbers() , range(1,32), generateDaysNumbers() ), render_br=True )
-	form.add_single_select('toyear', value=localyear, title=htmltext(_('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End:')), options=zip( generateYearsNumbers(), generateYearsNumbers() ), render_br=False)
-	form.add_single_select('tomonth', value=localmonth, options=zip( generateMonthsNumbers(), monthsnames, generateMonthsNumbers() ), render_br=False)
-	form.add_single_select('today', value=localday, options=zip( generateDaysNumbers() , range(1,32), generateDaysNumbers()  ), render_br=True)
-		
-	form.add(HiddenWidget, 'pagenumber', value='_newest')
-	form.add(HiddenWidget, 'order', value='ASC')
-	form.add(HiddenWidget, 'orderby', value=_('Time_of_start'))
+	def _q_test(self):
+		return cdrutils.db
 
-	form.add(SubmitWidget, '_submit', _("Search"), render_br=True)
+	def formScript [html] (self):
+		'<script language="JavaScript" type="text/javascript"> \n'
+		'<!-- \n'
+		'function gotopage ( page ) \n'
+		'{ \n'
+		'  document.searchform.pagenumber.value = page; \n'
+		'  document.searchform.submit() ; \n'
+		'} \n'
+		'function orderby ( column, order ) \n'
+		'{ \n'
+		'  document.searchform.orderby.value = column; \n'
+		'  document.searchform.order.value = order; \n'
+		'  document.searchform.submit() ; \n'
+		'} \n'
+		'--> \n'
+		'</script> \n'
 
-	where = []
-	where.append("pbx like '%s%%'" % request.session.pbx)
-	
-	def render [html] ():
-
-		name = form['pagenumber']
+	def pageIndex [html] (self, pagenum, total, limit):
+		"<p>"
+		lastpage = total/limit
+		if pagenum > 1:
+			"<a href='javascript:gotopage(\"_newest\")'>%s</a> &nbsp; \n" % _(str("First"))
+			"<a href='javascript:gotopage(\"_newer\")'>%s</a> &nbsp; \n" % _(str("Previous"))
 		
-		global pagenum
+		pagelist = [i for i in range(pagenum-10, pagenum+10) if i >= 0 and  i < lastpage]
 
-		if not name in ['_newest','_newer', '_older', '_oldest']:
-			pagenum = int(name)
+		for i in pagelist:
+			if pagenum != (i+1):
+				"<a href='javascript:gotopage(\"%d\")'>%d</a> &nbsp; \n" % (i+1, i+1)
+			else:
+				"%d &nbsp; \n" % (i+1)
 
-		cursor = cdrutils.count(where = where)
-		total = cursor
+		if pagenum < lastpage:
+			"<a href='javascript:gotopage(\"_older\")'>%s</a> &nbsp; \n" % _(str("Next"))
+			"<a href='javascript:gotopage(\"_oldest\")'>%s</a> \n" % _(str("Last"))
+		"</p>\n <br />"
 
-		global q
-		global p
+	def cdrForm [plain] (self, request, srcextension="", dstextension="", mincost="", duration="", clid=""):
 
-		p = form["linesToShow"]
+		monthsnumbers = [ '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12' ]
+		monthsnames = [ _('January'), _('February'), _('March'), _('April'), _('May'), _('June'), _('July'), _('August'), _('September'), _('October'), _('November'), _('December') ]
 
-		if p == 0:
-			p = total
+		localtime = time.localtime()
 		
-		if (name == True or name == '1' or name == '_newest'):
-			pagenum = 1
-			q = 0
-	
-		elif name == '_newer': 
-			pagenum -= 1
-			q = q-form["linesToShow"]
-			if q < 0:
-				q=0
-							
-					
-		elif name == '_older': 
-			pagenum += 1
-			q += p
-			if q >= total:
-				q = total - total % p
+		localyear = localtime[0]
 		
-		elif name == '_oldest':
-			q = total - total % p
-			pagenum = total / p
+		# fix the month value for those smaller than 10 (january ... september) 1 -> 01, 2 ->02 
+		if localtime[1] < 10:
+			localmonth = '0%s' % localtime[1] 
+		else:
+			localmonth = localtime[1]
+		
+		#the same for the day
+		if localtime[2] < 10:
+			localday = '0%s' % localtime[2]
+		else:
+			localday = localtime[2]
 
-		elif name in [str(x+1) for x in range(total/p)]:
-			q = int(name) * p
+		form = Form()
+
+		form.name = "searchform"
+		
+		form.add(StringWidget, "srcextension",  "%s" % srcextension, title=htmltext(_("Source ")),hint=htmltext(_("Wildcards: % is the 'zero or more characters' wildcard, and _ is the 'exactly one character' wildcard")), render_br=True )
+		form.add(StringWidget, "clid",  "%s" % clid, title=htmltext(_("Caller ID")),hint=htmltext(_("Wildcards: % is the 'zero or more characters' wildcard, and _ is the 'exactly one character' wildcard")), render_br=True )
+		form.add(StringWidget, "dstextension",  "%s" % dstextension, title=htmltext(_("Destination")),hint=htmltext(_("You can use the same wildcards as above")), render_br=True)
+		form.add(OptionSelectWidget, "durationoperand",  "%s" % duration, title=htmltext(_("Duration")), options=zip(operands,operands,operands),render_br=False)
+		form.add(StringWidget, "duration",  "%s" % duration, hint=htmltext(_("In seconds")),render_br=True)
+		form.add(OptionSelectWidget,'linesToShow', title=_('Number of records to show:'),options=zip( generateOptionSelect(), generateOptionSelect(text=True), generateOptionSelect() ), value=20)	
+		form.add_checkbox('searchBetweenDates',title= _("Search between the following dates"), render_br=True)
+		form.add_single_select('fromyear', title=htmltext(_('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Start:')), value="", options=zip( generateYearsNumbers(), generateYearsNumbers() ), render_br=False )
+		form.add_single_select('frommonth', options=zip( generateMonthsNumbers(), monthsnames, generateMonthsNumbers() ), render_br=False )
+		form.add_single_select('fromday', options=zip( generateDaysNumbers() , range(1,32), generateDaysNumbers() ), render_br=True )
+		form.add_single_select('toyear', value=localyear, title=htmltext(_('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End:')), options=zip( generateYearsNumbers(), generateYearsNumbers() ), render_br=False)
+		form.add_single_select('tomonth', value=localmonth, options=zip( generateMonthsNumbers(), monthsnames, generateMonthsNumbers() ), render_br=False)
+		form.add_single_select('today', value=localday, options=zip( generateDaysNumbers() , range(1,32), generateDaysNumbers()  ), render_br=True)
 			
-			if q >= total:
-				q = total - total % p
+		form.add(HiddenWidget, 'pagenumber', value='_newest')
+		form.add(HiddenWidget, 'order', value='ASC')
+		form.add(HiddenWidget, 'orderby', value=_('Time_of_start'))
+
+		form.add(SubmitWidget, '_submit', _("Search"), render_br=True)
+
+		where = []
+		where.append("pbx like '%s%%'" % request.session.pbx)
+		
+		def render [html] ():
+
+			name = form['pagenumber']
 			
-		elif p == total:
-			q = 0
-		else : 
-			p = 20
-			q = 0
-				
-		form.render()
-		pageIndex(pagenum, total, p)
-		cdrShowResults(where, p, q, total,form["orderby"],form["order"])
+			global pagenum
 
-	if not form.is_submitted() or form.has_errors():
-		return render()
-	
-	if form["srcextension"]:
-		where.append("src like '%s'" % form["srcextension"])
-	if form["clid"]:
-		where.append("clid like '%s'" % form["clid"])
-	if form["dstextension"]:
-		where.append("dst like '%s'" % form["dstextension"])
-	if form["duration"]:
-		where.append("billsec %s '%s'" % (form["durationoperand"],form["duration"]))
+			if not name in ['_newest','_newer', '_older', '_oldest']:
+				pagenum = int(name)
+
+			cursor = cdrutils.count(where = where)
+			total = cursor
+
+			global q
+			global p
+
+			p = form["linesToShow"]
+
+			if p == 0:
+				p = total
 			
-	if form["searchBetweenDates"]:
-	
-		fromdate = "%s-%s-%s" % (form["fromyear"], form["frommonth"], form["fromday"])
-		where.append ("date(start) >= date('%s')" % fromdate )
-	
-		todate = "%s-%s-%s" % (form["toyear"], form["tomonth"], form["today"])
-		where.append ("date(end) <= date('%s')" % todate)
-	
-	return render()
+			if (name == True or name == '1' or name == '_newest'):
+				pagenum = 1
+				q = 0
+		
+			elif name == '_newer': 
+				pagenum -= 1
+				q = q-form["linesToShow"]
+				if q < 0:
+					q=0
+								
+						
+			elif name == '_older': 
+				pagenum += 1
+				q += p
+				if q >= total:
+					q = total - total % p
+			
+			elif name == '_oldest':
+				q = total - total % p
+				pagenum = total / p
 
-def	cdrShowResults [html] (where=[], limit, offset, total = 0, field=_("Time_of_start"), order="DESC"):
-	if total == 0:
-		'<p>'
-		'--No records to Show--'
-		'</p>'
-	else:
-		orderby = '%s %s' % (N_(field), order)	
-		cursor = cdrutils.select(order=[str(orderby)], where = where, limit = limit, offset = offset)
+			elif name in [str(x+1) for x in range(total/p)]:
+				q = int(name) * p
+				
+				if q >= total:
+					q = total - total % p
+				
+			elif p == total:
+				q = 0
+			else : 
+				p = 20
+				q = 0
+					
+			form.render()
+			pageIndex(pagenum, total, p)
+			cdrShowResults(where, p, q, total,form["orderby"],form["order"])
+
+		if not form.is_submitted() or form.has_errors():
+			return render()
 		
-		totalcost = 0
-		totalmin = 0
+		if form["srcextension"]:
+			where.append("src like '%s'" % form["srcextension"])
+		if form["clid"]:
+			where.append("clid like '%s'" % form["clid"])
+		if form["dstextension"]:
+			where.append("dst like '%s'" % form["dstextension"])
+		if form["duration"]:
+			where.append("billsec %s '%s'" % (form["durationoperand"],form["duration"]))
+				
+		if form["searchBetweenDates"]:
 		
-		row = cursor.fetchone()
-		if row and int(offset) >= 0 and int(offset) <= total and cursor.description:
+			fromdate = "%s-%s-%s" % (form["fromyear"], form["frommonth"], form["fromday"])
+			where.append ("date(start) >= date('%s')" % fromdate )
 		
-			'<table border="1"><thead><tr>'
-                	for s in cursor.description:
-				'<th>'
-				if s[0] == field:
-					neworder = (order=='ASC' and 'DESC') or 'ASC'
-					"<a href='javascript:orderby(\"%s\",\"%s\")'>%s</a>" % (s[0], neworder, _(str(s[0])))
-					if order=='ASC':
-						" <img src='/static/down.gif' border='0' alt='%s'>\n" % _(str('Asc. Order'))
-					else:
-						" <img src='/static/up.gif' border='0' alt='%s'>\n" % _(str('Desc. Order'))
-				else:
-					"<a href='javascript:orderby(\"%s\",\"%s\")'>%s</a>" % (s[0], order, _(str(s[0])))
-				'</th>'
-                	'</tr></thead><tbody>'
+			todate = "%s-%s-%s" % (form["toyear"], form["tomonth"], form["today"])
+			where.append ("date(end) <= date('%s')" % todate)
 		
-			if cursor.description:
-				fieldIndices = range(len(cursor.description))
-			else:
-				fieldIndices = []
+		return render()
 
-                	while row:
-	                	'<tr>'
-				for fieldIndex in fieldIndices:
-					'<td><center>'
-					if row[fieldIndex] == "1969-12-31 19:00:00":
-						'-'
-					elif cursor.description[fieldIndex][0] == _(str("Duration")):
-						s = int(row[fieldIndex])
-						min = (s % 60) and ((s / 60) + 1) or (s / 60)
-                                               	totalmin += min
-						min
-					else: 
-						row[fieldIndex]
-        	                       	'</center></td>'
-				'</tr>'
-				row = cursor.fetchone()
-                	'</tbody></table><br/>'
+	def	cdrShowResults [html] (where=[], limit, offset, total = 0, field=_("Time_of_start"), order="DESC"):
+		if total == 0:
 			'<p>'
+			'--No records to Show--'
+			'</p>'
+		else:
+			orderby = '%s %s' % (N_(field), order)	
+			cursor = cdrutils.select(order=[str(orderby)], where = where, limit = limit, offset = offset)
+			
+			totalcost = 0
+			totalmin = 0
+			
+			row = cursor.fetchone()
+			if row and int(offset) >= 0 and int(offset) <= total and cursor.description:
+			
+				'<table border="1"><thead><tr>'
+				for s in cursor.description:
+					'<th>'
+					if s[0] == field:
+						neworder = (order=='ASC' and 'DESC') or 'ASC'
+						"<a href='javascript:orderby(\"%s\",\"%s\")'>%s</a>" % (s[0], neworder, _(str(s[0])))
+						if order=='ASC':
+							" <img src='/static/down.gif' border='0' alt='%s'>\n" % _(str('Asc. Order'))
+						else:
+							" <img src='/static/up.gif' border='0' alt='%s'>\n" % _(str('Desc. Order'))
+					else:
+						"<a href='javascript:orderby(\"%s\",\"%s\")'>%s</a>" % (s[0], order, _(str(s[0])))
+					'</th>'
+				'</tr></thead><tbody>'
+			
+				if cursor.description:
+					fieldIndices = range(len(cursor.description))
+				else:
+					fieldIndices = []
 
-			f = offset + limit
-			if total >= f:			
-				_(str('Showing records from %s to %s of %s <br /><br />')) % (offset+1, f, total)
-			else:
-				_(str('Showing records from %s to %s of %s <br /><br />')) % (offset+1, total, total)
+				while row:
+					'<tr>'
+					for fieldIndex in fieldIndices:
+						'<td><center>'
+						if row[fieldIndex] == "1969-12-31 19:00:00":
+							'-'
+						elif cursor.description[fieldIndex][0] == _(str("Duration")):
+							s = int(row[fieldIndex])
+							min = (s % 60) and ((s / 60) + 1) or (s / 60)
+							totalmin += min
+							min
+						else: 
+							row[fieldIndex]
+						'</center></td>'
+					'</tr>'
+					row = cursor.fetchone()
+				'</tbody></table><br/>'
+				'<p>'
 
-		_(str('Total Duration of shown calls: %s min.' % totalmin))
-		'</p>'
+				f = offset + limit
+				if total >= f:			
+					_(str('Showing records from %s to %s of %s <br /><br />')) % (offset+1, f, total)
+				else:
+					_(str('Showing records from %s to %s of %s <br /><br />')) % (offset+1, total, total)
 
+			_(str('Total Duration of shown calls: %s min.' % totalmin))
+			'</p>'
 
-def _q_index [plain] (request):
-	header(_q_desc, scripts=[formScript])
-	cdrForm(request)
-	footer()
+
+	def _q_index [plain] (self):
+		header(self._q_desc, scripts=[formScript])
+		cdrForm()
+		footer()

Modified: trunk/page_stats.ptl
===================================================================
--- trunk/page_stats.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_stats.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,36 +19,40 @@
 
 
 from Templates import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_main'
-_q_title   = _("Statistics")
-_q_desc    = _("Global PBX statistics and CDR")
-_q_menupos = 20
-_q_level   = 3
+	_q_parent  = 'page_main'
+	_q_title   = _("Statistics")
+	_q_desc    = _("Global PBX statistics and CDR")
+	_q_menupos = 20
+	_q_level   = 3
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-def showMenu [plain] ():
-	'<table id="subcategories"><thead>'
-	'<tr>'
-	for s in (htmltext(_('Statistics')), htmltext(_('Description'))):
-		'<th>%s</th>' % s
-	'</tr></thead>'
-
-	for e in _q_menu:
+	def showMenu [plain] (self):
+		'<table id="subcategories"><thead>'
 		'<tr>'
-		'<td><a href="%s">%s</a></td>' % (e._q_link,_(e._q_title))
-		'<td>%s</td>' % _(e._q_desc)
-		'</tr>'
-	'</table>'
+		for s in (htmltext(_('Statistics')), htmltext(_('Description'))):
+			'<th>%s</th>' % s
+		'</thead></tr>'
 
+		for e in self._q_menu:
+			'<tr>'
+			'<td><a href="%s">%s</a></td>' % (e._q_link,_(e._q_title))
+			'<td>%s</td>' % _(e._q_desc)
+			'</tr>'
+		'</table>'
 
-
-def _q_index [plain] (request):
-	header(_q_desc)
-	showMenu()
-	footer()
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		self.showMenu()
+		footer()

Modified: trunk/page_stats_calls.ptl
===================================================================
--- trunk/page_stats_calls.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_stats_calls.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -23,31 +23,19 @@
 #	- Delete graphic files after it use
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
 import cdrutils
 import time
 from StatsHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
 pychart_exists = True
 try:	
 	from pychart import *
 except ImportError:
 	pychart_exists = False
-	
 
-_q_parent = 'page_stats'
-_q_title  = _("Calls Statistics")
-_q_desc   = _("Calls Statistics")
-_q_level  = 3
-_q_menupos = 30
-
-def _q_access(request):
-	if request.session.level < _q_level:
-		cantAccessPage()
-
-def _q_test():
-	return cdrutils.db
-
 def N_(message): return message
 
 def makeForm():
@@ -77,7 +65,7 @@
 	form.add(SubmitWidget, '_submit', _("Submit"), render_br=True)
 	
 	return form
-		
+
 def perHourInDay [plain] (day, month, year):
 	
 	date = "%s-%s-%s" % (year, month, day)
@@ -230,7 +218,7 @@
 		htmltext("%s" % _("Sorry, this kind of query is not supported yet"))
 		htmltext("</p>")
 
-def cdrForm [plain] (request):
+def cdrForm [plain] ():
 	htmltext("<h3>%s</h3>" % _("Statistics of Calls by Date:"))
 	form = makeForm()
 	form.render()
@@ -238,12 +226,31 @@
 	if form.is_submitted() and not form.has_errors():
 		htmltext("<h3>%s</h3>" % _("Results"))
 		showResults(form["day"], form["month"], form["year"])
-	
-def _q_index [plain] (request):
-	header(_q_desc)
-	if pychart_exists:
-		cdrForm(request)
-	else:
-		_("You need to install pychart and use a cdr with sqlite to get these statistics")
-	footer()
-	
+		
+class Page(AccessControlled, Directory): 
+
+	_q_parent = 'page_stats'
+	_q_title  = _("Calls Statistics")
+	_q_desc   = _("Calls Statistics")
+	_q_level  = 3
+	_q_menupos = 30
+
+	_q_exports = ['']
+
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
+
+	def _q_test(self):
+		return cdrutils.db
+
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		if pychart_exists:
+			cdrForm()
+		else:
+			_("You need to install pychart and use a cdr with sqlite to get these statistics")
+		footer()
+		

Modified: trunk/page_stats_cdr.ptl
===================================================================
--- trunk/page_stats_cdr.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_stats_cdr.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -29,26 +29,12 @@
 
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 import cdrutils
 import time
 
-
-_q_parent = 'page_stats'
-_q_title  = _("Call Details")
-_q_desc   = _("Get statistics about made and received calls")
-_q_level  = 3
-_q_menupos = 20
-
-
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-
-
-def _q_test():
-	return cdrutils.db
-
 def M_(message): return _(str(message))
 
 def N_(message): return message
@@ -308,7 +294,26 @@
 		'</p>'
 
 
-def _q_index [plain] (request):
-	header(_q_desc, scripts=[formScript])
-	cdrForm(request)
-	footer()
+class Page(AccessControlled, Directory): 
+
+	_q_parent = 'page_stats'
+	_q_title  = _("Call Details")
+	_q_desc   = _("Get statistics about made and received calls")
+	_q_level  = 3
+	_q_menupos = 20
+
+	_q_exports = ['']
+
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
+
+	def _q_test(self):
+		return cdrutils.db
+
+	def _q_index [plain] (self):
+		header(self._q_desc, scripts=[formScript])
+		cdrForm(request)
+		footer()

Modified: trunk/page_stats_dialouts.ptl
===================================================================
--- trunk/page_stats_dialouts.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_stats_dialouts.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -18,11 +18,13 @@
 #
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
 import cdrutils
 import time
 import backend
 from StatsHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
 pychart_exists = True
 try:	
@@ -30,19 +32,6 @@
 except ImportError:
 	pychart_exists = False
 
-_q_parent = 'page_stats'
-_q_title  = _("Dialout Statistics")
-_q_desc   = _("Statistics for Dialout Entries")
-_q_level  = 3
-_q_menupos = 32
-
-def _q_access(request):
-	if request.session.level < _q_level:
-		cantAccessPage()
-
-def _q_test():
-	return cdrutils.db
-
 def makeForm():
 	localtime = time.localtime()
 	
@@ -175,12 +164,32 @@
 	if form.is_submitted() and not form.has_errors():
 		htmltext("<h3>%s</h3>" % _("Results"))
 		showResults(form["day1"], form["month1"], form["year1"], form["day2"], form["month2"], form["year2"])
+
 	
-def _q_index [plain] (request):
-	header(_q_desc)
-	if pychart_exists:
-		cdrForm(request)
-	else:
-		_("You need to install pychart and use a cdr with sqlite to get these statistics")
-	footer()
-	
+class Page(AccessControlled, Directory): 
+
+	_q_parent = 'page_stats'
+	_q_title  = _("Dialout Statistics")
+	_q_desc   = _("Statistics for Dialout Entries")
+	_q_level  = 3
+	_q_menupos = 32
+
+	_q_exports = ['']
+
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
+
+	def _q_test(self):
+		return cdrutils.db
+
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		if pychart_exists:
+			cdrForm(request)
+		else:
+			_("You need to install pychart and use a cdr with sqlite to get these statistics")
+		footer()
+		

Modified: trunk/page_stats_phone.ptl
===================================================================
--- trunk/page_stats_phone.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_stats_phone.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -18,11 +18,13 @@
 #
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
 import cdrutils
 import time
 import backend
 from StatsHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 
 pychart_exists = True
 try:	
@@ -30,19 +32,6 @@
 except ImportError:
 	pychart_exists = False
 
-_q_parent = 'page_stats'
-_q_title  = _("Extension Statistics")
-_q_desc   = _("Statistics for an Extension")
-_q_level  = 3
-_q_menupos = 32
-
-def _q_access(request):
-	if request.session.level < _q_level:
-		cantAccessPage()
-
-def _q_test():
-	return cdrutils.db
-
 def makeForm():
 	localtime = time.localtime()
 	
@@ -174,7 +163,7 @@
 	htmltext('<br/><br/><h3>%s</h3>' % _('Outgoing Calls per Dialout Entry'))
 	makeCallsTable(_("Dialout Name"), out_calls_per_dialout, dialout_names)
 	
-def cdrForm [plain] (request):
+def cdrForm [plain] ():
 	htmltext("<h3>%s</h3>" % _("Statistics of Calls by Dialout Entry:"))
 	form = makeForm()
 	form.render()
@@ -182,12 +171,31 @@
 	if form.is_submitted() and not form.has_errors():
 		htmltext("<h3>%s</h3>" % _("Results"))
 		showResults(form["day1"], form["month1"], form["year1"], form["day2"], form["month2"], form["year2"], form["ext"], form["clid"])
+
+
+class Page(AccessControlled, Directory): 
+		
+	_q_parent = 'page_stats'
+	_q_title  = _("Extension Statistics")
+	_q_desc   = _("Statistics for an Extension")
+	_q_level  = 3
+	_q_menupos = 32
+
+	_q_exports = ['']
+
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
+	def _q_test(self):
+		return cdrutils.db
+
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		if pychart_exists:
+			cdrForm()
+		else:
+			_("You need to install pychart and use a cdr with sqlite to get these statistics")
+		footer()
 	
-def _q_index [plain] (request):
-	header(_q_desc)
-	if pychart_exists:
-		cdrForm(request)
-	else:
-		_("You need to install pychart and use a cdr with sqlite to get these statistics")
-	footer()
-	

Modified: trunk/page_stats_trunks.ptl
===================================================================
--- trunk/page_stats_trunks.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_stats_trunks.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -18,11 +18,13 @@
 #
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
 import cdrutils
 import time
 import backend
 from StatsHelper import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session
 
 pychart_exists = True
 try:	
@@ -30,19 +32,6 @@
 except ImportError:
 	pychart_exists = False
 
-_q_parent = 'page_stats'
-_q_title  = _("Trunk Statistics")
-_q_desc   = _("Statistics for Trunks")
-_q_level  = 3
-_q_menupos = 32
-
-def _q_access(request):
-	if request.session.level < _q_level:
-		cantAccessPage()
-
-def _q_test():
-	return cdrutils.db
-
 def makeForm():
 	localtime = time.localtime()
 	
@@ -181,7 +170,7 @@
 	htmltext('<br/><br/><h3>%s</h3>' % _('Outgoing Calls per Trunk'))
 	makeCallsTable(_("Trunk Name"), out_calls_per_trunk, trunk_names)
 	
-def cdrForm [plain] (request):
+def cdrForm [plain] ():
 	htmltext("<h3>%s</h3>" % _("Statistics of Calls by Trunk:"))
 	form = makeForm()
 	form.render()
@@ -190,11 +179,29 @@
 		htmltext("<h3>%s</h3>" % _("Results"))
 		showResults(form["day1"], form["month1"], form["year1"], form["day2"], form["month2"], form["year2"])
 	
-def _q_index [plain] (request):
-	header(_q_desc)
-	if pychart_exists:
-		cdrForm(request)
-	else:
-		_("You need to install pychart and use a cdr with sqlite to get these statistics")
-	footer()
-	
+class Page(AccessControlled, Directory): 
+
+	_q_parent = 'page_stats'
+	_q_title  = _("Trunk Statistics")
+	_q_desc   = _("Statistics for Trunks")
+	_q_level  = 3
+	_q_menupos = 32
+
+	_q_exports = ['']
+
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
+	def _q_test(self):
+		return cdrutils.db
+
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		if pychart_exists:
+			cdrForm()
+		else:
+			_("You need to install pychart and use a cdr with sqlite to get these statistics")
+		footer()
+		

Modified: trunk/page_user.ptl
===================================================================
--- trunk/page_user.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_user.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,35 +19,41 @@
 
 
 from Templates import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 
+class Page(AccessControlled, Directory): 
 
-_q_parent  = 'page_main'
-_q_title   = _("User")
-_q_desc    = _("Perform tasks allowed by users")
-_q_menupos = 10
-_q_level   = 1
+	_q_parent  = 'page_main'
+	_q_title   = _("User")
+	_q_desc    = _("Perform tasks allowed by users")
+	_q_menupos = 10
+	_q_level   = 1
 
+	_q_exports = ['']
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-def showMenu [plain] ():
-	'<table id="subcategories"><thead>'
-	'<tr>'
-	for s in (htmltext(_('Available actions')), htmltext(_('Description'))):
-		'<th>%s</th>' % s
-	'</tr></thead>'
-
-	for e in _q_menu:
+	def showMenu [plain] (self):
+		'<table id="subcategories"><thead>'
 		'<tr>'
-		'<td><a href="%s">%s</a></td>' % (e._q_link,e._q_title)
-		'<td>%s</td>' % e._q_desc
-		'</tr>'
-	'</table>'
+		for s in (htmltext(_('Available actions')), htmltext(_('Description'))):
+			'<th>%s</th>' % s
+		'</thead></tr>'
 
+		for e in self._q_menu:
+			'<tr>'
+			'<td><a href="%s">%s</a></td>' % (e._q_link,e._q_title)
+			'<td>%s</td>' % e._q_desc
+			'</tr>'
+		'</table>'
 
-def _q_index [plain] (request):
-	header(_q_desc)
-	showMenu()
-	footer()
+
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		self.showMenu()
+		footer()

Modified: trunk/page_user_info.ptl
===================================================================
--- trunk/page_user_info.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_user_info.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,68 +19,75 @@
 
 
 from Templates import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 import backend, manager
 import time
 
-_q_parent  = 'page_user'
-_q_title   = _("User Info")
-_q_desc    = _("Your access rights in DeStar")
-_q_link    = 'info'
-_q_menupos = 10
-_q_level   = 0
+class Page(AccessControlled, Directory): 
 
+	_q_parent  = 'page_user'
+	_q_title   = _("User Info")
+	_q_desc    = _("Your access rights in DeStar")
+	_q_link    = 'info'
+	_q_menupos = 10
+	_q_level   = 0
 
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
+	_q_exports = ['']
 
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
 
-def _q_index [plain] (request):
-	header(_q_desc)
 
-	'<p>'
-	if request.session.user:
-		htmltext(_('You are now logged in as user'))
-		" '<b>"
-		request.session.user
-		"</b>'. "
-		if request.session.level:
-			htmltext(_("Your access level is "))
-			levels=[_("disabled"),
-				_("User"),
-				_("Administrator"),
-				_("Configurator"),
-				_("Programmer")]
-			"'%s'. " % levels[request.session.level]
+	def _q_index [plain] (self):
+		header(self._q_desc)
+
+		'<p>'
+		if self.session.user:
+			htmltext(_('You are now logged in as user'))
+			" '<b>"
+			self.session.user
+			"</b>'. "
+			if self.session.level:
+				htmltext(_("Your access level is "))
+				levels=[_("disabled"),
+					_("User"),
+					_("Administrator"),
+					_("Configurator"),
+					_("Programmer")]
+				"'%s'. " % levels[self.session.level]
+			else:
+				htmltext(_("Your account is disabled. "))
 		else:
-			htmltext(_("Your account is disabled. "))
-	else:
-		htmltext(_("You are not logged in."))
-	' '
-	htmltext(_('You can do'))
-	":</p><ul>"
-	if request.session.level >= 0:
-		"<li>"
-		htmltext(_('Access all public accessible info pages'))
-		"</li>"
-	if request.session.level >= 1 and request.session.phone:
-		"<li>"
-		htmltext(_('Change your personal phone settings'))
-		"</li>"
-	if request.session.level >= 2:
-		"<li>"
-		htmltext(_('Change phone settings of other people'))
-		"</li>"
-	if request.session.level >= 3:
-		"<li>"
-		htmltext(_('Configure the PBX'))
-		"</li>"
-	if request.session.level >= 4:
-		"<li>"
-		htmltext(_('Access debug pages to help program DeStar'))
-		"</li>"
-	"</ul><p>"
-	htmltext(_("Have fun!"))
-	"</p>"
+			htmltext(_("You are not logged in."))
+		' '
+		htmltext(_('You can do'))
+		":</p><ul>"
+		if self.session.level >= 0:
+			"<li>"
+			htmltext(_('Access all public accessible info pages'))
+			"</li>"
+		if self.session.level >= 1 and self.session.phone:
+			"<li>"
+			htmltext(_('Change your personal phone settings'))
+			"</li>"
+		if self.session.level >= 2:
+			"<li>"
+			htmltext(_('Change phone settings of other people'))
+			"</li>"
+		if self.session.level >= 3:
+			"<li>"
+			htmltext(_('Configure the PBX'))
+			"</li>"
+		if self.session.level >= 4:
+			"<li>"
+			htmltext(_('Access debug pages to help program DeStar'))
+			"</li>"
+		"</ul><p>"
+		htmltext(_("Have fun!"))
+		"</p>"
 
-	footer()
+		footer()

Modified: trunk/page_user_quickdiallist.ptl
===================================================================
--- trunk/page_user_quickdiallist.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_user_quickdiallist.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -20,22 +20,12 @@
 
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 import backend, manager, configlets
 import time,types
 
-_q_parent  = 'page_user'
-_q_title   = _("Quick Dial List")
-_q_desc    = _("Quick Dial List")
-_q_link    = 'quickdiallist'
-_q_menupos = 10
-_q_level   = 1
-
-
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-
 def QDList [plain] (obj):
 	global_qdlist = manager.getVarFamily("QUICKDIALLIST/GLOBAL")
 	private_qdlist = manager.getVarFamily("QUICKDIALLIST/%s" % obj.ext)
@@ -68,24 +58,42 @@
 		htmltext(_("No Private Shorcuts Found on Database"))
 		'</span></p>'
 	
-def _q_index [plain] (request):
-	header(_q_desc,refresh=10)
-	manager.connect()
-	if not manager.isConnected():
-		'<p><span class="errornotice">'
-		htmltext(_("Asterisk is not running!"))
-		'</span></p>'
-	elif not manager.isLoggedIn():
-		# TODO: describe how to set this up
-		'<p><span class="errornotice">'
-		htmltext(_("The manager access is not working!"))
-		'</span></p>'
-	elif request.session.phone: 
-		phone = backend.getConfiglet(name=request.session.phone)
-		QDList(phone)
-	else:
-		'<p><span class="errornotice">'
-		htmltext(_("You don't have an associated phone"))
-		'</span></p>'
-	footer()
+class Page(AccessControlled, Directory): 
 
+	_q_parent  = 'page_user'
+	_q_title   = _("Quick Dial List")
+	_q_desc    = _("Quick Dial List")
+	_q_link    = 'quickdiallist'
+	_q_menupos = 10
+	_q_level   = 1
+
+	_q_exports = ['']
+
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
+
+	
+	def _q_index [plain] (self):
+		header(self._q_desc, refresh=10)
+		manager.connect()
+		if not manager.isConnected():
+			'<p><span class="errornotice">'
+			htmltext(_("Asterisk is not running!"))
+			'</span></p>'
+		elif not manager.isLoggedIn():
+			# TODO: describe how to set this up
+			'<p><span class="errornotice">'
+			htmltext(_("The manager access is not working!"))
+			'</span></p>'
+		elif self.session.phone: 
+			phone = backend.getConfiglet(name=self.session.phone)
+			QDList(phone)
+		else:
+			'<p><span class="errornotice">'
+			htmltext(_("You don't have an associated phone"))
+			'</span></p>'
+		footer()
+

Modified: trunk/page_user_settings.ptl
===================================================================
--- trunk/page_user_settings.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_user_settings.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,25 +19,15 @@
 
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 import backend, manager, configlets
 import time,types
 
-_q_parent  = 'page_user'
-_q_title   = _("Phone Settings")
-_q_desc    = _("Set your phone settings")
-_q_link    = 'settings'
-_q_menupos = 10
-_q_level   = 1
+def phoneSettingsForm(self, phone, exitPath=".."):
 
-
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-
-def phoneSettingsForm(request, phone, exitPath=".."):
-
-	if request.form.has_key('_cancel'):
+	if self.form.has_key('_cancel'):
 		return request.redirect(exitPath)
 	form = Form()
 
@@ -100,27 +90,44 @@
 		htmltext(_("Could not create destar configuration file."))
 		'.</p>'
 
-	return request.redirect(exitPath)
+	return redirect(exitPath)
 
-def _q_index [plain] (request):
-	header(_q_desc)
-	manager.connect()
-	if not manager.isConnected():
-		'<p><span class="errornotice">'
-		htmltext(_("Asterisk is not running!"))
-		'</span></p>'
-	elif not manager.isLoggedIn():
-		# TODO: describe how to set this up
-		'<p><span class="errornotice">'
-		htmltext(_("The manager access is not working!"))
-		'</span></p>'
-	elif request.session.phone: 
-		phone = backend.getConfiglet(name=request.session.phone)
-		phone.fixup()
-		phoneSettingsForm(request,phone)
-	else:
-		'<p><span class="errornotice">'
-		htmltext(_("You don't have an associated phone"))
-		'</span></p>'
-	footer()
+class Page(AccessControlled, Directory): 
 
+	_q_parent  = 'page_user'
+	_q_title   = _("Phone Settings")
+	_q_desc    = _("Set your phone settings")
+	_q_link    = 'settings'
+	_q_menupos = 10
+	_q_level   = 1
+
+	_q_exports = ['']
+
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
+
+	def _q_index [plain] (self):
+		header(self._q_desc)
+		manager.connect()
+		if not manager.isConnected():
+			'<p><span class="errornotice">'
+			htmltext(_("Asterisk is not running!"))
+			'</span></p>'
+		elif not manager.isLoggedIn():
+			# TODO: describe how to set this up
+			'<p><span class="errornotice">'
+			htmltext(_("The manager access is not working!"))
+			'</span></p>'
+		elif self.session.phone: 
+			phone = backend.getConfiglet(name=self.session.phone)
+			phone.fixup()
+			phoneSettingsForm(self.request, phone)
+		else:
+			'<p><span class="errornotice">'
+			htmltext(_("You don't have an associated phone"))
+			'</span></p>'
+		footer()
+

Modified: trunk/page_user_state.ptl
===================================================================
--- trunk/page_user_state.ptl	2007-01-22 21:27:23 UTC (rev 576)
+++ trunk/page_user_state.ptl	2007-01-23 00:01:51 UTC (rev 577)
@@ -19,22 +19,12 @@
 
 
 from Templates import *
-from quixote.form2 import *
+from quixote.form import *
+from quixote.directory import Directory, AccessControlled
+from quixote import get_request, get_session, redirect
 import backend, manager, configlets
 import time,types
 
-_q_parent  = 'page_user'
-_q_title   = _("Phone State")
-_q_desc    = _("Status of your phone")
-_q_link    = 'state'
-_q_menupos = 10
-_q_level   = 1
-
-
-def _q_access(request):
-        if request.session.level < _q_level:
-		cantAccessPage()
-
 def phoneState [plain] (obj):
 	(phones, other) = backend.determineStateOfPhones()
 	
@@ -128,27 +118,43 @@
 	'</tbody>'
 	'</table>'
 
-		
-	
-def _q_index [plain] (request):
-	header(_q_desc,refresh=10)
-	manager.connect()
-	if not manager.isConnected():
-		'<p><span class="errornotice">'
-		htmltext(_("Asterisk is not running!"))
-		'</span></p>'
-	elif not manager.isLoggedIn():
-		# TODO: describe how to set this up
-		'<p><span class="errornotice">'
-		htmltext(_("The manager access is not working!"))
-		'</span></p>'
-	elif request.session.phone: 
-		phone = backend.getConfiglet(name=request.session.phone)
-		phone.fixup()
-		phoneState(phone)
-	else:
-		'<p><span class="errornotice">'
-		htmltext(_("You don't have an associated phone"))
-		'</span></p>'
-	footer()
 
+class Page(AccessControlled, Directory): 
+
+	_q_parent  = 'page_user'
+	_q_title   = _("Phone State")
+	_q_desc    = _("Status of your phone")
+	_q_link    = 'state'
+	_q_menupos = 10
+	_q_level   = 1
+
+	_q_exports = ['']
+
+	def _q_access(self):
+		self.session = get_session()
+		self.request = get_request()
+		if self.session.level < self._q_level:
+			cantAccessPage()
+
+	def _q_index [plain] (self):
+		header(self._q_desc,refresh=10)
+		manager.connect()
+		if not manager.isConnected():
+			'<p><span class="errornotice">'
+			htmltext(_("Asterisk is not running!"))
+			'</span></p>'
+		elif not manager.isLoggedIn():
+			# TODO: describe how to set this up
+			'<p><span class="errornotice">'
+			htmltext(_("The manager access is not working!"))
+			'</span></p>'
+		elif self.session.phone: 
+			phone = backend.getConfiglet(name=self.session.phone)
+			phone.fixup()
+			phoneState(phone)
+		else:
+			'<p><span class="errornotice">'
+			htmltext(_("You don't have an associated phone"))
+			'</span></p>'
+		footer()
+

Copied: trunk/session.py (from rev 576, branches/quixote2/session.py)



From admin at berlios.de  Tue Jan 23 07:49:01 2007
From: admin at berlios.de (admin at berlios.de)
Date: Tue, 23 Jan 2007 01:49:01 -0500 (COT)
Subject: [Destar-dev] [Bug #10100] optional is not working
Message-ID: <200701230649.l0N6n10p026311@unicorn.berlios.de>

Bug #10100, was updated on 2007-Jan-23 01:49
Here is a current snapshot of the bug.

Project: DeStar
Category: None
Status: Open
Resolution: None
Bug Group: None
Priority: 7
Submitted by: dasenjo
Assigned to : none
Summary: optional is not working

Details: In some configlet variables the optional=True param is not working, e.g. cfg_opt_sip_network.py. Check out the asterisk (requied star) in the web (string) widget.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=10100&group_id=2112


From admin at berlios.de  Sat Jan 27 05:31:27 2007
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 26 Jan 2007 23:31:27 -0500 (COT)
Subject: [Destar-dev] [Bug #10130] destar's css are not loaded
Message-ID: <200701270431.l0R4VRf3016642@unicorn.berlios.de>

Bug #10130, was updated on 2007-Jan-26 23:31
Here is a current snapshot of the bug.

Project: DeStar
Category: web interface
Status: Open
Resolution: None
Bug Group: None
Priority: 5
Submitted by: santiago
Assigned to : none
Summary: destar's css are not loaded

Details: in trunk, destar isn't loading any css.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=10130&group_id=2112


From santiago at mail.berlios.de  Mon Jan 29 15:48:38 2007
From: santiago at mail.berlios.de (santiago at BerliOS)
Date: Mon, 29 Jan 2007 15:48:38 +0100
Subject: [Destar-dev] r578 - trunk
Message-ID: <200701291448.l0TEmcTE001950@sheep.berlios.de>

Author: santiago
Date: 2007-01-29 15:48:37 +0100 (Mon, 29 Jan 2007)
New Revision: 578

Modified:
   trunk/CHANGELOG.txt
   trunk/Publisher.py
Log:
* Added "filter_output" publisher's funcion. It changed everything to text/html content-type,
  including css. Needs some revision. Fixes bug #10130



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-23 00:01:51 UTC (rev 577)
+++ trunk/CHANGELOG.txt	2007-01-29 14:48:37 UTC (rev 578)
@@ -1,3 +1,7 @@
+2007-01-29:
+* Added "filter_output" publisher's funcion. It changed everything to text/html content-type,
+  including css. Needs some revision. Fixes bug #10130
+
 2007-01-22:
 * Merged last changes from quixote2 branch into trunk
 

Modified: trunk/Publisher.py
===================================================================
--- trunk/Publisher.py	2007-01-23 00:01:51 UTC (rev 577)
+++ trunk/Publisher.py	2007-01-29 14:48:37 UTC (rev 578)
@@ -65,9 +65,9 @@
 
 	def filter_output(self, request, output):
 		output = Publisher.filter_output(self, request, output)
-		resp = request.response
-		if resp.get_header('Content-Type') in (None, 'text/html'):
-			resp.set_header('Content-Type','text/html; charset=%s' % language.encoding() )
+		#resp = request.response
+		#if resp.get_header('Content-Type') in (None, 'text/html'):
+		#	resp.set_header('Content-Type','text/html; charset=%s' % language.encoding() )
 		return output
 
 



From admin at berlios.de  Mon Jan 29 15:48:47 2007
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 29 Jan 2007 09:48:47 -0500 (COT)
Subject: [Destar-dev] [Bug #10130] destar's css are not loaded
Message-ID: <200701291448.l0TEmlFj015781@unicorn.berlios.de>

Bug #10130, was updated on 2007-Jan-26 23:31
Here is a current snapshot of the bug.

Project: DeStar
Category: web interface
Status: Open
Resolution: None
Bug Group: None
Priority: 5
Submitted by: santiago
Assigned to : none
Summary: destar's css are not loaded

Details: in trunk, destar isn't loading any css.

Follow-Ups:

Date: 2007-Jan-29 09:48
By: santiago

Comment:
Fixed after rev 578
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=10130&group_id=2112


From admin at berlios.de  Tue Jan 30 04:58:37 2007
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 29 Jan 2007 22:58:37 -0500 (COT)
Subject: [Destar-dev] [Bug #10130] destar's css are not loaded
Message-ID: <200701300358.l0U3wbJ0013254@unicorn.berlios.de>

Bug #10130, was updated on 2007-Jan-26 23:31
Here is a current snapshot of the bug.

Project: DeStar
Category: web interface
Status: Closed
Resolution: Fixed
Bug Group: None
Priority: 5
Submitted by: santiago
Assigned to : none
Summary: destar's css are not loaded

Details: in trunk, destar isn't loading any css.

Follow-Ups:

Date: 2007-Jan-29 09:48
By: santiago

Comment:
Fixed after rev 578
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=10130&group_id=2112


From admin at berlios.de  Tue Jan 30 07:01:36 2007
From: admin at berlios.de (admin at berlios.de)
Date: Tue, 30 Jan 2007 01:01:36 -0500 (COT)
Subject: [Destar-dev] [Bug #10163] Missing comprobation in some ptls
Message-ID: <200701300601.l0U61aJd003032@unicorn.berlios.de>

Bug #10163, was updated on 2007-Jan-30 01:01
Here is a current snapshot of the bug.

Project: DeStar
Category: None
Status: Open
Resolution: None
Bug Group: None
Priority: 4
Submitted by: dasenjo
Assigned to : none
Summary: Missing comprobation in some ptls

Details: There are not managed errors in:

http:/url/config/add
                       ...down
                       ...up
                       ...edit

The error traceback is:

Traceback (most recent call last):
  File "/usr/lib/python2.4/site-packages/quixote/publish.py", line 278, in process_request
    output = self.try_publish(request)
  File "/usr/lib/python2.4/site-packages/quixote/publish.py", line 256, in try_publish
    output = self.root_directory._q_traverse(components)
  File "/usr/lib/python2.4/site-packages/quixote/directory.py", line 94, in _q_traverse
    return super(AccessControlled, self)._q_traverse(path)
  File "/usr/lib/python2.4/site-packages/quixote/directory.py", line 66, in _q_traverse
    return obj._q_traverse(path)
  File "/usr/lib/python2.4/site-packages/quixote/directory.py", line 94, in _q_traverse
    return super(AccessControlled, self)._q_traverse(path)
  File "/usr/lib/python2.4/site-packages/quixote/directory.py", line 66, in _q_traverse
    return obj._q_traverse(path)
  File "/usr/lib/python2.4/site-packages/quixote/directory.py", line 94, in _q_traverse
    return super(AccessControlled, self)._q_traverse(path)
  File "/usr/lib/python2.4/site-packages/quixote/directory.py", line 58, in _q_traverse
    obj = getattr(self, name)
AttributeError: 'Page' object has no attribute '_q_index'

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=10163&group_id=2112


From dasenjo at mail.berlios.de  Tue Jan 30 07:08:45 2007
From: dasenjo at mail.berlios.de (dasenjo at BerliOS)
Date: Tue, 30 Jan 2007 07:08:45 +0100
Subject: [Destar-dev] r579 - trunk
Message-ID: <200701300608.l0U68j8s009493@sheep.berlios.de>

Author: dasenjo
Date: 2007-01-30 07:08:39 +0100 (Tue, 30 Jan 2007)
New Revision: 579

Modified:
   trunk/CHANGELOG.txt
   trunk/ConfigHelper.ptl
   trunk/page_config_edit.ptl
   trunk/page_login.ptl
   trunk/page_user_settings.ptl
Log:
* Bug fixes related with request object and redirect function.



Modified: trunk/CHANGELOG.txt
===================================================================
--- trunk/CHANGELOG.txt	2007-01-29 14:48:37 UTC (rev 578)
+++ trunk/CHANGELOG.txt	2007-01-30 06:08:39 UTC (rev 579)
@@ -1,3 +1,6 @@
+2007-01-30:
+* Bug fixes related with request object and redirect function.
+
 2007-01-29:
 * Added "filter_output" publisher's funcion. It changed everything to text/html content-type,
   including css. Needs some revision. Fixes bug #10130

Modified: trunk/ConfigHelper.ptl
===================================================================
--- trunk/ConfigHelper.ptl	2007-01-29 14:48:37 UTC (rev 578)
+++ trunk/ConfigHelper.ptl	2007-01-30 06:08:39 UTC (rev 579)
@@ -21,6 +21,7 @@
 from Templates import *
 from quixote.form import *
 from quixote.html import htmlescape
+from quixote import redirect
 import backend
 import types, string
 
@@ -244,16 +245,16 @@
 	form = Form()
 
 	if request.form.has_key('_cancel'):
-		return request.redirect(exitPath)
+		return redirect(exitPath)
 	if request.form.has_key('_delete'):
 		if obj.hasDependencies():
 			return showDependencies()
 		else:
 			backend.deleteConfiglet(obj._id)
-			return request.redirect(exitPath)
+			return redirect(exitPath)
 	if request.form.has_key('_cascade_delete'):
 		backend.deleteConfiglet(obj._id)
-		return request.redirect(exitPath)
+		return redirect(exitPath)
 
 
 	do_update = False
@@ -339,4 +340,4 @@
 	if form.has_errors():
 		return render()
 	saveConfig()
-	return request.redirect(exitPath)
+	return redirect(exitPath)

Modified: trunk/page_config_edit.ptl
===================================================================
--- trunk/page_config_edit.ptl	2007-01-29 14:48:37 UTC (rev 578)
+++ trunk/page_config_edit.ptl	2007-01-30 06:08:39 UTC (rev 579)
@@ -43,7 +43,7 @@
 		obj = backend.getConfiglet(component)
 		if obj is not None:
 			obj.fixup()
-			return configletsForm(request, obj, _(obj.shortName), exitPath = "../" + obj.groupName.lower())
+			return configletsForm(self.request, obj, _(obj.shortName), exitPath = "../" + obj.groupName.lower())
 		else:
 			return errorpage(_("Object does not exist"))
 

Modified: trunk/page_login.ptl
===================================================================
--- trunk/page_login.ptl	2007-01-29 14:48:37 UTC (rev 578)
+++ trunk/page_login.ptl	2007-01-30 06:08:39 UTC (rev 579)
@@ -43,7 +43,7 @@
 	def loginForm(self, exitPath=".", render=0):
 
 		if self.request.form.has_key('_cancel'):
-			return self.request.redirect(exitPath)
+			return redirect(exitPath)
 		form = Form()
 
 		form.add(StringWidget, "name",  "",  title=htmltext(_("User or phone name/number")), required=True)

Modified: trunk/page_user_settings.ptl
===================================================================
--- trunk/page_user_settings.ptl	2007-01-29 14:48:37 UTC (rev 578)
+++ trunk/page_user_settings.ptl	2007-01-30 06:08:39 UTC (rev 579)
@@ -28,7 +28,7 @@
 def phoneSettingsForm(self, phone, exitPath=".."):
 
 	if self.form.has_key('_cancel'):
-		return request.redirect(exitPath)
+		return redirect(exitPath)
 	form = Form()
 
 	dnd  = manager.getVar('DND/%s' % phone.pbx,  phone.ext, False)



From hholzer at mail.berlios.de  Tue Jan 30 22:53:18 2007
From: hholzer at mail.berlios.de (hholzer at mail.berlios.de)
Date: Tue, 30 Jan 2007 22:53:18 +0100
Subject: [Destar-dev] r580 - branches/0.2.X
Message-ID: <200701302153.l0ULrIsQ020405@sheep.berlios.de>

Author: hholzer
Date: 2007-01-30 22:53:16 +0100 (Tue, 30 Jan 2007)
New Revision: 580

Modified:
   branches/0.2.X/backend.py
   branches/0.2.X/cfg_app_callfw.py
   branches/0.2.X/cfg_app_voicemailsettings.py
   branches/0.2.X/configlets.py
Log:
fix broken busy dialplan path
fix for voicemail pin clearing
make devstate settings optional


Modified: branches/0.2.X/backend.py
===================================================================
--- branches/0.2.X/backend.py	2007-01-30 06:08:39 UTC (rev 579)
+++ branches/0.2.X/backend.py	2007-01-30 21:53:16 UTC (rev 580)
@@ -217,13 +217,13 @@
 	c.append("exten=s,n,Set(prng=${DB(PRNG/${ARG4}/${ARG3})})")
 	c.append(";")
 	c.append("; Dial")
-	c.append("exten=s,n(MainDial),NoOp()")
+	c.append("exten=s,n(dialstart),NoOp()")
         if tapisupport:
                 c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: LINE_NEWCALL ${ARG1})")
                 c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: LINE_CALLSTATE LINECALLSTATE_OFFERING)")
                 c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: SET CALLERID ${CALLERID})")
                 c.append("exten=s,n,UserEvent(TAPI|TAPIEVENT: LINE_CALLINFO LINECALLINFOSTATE_CALLERID)")
-	c.append("exten=s,n,Dial(${ARG1}${prng},${dsec},TtWw${dopt})")
+	c.append("exten=s,n(MainDial),Dial(${ARG1}${prng},${dsec},TtWw${dopt})")
 	c.append(";")
 	c.append("; Dial result was 'timeout'")
 	c.append("exten=s,n(dialtimeout),Set(fw_ext=${DB(CFTO/${ARG4}/${ARG3})})")

Modified: branches/0.2.X/cfg_app_callfw.py
===================================================================
--- branches/0.2.X/cfg_app_callfw.py	2007-01-30 06:08:39 UTC (rev 579)
+++ branches/0.2.X/cfg_app_callfw.py	2007-01-30 21:53:16 UTC (rev 580)
@@ -35,7 +35,7 @@
 			VarType("set",      title=_("Setting preffix"), len=6, default="*21"),
 			VarType("ext",   title=_("Unsetting extension"), len=6, default="*22"),
 			VarType("toggle",   title=_("Set function toggleable"), type="bool"),
-			VarType("devstateprefix",   title=_("Create Devstate extension. Devstate Prefix:"), len=8, default="")
+			VarType("devstateprefix",   title=_("Create Devstate extension. Devstate Prefix:"), len=8, optional=True, default="")
 		       	]
 
 		self.dependencies = [ DepType("pbx", 

Modified: branches/0.2.X/cfg_app_voicemailsettings.py
===================================================================
--- branches/0.2.X/cfg_app_voicemailsettings.py	2007-01-30 06:08:39 UTC (rev 579)
+++ branches/0.2.X/cfg_app_voicemailsettings.py	2007-01-30 21:53:16 UTC (rev 580)
@@ -53,6 +53,7 @@
 			VarType("devstateprefix",
 				title=_("Create Devstate extension. Devstate Prefix:"),
 				len=8,
+				optional=True,
 				default="")
 		       	]
 

Modified: branches/0.2.X/configlets.py
===================================================================
--- branches/0.2.X/configlets.py	2007-01-30 06:08:39 UTC (rev 579)
+++ branches/0.2.X/configlets.py	2007-01-30 21:53:16 UTC (rev 580)
@@ -1022,8 +1022,10 @@
 
 			vm = AstConf("voicemail.conf")
 			vm.setSection(self.pbx)
+			pin = ""
 			try:
-				pin = self.pin
+			        if self.pin != None:
+				        pin = self.pin
 			except:
 				pin = ""
 			#TODO: deal with timezones



